contract "sha3.sol:Sha3" {

define @"keccak_f.t_function_internal_pure$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$returns$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$"(%A_0) {
entry:
  %tmp = call @"ielert.memory.allocate"(25)
  %_1 = %tmp
  %tmp1 = call @"Round.t_function_internal_pure$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$_t_uint64_$returns$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$"(%A_0, 1)
  %A_0 = %tmp1
  %tmp3 = call @"Round.t_function_internal_pure$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$_t_uint64_$returns$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$"(%A_0, 32898)
  %A_0 = %tmp3
  %tmp5 = call @"Round.t_function_internal_pure$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$_t_uint64_$returns$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$"(%A_0, 9223372036854808714)
  %A_0 = %tmp5
  %tmp7 = call @"Round.t_function_internal_pure$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$_t_uint64_$returns$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$"(%A_0, 9223372039002292224)
  %A_0 = %tmp7
  %tmp9 = call @"Round.t_function_internal_pure$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$_t_uint64_$returns$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$"(%A_0, 32907)
  %A_0 = %tmp9
  %tmp11 = call @"Round.t_function_internal_pure$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$_t_uint64_$returns$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$"(%A_0, 2147483649)
  %A_0 = %tmp11
  %tmp13 = call @"Round.t_function_internal_pure$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$_t_uint64_$returns$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$"(%A_0, 9223372039002292353)
  %A_0 = %tmp13
  %tmp15 = call @"Round.t_function_internal_pure$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$_t_uint64_$returns$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$"(%A_0, 9223372036854808585)
  %A_0 = %tmp15
  %tmp17 = call @"Round.t_function_internal_pure$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$_t_uint64_$returns$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$"(%A_0, 138)
  %A_0 = %tmp17
  %tmp19 = call @"Round.t_function_internal_pure$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$_t_uint64_$returns$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$"(%A_0, 136)
  %A_0 = %tmp19
  %tmp21 = call @"Round.t_function_internal_pure$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$_t_uint64_$returns$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$"(%A_0, 2147516425)
  %A_0 = %tmp21
  %tmp23 = call @"Round.t_function_internal_pure$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$_t_uint64_$returns$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$"(%A_0, 2147483658)
  %A_0 = %tmp23
  %tmp25 = call @"Round.t_function_internal_pure$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$_t_uint64_$returns$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$"(%A_0, 2147516555)
  %A_0 = %tmp25
  %tmp27 = call @"Round.t_function_internal_pure$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$_t_uint64_$returns$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$"(%A_0, 9223372036854775947)
  %A_0 = %tmp27
  %tmp29 = call @"Round.t_function_internal_pure$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$_t_uint64_$returns$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$"(%A_0, 9223372036854808713)
  %A_0 = %tmp29
  %tmp31 = call @"Round.t_function_internal_pure$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$_t_uint64_$returns$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$"(%A_0, 9223372036854808579)
  %A_0 = %tmp31
  %tmp33 = call @"Round.t_function_internal_pure$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$_t_uint64_$returns$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$"(%A_0, 9223372036854808578)
  %A_0 = %tmp33
  %tmp35 = call @"Round.t_function_internal_pure$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$_t_uint64_$returns$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$"(%A_0, 9223372036854775936)
  %A_0 = %tmp35
  %tmp37 = call @"Round.t_function_internal_pure$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$_t_uint64_$returns$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$"(%A_0, 32778)
  %A_0 = %tmp37
  %tmp39 = call @"Round.t_function_internal_pure$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$_t_uint64_$returns$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$"(%A_0, 9223372039002259466)
  %A_0 = %tmp39
  %tmp41 = call @"Round.t_function_internal_pure$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$_t_uint64_$returns$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$"(%A_0, 9223372039002292353)
  %A_0 = %tmp41
  %tmp43 = call @"Round.t_function_internal_pure$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$_t_uint64_$returns$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$"(%A_0, 9223372036854808704)
  %A_0 = %tmp43
  %tmp45 = call @"Round.t_function_internal_pure$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$_t_uint64_$returns$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$"(%A_0, 2147483649)
  %A_0 = %tmp45
  %tmp47 = call @"Round.t_function_internal_pure$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$_t_uint64_$returns$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$"(%A_0, 9223372039002292232)
  %A_0 = %tmp47
  %_1 = %A_0
  br return

return:
  ret %_1
}

define @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%x_2, %n_3) {
entry:
  %out.of.range = cmp lt %n_3, 0
  br %out.of.range, throw
  %tmp = shift %x_2, %n_3
  %tmp = twos 8, %tmp
  %tmp1 = sub 64, %n_3
  %tmp2 = sub 0, %tmp1
  %out.of.range3 = cmp lt %tmp1, 0
  br %out.of.range3, throw
  %tmp4 = shift %x_2, %tmp2
  %tmp5 = or %tmp, %tmp4
  %_4 = %tmp5
  br return

return:
  ret %_4

throw:
  revert -1
}

define @"Round.t_function_internal_pure$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$_t_uint64_$returns$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$"(%A_5, %RCi_6) {
entry:
  %tmp = call @"ielert.memory.allocate"(5)
  %C_8 = %tmp
  %tmp1 = call @"ielert.memory.allocate"(5)
  %D_9 = %tmp1
  %tmp2 = call @"ielert.memory.allocate"(25)
  %B_10 = %tmp2
  %tmp3 = call @"ielert.memory.allocate"(25)
  %_7 = %tmp3
  %tmp4 = mul 0, 5
  %index.out.of.range = cmp lt 0, 0
  br %index.out.of.range, throw
  %index.out.of.range = cmp ge 0, 25
  br %index.out.of.range, throw
  %tmp5 = add %A_5, %tmp4
  %tmp7 = 0
  %index.out.of.range8 = cmp lt 0, 0
  br %index.out.of.range8, throw
  %index.out.of.range8 = cmp ge 0, 5
  br %index.out.of.range8, throw
  %tmp9 = add %tmp5, %tmp7
  %loaded.val = load %tmp9
  %tmp11 = mul 0, 5
  %index.out.of.range12 = cmp lt 0, 0
  br %index.out.of.range12, throw
  %index.out.of.range12 = cmp ge 0, 25
  br %index.out.of.range12, throw
  %tmp13 = add %A_5, %tmp11
  %tmp15 = 1
  %index.out.of.range16 = cmp lt 1, 0
  br %index.out.of.range16, throw
  %index.out.of.range16 = cmp ge 1, 5
  br %index.out.of.range16, throw
  %tmp17 = add %tmp13, %tmp15
  %loaded.val18 = load %tmp17
  %tmp19 = xor %loaded.val, %loaded.val18
  %tmp21 = mul 0, 5
  %index.out.of.range22 = cmp lt 0, 0
  br %index.out.of.range22, throw
  %index.out.of.range22 = cmp ge 0, 25
  br %index.out.of.range22, throw
  %tmp23 = add %A_5, %tmp21
  %tmp25 = 2
  %index.out.of.range26 = cmp lt 2, 0
  br %index.out.of.range26, throw
  %index.out.of.range26 = cmp ge 2, 5
  br %index.out.of.range26, throw
  %tmp27 = add %tmp23, %tmp25
  %loaded.val28 = load %tmp27
  %tmp29 = xor %tmp19, %loaded.val28
  %tmp31 = mul 0, 5
  %index.out.of.range32 = cmp lt 0, 0
  br %index.out.of.range32, throw
  %index.out.of.range32 = cmp ge 0, 25
  br %index.out.of.range32, throw
  %tmp33 = add %A_5, %tmp31
  %tmp35 = 3
  %index.out.of.range36 = cmp lt 3, 0
  br %index.out.of.range36, throw
  %index.out.of.range36 = cmp ge 3, 5
  br %index.out.of.range36, throw
  %tmp37 = add %tmp33, %tmp35
  %loaded.val38 = load %tmp37
  %tmp39 = xor %tmp29, %loaded.val38
  %tmp41 = mul 0, 5
  %index.out.of.range42 = cmp lt 0, 0
  br %index.out.of.range42, throw
  %index.out.of.range42 = cmp ge 0, 25
  br %index.out.of.range42, throw
  %tmp43 = add %A_5, %tmp41
  %tmp45 = 4
  %index.out.of.range46 = cmp lt 4, 0
  br %index.out.of.range46, throw
  %index.out.of.range46 = cmp ge 4, 5
  br %index.out.of.range46, throw
  %tmp47 = add %tmp43, %tmp45
  %loaded.val48 = load %tmp47
  %tmp49 = xor %tmp39, %loaded.val48
  %tmp51 = 0
  %index.out.of.range52 = cmp lt 0, 0
  br %index.out.of.range52, throw
  %index.out.of.range52 = cmp ge 0, 5
  br %index.out.of.range52, throw
  %tmp53 = add %C_8, %tmp51
  store %tmp49, %tmp53
  %tmp55 = mul 1, 5
  %index.out.of.range56 = cmp lt 1, 0
  br %index.out.of.range56, throw
  %index.out.of.range56 = cmp ge 1, 25
  br %index.out.of.range56, throw
  %tmp57 = add %A_5, %tmp55
  %tmp59 = 0
  %index.out.of.range60 = cmp lt 0, 0
  br %index.out.of.range60, throw
  %index.out.of.range60 = cmp ge 0, 5
  br %index.out.of.range60, throw
  %tmp61 = add %tmp57, %tmp59
  %loaded.val62 = load %tmp61
  %tmp64 = mul 1, 5
  %index.out.of.range65 = cmp lt 1, 0
  br %index.out.of.range65, throw
  %index.out.of.range65 = cmp ge 1, 25
  br %index.out.of.range65, throw
  %tmp66 = add %A_5, %tmp64
  %tmp68 = 1
  %index.out.of.range69 = cmp lt 1, 0
  br %index.out.of.range69, throw
  %index.out.of.range69 = cmp ge 1, 5
  br %index.out.of.range69, throw
  %tmp70 = add %tmp66, %tmp68
  %loaded.val71 = load %tmp70
  %tmp72 = xor %loaded.val62, %loaded.val71
  %tmp74 = mul 1, 5
  %index.out.of.range75 = cmp lt 1, 0
  br %index.out.of.range75, throw
  %index.out.of.range75 = cmp ge 1, 25
  br %index.out.of.range75, throw
  %tmp76 = add %A_5, %tmp74
  %tmp78 = 2
  %index.out.of.range79 = cmp lt 2, 0
  br %index.out.of.range79, throw
  %index.out.of.range79 = cmp ge 2, 5
  br %index.out.of.range79, throw
  %tmp80 = add %tmp76, %tmp78
  %loaded.val81 = load %tmp80
  %tmp82 = xor %tmp72, %loaded.val81
  %tmp84 = mul 1, 5
  %index.out.of.range85 = cmp lt 1, 0
  br %index.out.of.range85, throw
  %index.out.of.range85 = cmp ge 1, 25
  br %index.out.of.range85, throw
  %tmp86 = add %A_5, %tmp84
  %tmp88 = 3
  %index.out.of.range89 = cmp lt 3, 0
  br %index.out.of.range89, throw
  %index.out.of.range89 = cmp ge 3, 5
  br %index.out.of.range89, throw
  %tmp90 = add %tmp86, %tmp88
  %loaded.val91 = load %tmp90
  %tmp92 = xor %tmp82, %loaded.val91
  %tmp94 = mul 1, 5
  %index.out.of.range95 = cmp lt 1, 0
  br %index.out.of.range95, throw
  %index.out.of.range95 = cmp ge 1, 25
  br %index.out.of.range95, throw
  %tmp96 = add %A_5, %tmp94
  %tmp98 = 4
  %index.out.of.range99 = cmp lt 4, 0
  br %index.out.of.range99, throw
  %index.out.of.range99 = cmp ge 4, 5
  br %index.out.of.range99, throw
  %tmp100 = add %tmp96, %tmp98
  %loaded.val101 = load %tmp100
  %tmp102 = xor %tmp92, %loaded.val101
  %tmp104 = 1
  %index.out.of.range105 = cmp lt 1, 0
  br %index.out.of.range105, throw
  %index.out.of.range105 = cmp ge 1, 5
  br %index.out.of.range105, throw
  %tmp106 = add %C_8, %tmp104
  store %tmp102, %tmp106
  %tmp108 = mul 2, 5
  %index.out.of.range109 = cmp lt 2, 0
  br %index.out.of.range109, throw
  %index.out.of.range109 = cmp ge 2, 25
  br %index.out.of.range109, throw
  %tmp110 = add %A_5, %tmp108
  %tmp112 = 0
  %index.out.of.range113 = cmp lt 0, 0
  br %index.out.of.range113, throw
  %index.out.of.range113 = cmp ge 0, 5
  br %index.out.of.range113, throw
  %tmp114 = add %tmp110, %tmp112
  %loaded.val115 = load %tmp114
  %tmp117 = mul 2, 5
  %index.out.of.range118 = cmp lt 2, 0
  br %index.out.of.range118, throw
  %index.out.of.range118 = cmp ge 2, 25
  br %index.out.of.range118, throw
  %tmp119 = add %A_5, %tmp117
  %tmp121 = 1
  %index.out.of.range122 = cmp lt 1, 0
  br %index.out.of.range122, throw
  %index.out.of.range122 = cmp ge 1, 5
  br %index.out.of.range122, throw
  %tmp123 = add %tmp119, %tmp121
  %loaded.val124 = load %tmp123
  %tmp125 = xor %loaded.val115, %loaded.val124
  %tmp127 = mul 2, 5
  %index.out.of.range128 = cmp lt 2, 0
  br %index.out.of.range128, throw
  %index.out.of.range128 = cmp ge 2, 25
  br %index.out.of.range128, throw
  %tmp129 = add %A_5, %tmp127
  %tmp131 = 2
  %index.out.of.range132 = cmp lt 2, 0
  br %index.out.of.range132, throw
  %index.out.of.range132 = cmp ge 2, 5
  br %index.out.of.range132, throw
  %tmp133 = add %tmp129, %tmp131
  %loaded.val134 = load %tmp133
  %tmp135 = xor %tmp125, %loaded.val134
  %tmp137 = mul 2, 5
  %index.out.of.range138 = cmp lt 2, 0
  br %index.out.of.range138, throw
  %index.out.of.range138 = cmp ge 2, 25
  br %index.out.of.range138, throw
  %tmp139 = add %A_5, %tmp137
  %tmp141 = 3
  %index.out.of.range142 = cmp lt 3, 0
  br %index.out.of.range142, throw
  %index.out.of.range142 = cmp ge 3, 5
  br %index.out.of.range142, throw
  %tmp143 = add %tmp139, %tmp141
  %loaded.val144 = load %tmp143
  %tmp145 = xor %tmp135, %loaded.val144
  %tmp147 = mul 2, 5
  %index.out.of.range148 = cmp lt 2, 0
  br %index.out.of.range148, throw
  %index.out.of.range148 = cmp ge 2, 25
  br %index.out.of.range148, throw
  %tmp149 = add %A_5, %tmp147
  %tmp151 = 4
  %index.out.of.range152 = cmp lt 4, 0
  br %index.out.of.range152, throw
  %index.out.of.range152 = cmp ge 4, 5
  br %index.out.of.range152, throw
  %tmp153 = add %tmp149, %tmp151
  %loaded.val154 = load %tmp153
  %tmp155 = xor %tmp145, %loaded.val154
  %tmp157 = 2
  %index.out.of.range158 = cmp lt 2, 0
  br %index.out.of.range158, throw
  %index.out.of.range158 = cmp ge 2, 5
  br %index.out.of.range158, throw
  %tmp159 = add %C_8, %tmp157
  store %tmp155, %tmp159
  %tmp161 = mul 3, 5
  %index.out.of.range162 = cmp lt 3, 0
  br %index.out.of.range162, throw
  %index.out.of.range162 = cmp ge 3, 25
  br %index.out.of.range162, throw
  %tmp163 = add %A_5, %tmp161
  %tmp165 = 0
  %index.out.of.range166 = cmp lt 0, 0
  br %index.out.of.range166, throw
  %index.out.of.range166 = cmp ge 0, 5
  br %index.out.of.range166, throw
  %tmp167 = add %tmp163, %tmp165
  %loaded.val168 = load %tmp167
  %tmp170 = mul 3, 5
  %index.out.of.range171 = cmp lt 3, 0
  br %index.out.of.range171, throw
  %index.out.of.range171 = cmp ge 3, 25
  br %index.out.of.range171, throw
  %tmp172 = add %A_5, %tmp170
  %tmp174 = 1
  %index.out.of.range175 = cmp lt 1, 0
  br %index.out.of.range175, throw
  %index.out.of.range175 = cmp ge 1, 5
  br %index.out.of.range175, throw
  %tmp176 = add %tmp172, %tmp174
  %loaded.val177 = load %tmp176
  %tmp178 = xor %loaded.val168, %loaded.val177
  %tmp180 = mul 3, 5
  %index.out.of.range181 = cmp lt 3, 0
  br %index.out.of.range181, throw
  %index.out.of.range181 = cmp ge 3, 25
  br %index.out.of.range181, throw
  %tmp182 = add %A_5, %tmp180
  %tmp184 = 2
  %index.out.of.range185 = cmp lt 2, 0
  br %index.out.of.range185, throw
  %index.out.of.range185 = cmp ge 2, 5
  br %index.out.of.range185, throw
  %tmp186 = add %tmp182, %tmp184
  %loaded.val187 = load %tmp186
  %tmp188 = xor %tmp178, %loaded.val187
  %tmp190 = mul 3, 5
  %index.out.of.range191 = cmp lt 3, 0
  br %index.out.of.range191, throw
  %index.out.of.range191 = cmp ge 3, 25
  br %index.out.of.range191, throw
  %tmp192 = add %A_5, %tmp190
  %tmp194 = 3
  %index.out.of.range195 = cmp lt 3, 0
  br %index.out.of.range195, throw
  %index.out.of.range195 = cmp ge 3, 5
  br %index.out.of.range195, throw
  %tmp196 = add %tmp192, %tmp194
  %loaded.val197 = load %tmp196
  %tmp198 = xor %tmp188, %loaded.val197
  %tmp200 = mul 3, 5
  %index.out.of.range201 = cmp lt 3, 0
  br %index.out.of.range201, throw
  %index.out.of.range201 = cmp ge 3, 25
  br %index.out.of.range201, throw
  %tmp202 = add %A_5, %tmp200
  %tmp204 = 4
  %index.out.of.range205 = cmp lt 4, 0
  br %index.out.of.range205, throw
  %index.out.of.range205 = cmp ge 4, 5
  br %index.out.of.range205, throw
  %tmp206 = add %tmp202, %tmp204
  %loaded.val207 = load %tmp206
  %tmp208 = xor %tmp198, %loaded.val207
  %tmp210 = 3
  %index.out.of.range211 = cmp lt 3, 0
  br %index.out.of.range211, throw
  %index.out.of.range211 = cmp ge 3, 5
  br %index.out.of.range211, throw
  %tmp212 = add %C_8, %tmp210
  store %tmp208, %tmp212
  %tmp214 = mul 4, 5
  %index.out.of.range215 = cmp lt 4, 0
  br %index.out.of.range215, throw
  %index.out.of.range215 = cmp ge 4, 25
  br %index.out.of.range215, throw
  %tmp216 = add %A_5, %tmp214
  %tmp218 = 0
  %index.out.of.range219 = cmp lt 0, 0
  br %index.out.of.range219, throw
  %index.out.of.range219 = cmp ge 0, 5
  br %index.out.of.range219, throw
  %tmp220 = add %tmp216, %tmp218
  %loaded.val221 = load %tmp220
  %tmp223 = mul 4, 5
  %index.out.of.range224 = cmp lt 4, 0
  br %index.out.of.range224, throw
  %index.out.of.range224 = cmp ge 4, 25
  br %index.out.of.range224, throw
  %tmp225 = add %A_5, %tmp223
  %tmp227 = 1
  %index.out.of.range228 = cmp lt 1, 0
  br %index.out.of.range228, throw
  %index.out.of.range228 = cmp ge 1, 5
  br %index.out.of.range228, throw
  %tmp229 = add %tmp225, %tmp227
  %loaded.val230 = load %tmp229
  %tmp231 = xor %loaded.val221, %loaded.val230
  %tmp233 = mul 4, 5
  %index.out.of.range234 = cmp lt 4, 0
  br %index.out.of.range234, throw
  %index.out.of.range234 = cmp ge 4, 25
  br %index.out.of.range234, throw
  %tmp235 = add %A_5, %tmp233
  %tmp237 = 2
  %index.out.of.range238 = cmp lt 2, 0
  br %index.out.of.range238, throw
  %index.out.of.range238 = cmp ge 2, 5
  br %index.out.of.range238, throw
  %tmp239 = add %tmp235, %tmp237
  %loaded.val240 = load %tmp239
  %tmp241 = xor %tmp231, %loaded.val240
  %tmp243 = mul 4, 5
  %index.out.of.range244 = cmp lt 4, 0
  br %index.out.of.range244, throw
  %index.out.of.range244 = cmp ge 4, 25
  br %index.out.of.range244, throw
  %tmp245 = add %A_5, %tmp243
  %tmp247 = 3
  %index.out.of.range248 = cmp lt 3, 0
  br %index.out.of.range248, throw
  %index.out.of.range248 = cmp ge 3, 5
  br %index.out.of.range248, throw
  %tmp249 = add %tmp245, %tmp247
  %loaded.val250 = load %tmp249
  %tmp251 = xor %tmp241, %loaded.val250
  %tmp253 = mul 4, 5
  %index.out.of.range254 = cmp lt 4, 0
  br %index.out.of.range254, throw
  %index.out.of.range254 = cmp ge 4, 25
  br %index.out.of.range254, throw
  %tmp255 = add %A_5, %tmp253
  %tmp257 = 4
  %index.out.of.range258 = cmp lt 4, 0
  br %index.out.of.range258, throw
  %index.out.of.range258 = cmp ge 4, 5
  br %index.out.of.range258, throw
  %tmp259 = add %tmp255, %tmp257
  %loaded.val260 = load %tmp259
  %tmp261 = xor %tmp251, %loaded.val260
  %tmp263 = 4
  %index.out.of.range264 = cmp lt 4, 0
  br %index.out.of.range264, throw
  %index.out.of.range264 = cmp ge 4, 5
  br %index.out.of.range264, throw
  %tmp265 = add %C_8, %tmp263
  store %tmp261, %tmp265
  %tmp267 = 4
  %index.out.of.range268 = cmp lt 4, 0
  br %index.out.of.range268, throw
  %index.out.of.range268 = cmp ge 4, 5
  br %index.out.of.range268, throw
  %tmp269 = add %C_8, %tmp267
  %loaded.val270 = load %tmp269
  %tmp272 = 1
  %index.out.of.range273 = cmp lt 1, 0
  br %index.out.of.range273, throw
  %index.out.of.range273 = cmp ge 1, 5
  br %index.out.of.range273, throw
  %tmp274 = add %C_8, %tmp272
  %loaded.val275 = load %tmp274
  %tmp277 = call @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%loaded.val275, 1)
  %tmp278 = xor %loaded.val270, %tmp277
  %tmp280 = 0
  %index.out.of.range281 = cmp lt 0, 0
  br %index.out.of.range281, throw
  %index.out.of.range281 = cmp ge 0, 5
  br %index.out.of.range281, throw
  %tmp282 = add %D_9, %tmp280
  store %tmp278, %tmp282
  %tmp284 = 0
  %index.out.of.range285 = cmp lt 0, 0
  br %index.out.of.range285, throw
  %index.out.of.range285 = cmp ge 0, 5
  br %index.out.of.range285, throw
  %tmp286 = add %C_8, %tmp284
  %loaded.val287 = load %tmp286
  %tmp289 = 2
  %index.out.of.range290 = cmp lt 2, 0
  br %index.out.of.range290, throw
  %index.out.of.range290 = cmp ge 2, 5
  br %index.out.of.range290, throw
  %tmp291 = add %C_8, %tmp289
  %loaded.val292 = load %tmp291
  %tmp294 = call @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%loaded.val292, 1)
  %tmp295 = xor %loaded.val287, %tmp294
  %tmp297 = 1
  %index.out.of.range298 = cmp lt 1, 0
  br %index.out.of.range298, throw
  %index.out.of.range298 = cmp ge 1, 5
  br %index.out.of.range298, throw
  %tmp299 = add %D_9, %tmp297
  store %tmp295, %tmp299
  %tmp301 = 1
  %index.out.of.range302 = cmp lt 1, 0
  br %index.out.of.range302, throw
  %index.out.of.range302 = cmp ge 1, 5
  br %index.out.of.range302, throw
  %tmp303 = add %C_8, %tmp301
  %loaded.val304 = load %tmp303
  %tmp306 = 3
  %index.out.of.range307 = cmp lt 3, 0
  br %index.out.of.range307, throw
  %index.out.of.range307 = cmp ge 3, 5
  br %index.out.of.range307, throw
  %tmp308 = add %C_8, %tmp306
  %loaded.val309 = load %tmp308
  %tmp311 = call @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%loaded.val309, 1)
  %tmp312 = xor %loaded.val304, %tmp311
  %tmp314 = 2
  %index.out.of.range315 = cmp lt 2, 0
  br %index.out.of.range315, throw
  %index.out.of.range315 = cmp ge 2, 5
  br %index.out.of.range315, throw
  %tmp316 = add %D_9, %tmp314
  store %tmp312, %tmp316
  %tmp318 = 2
  %index.out.of.range319 = cmp lt 2, 0
  br %index.out.of.range319, throw
  %index.out.of.range319 = cmp ge 2, 5
  br %index.out.of.range319, throw
  %tmp320 = add %C_8, %tmp318
  %loaded.val321 = load %tmp320
  %tmp323 = 4
  %index.out.of.range324 = cmp lt 4, 0
  br %index.out.of.range324, throw
  %index.out.of.range324 = cmp ge 4, 5
  br %index.out.of.range324, throw
  %tmp325 = add %C_8, %tmp323
  %loaded.val326 = load %tmp325
  %tmp328 = call @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%loaded.val326, 1)
  %tmp329 = xor %loaded.val321, %tmp328
  %tmp331 = 3
  %index.out.of.range332 = cmp lt 3, 0
  br %index.out.of.range332, throw
  %index.out.of.range332 = cmp ge 3, 5
  br %index.out.of.range332, throw
  %tmp333 = add %D_9, %tmp331
  store %tmp329, %tmp333
  %tmp335 = 3
  %index.out.of.range336 = cmp lt 3, 0
  br %index.out.of.range336, throw
  %index.out.of.range336 = cmp ge 3, 5
  br %index.out.of.range336, throw
  %tmp337 = add %C_8, %tmp335
  %loaded.val338 = load %tmp337
  %tmp340 = 0
  %index.out.of.range341 = cmp lt 0, 0
  br %index.out.of.range341, throw
  %index.out.of.range341 = cmp ge 0, 5
  br %index.out.of.range341, throw
  %tmp342 = add %C_8, %tmp340
  %loaded.val343 = load %tmp342
  %tmp345 = call @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%loaded.val343, 1)
  %tmp346 = xor %loaded.val338, %tmp345
  %tmp348 = 4
  %index.out.of.range349 = cmp lt 4, 0
  br %index.out.of.range349, throw
  %index.out.of.range349 = cmp ge 4, 5
  br %index.out.of.range349, throw
  %tmp350 = add %D_9, %tmp348
  store %tmp346, %tmp350
  %tmp352 = mul 0, 5
  %index.out.of.range353 = cmp lt 0, 0
  br %index.out.of.range353, throw
  %index.out.of.range353 = cmp ge 0, 25
  br %index.out.of.range353, throw
  %tmp354 = add %A_5, %tmp352
  %tmp356 = 0
  %index.out.of.range357 = cmp lt 0, 0
  br %index.out.of.range357, throw
  %index.out.of.range357 = cmp ge 0, 5
  br %index.out.of.range357, throw
  %tmp358 = add %tmp354, %tmp356
  %loaded.val359 = load %tmp358
  %tmp361 = 0
  %index.out.of.range362 = cmp lt 0, 0
  br %index.out.of.range362, throw
  %index.out.of.range362 = cmp ge 0, 5
  br %index.out.of.range362, throw
  %tmp363 = add %D_9, %tmp361
  %loaded.val364 = load %tmp363
  %tmp365 = xor %loaded.val359, %loaded.val364
  %tmp367 = mul 0, 5
  %index.out.of.range368 = cmp lt 0, 0
  br %index.out.of.range368, throw
  %index.out.of.range368 = cmp ge 0, 25
  br %index.out.of.range368, throw
  %tmp369 = add %A_5, %tmp367
  %tmp371 = 0
  %index.out.of.range372 = cmp lt 0, 0
  br %index.out.of.range372, throw
  %index.out.of.range372 = cmp ge 0, 5
  br %index.out.of.range372, throw
  %tmp373 = add %tmp369, %tmp371
  store %tmp365, %tmp373
  %tmp375 = mul 0, 5
  %index.out.of.range376 = cmp lt 0, 0
  br %index.out.of.range376, throw
  %index.out.of.range376 = cmp ge 0, 25
  br %index.out.of.range376, throw
  %tmp377 = add %A_5, %tmp375
  %tmp379 = 1
  %index.out.of.range380 = cmp lt 1, 0
  br %index.out.of.range380, throw
  %index.out.of.range380 = cmp ge 1, 5
  br %index.out.of.range380, throw
  %tmp381 = add %tmp377, %tmp379
  %loaded.val382 = load %tmp381
  %tmp384 = 0
  %index.out.of.range385 = cmp lt 0, 0
  br %index.out.of.range385, throw
  %index.out.of.range385 = cmp ge 0, 5
  br %index.out.of.range385, throw
  %tmp386 = add %D_9, %tmp384
  %loaded.val387 = load %tmp386
  %tmp388 = xor %loaded.val382, %loaded.val387
  %tmp390 = mul 0, 5
  %index.out.of.range391 = cmp lt 0, 0
  br %index.out.of.range391, throw
  %index.out.of.range391 = cmp ge 0, 25
  br %index.out.of.range391, throw
  %tmp392 = add %A_5, %tmp390
  %tmp394 = 1
  %index.out.of.range395 = cmp lt 1, 0
  br %index.out.of.range395, throw
  %index.out.of.range395 = cmp ge 1, 5
  br %index.out.of.range395, throw
  %tmp396 = add %tmp392, %tmp394
  store %tmp388, %tmp396
  %tmp398 = mul 0, 5
  %index.out.of.range399 = cmp lt 0, 0
  br %index.out.of.range399, throw
  %index.out.of.range399 = cmp ge 0, 25
  br %index.out.of.range399, throw
  %tmp400 = add %A_5, %tmp398
  %tmp402 = 2
  %index.out.of.range403 = cmp lt 2, 0
  br %index.out.of.range403, throw
  %index.out.of.range403 = cmp ge 2, 5
  br %index.out.of.range403, throw
  %tmp404 = add %tmp400, %tmp402
  %loaded.val405 = load %tmp404
  %tmp407 = 0
  %index.out.of.range408 = cmp lt 0, 0
  br %index.out.of.range408, throw
  %index.out.of.range408 = cmp ge 0, 5
  br %index.out.of.range408, throw
  %tmp409 = add %D_9, %tmp407
  %loaded.val410 = load %tmp409
  %tmp411 = xor %loaded.val405, %loaded.val410
  %tmp413 = mul 0, 5
  %index.out.of.range414 = cmp lt 0, 0
  br %index.out.of.range414, throw
  %index.out.of.range414 = cmp ge 0, 25
  br %index.out.of.range414, throw
  %tmp415 = add %A_5, %tmp413
  %tmp417 = 2
  %index.out.of.range418 = cmp lt 2, 0
  br %index.out.of.range418, throw
  %index.out.of.range418 = cmp ge 2, 5
  br %index.out.of.range418, throw
  %tmp419 = add %tmp415, %tmp417
  store %tmp411, %tmp419
  %tmp421 = mul 0, 5
  %index.out.of.range422 = cmp lt 0, 0
  br %index.out.of.range422, throw
  %index.out.of.range422 = cmp ge 0, 25
  br %index.out.of.range422, throw
  %tmp423 = add %A_5, %tmp421
  %tmp425 = 3
  %index.out.of.range426 = cmp lt 3, 0
  br %index.out.of.range426, throw
  %index.out.of.range426 = cmp ge 3, 5
  br %index.out.of.range426, throw
  %tmp427 = add %tmp423, %tmp425
  %loaded.val428 = load %tmp427
  %tmp430 = 0
  %index.out.of.range431 = cmp lt 0, 0
  br %index.out.of.range431, throw
  %index.out.of.range431 = cmp ge 0, 5
  br %index.out.of.range431, throw
  %tmp432 = add %D_9, %tmp430
  %loaded.val433 = load %tmp432
  %tmp434 = xor %loaded.val428, %loaded.val433
  %tmp436 = mul 0, 5
  %index.out.of.range437 = cmp lt 0, 0
  br %index.out.of.range437, throw
  %index.out.of.range437 = cmp ge 0, 25
  br %index.out.of.range437, throw
  %tmp438 = add %A_5, %tmp436
  %tmp440 = 3
  %index.out.of.range441 = cmp lt 3, 0
  br %index.out.of.range441, throw
  %index.out.of.range441 = cmp ge 3, 5
  br %index.out.of.range441, throw
  %tmp442 = add %tmp438, %tmp440
  store %tmp434, %tmp442
  %tmp444 = mul 0, 5
  %index.out.of.range445 = cmp lt 0, 0
  br %index.out.of.range445, throw
  %index.out.of.range445 = cmp ge 0, 25
  br %index.out.of.range445, throw
  %tmp446 = add %A_5, %tmp444
  %tmp448 = 4
  %index.out.of.range449 = cmp lt 4, 0
  br %index.out.of.range449, throw
  %index.out.of.range449 = cmp ge 4, 5
  br %index.out.of.range449, throw
  %tmp450 = add %tmp446, %tmp448
  %loaded.val451 = load %tmp450
  %tmp453 = 0
  %index.out.of.range454 = cmp lt 0, 0
  br %index.out.of.range454, throw
  %index.out.of.range454 = cmp ge 0, 5
  br %index.out.of.range454, throw
  %tmp455 = add %D_9, %tmp453
  %loaded.val456 = load %tmp455
  %tmp457 = xor %loaded.val451, %loaded.val456
  %tmp459 = mul 0, 5
  %index.out.of.range460 = cmp lt 0, 0
  br %index.out.of.range460, throw
  %index.out.of.range460 = cmp ge 0, 25
  br %index.out.of.range460, throw
  %tmp461 = add %A_5, %tmp459
  %tmp463 = 4
  %index.out.of.range464 = cmp lt 4, 0
  br %index.out.of.range464, throw
  %index.out.of.range464 = cmp ge 4, 5
  br %index.out.of.range464, throw
  %tmp465 = add %tmp461, %tmp463
  store %tmp457, %tmp465
  %tmp467 = mul 1, 5
  %index.out.of.range468 = cmp lt 1, 0
  br %index.out.of.range468, throw
  %index.out.of.range468 = cmp ge 1, 25
  br %index.out.of.range468, throw
  %tmp469 = add %A_5, %tmp467
  %tmp471 = 0
  %index.out.of.range472 = cmp lt 0, 0
  br %index.out.of.range472, throw
  %index.out.of.range472 = cmp ge 0, 5
  br %index.out.of.range472, throw
  %tmp473 = add %tmp469, %tmp471
  %loaded.val474 = load %tmp473
  %tmp476 = 1
  %index.out.of.range477 = cmp lt 1, 0
  br %index.out.of.range477, throw
  %index.out.of.range477 = cmp ge 1, 5
  br %index.out.of.range477, throw
  %tmp478 = add %D_9, %tmp476
  %loaded.val479 = load %tmp478
  %tmp480 = xor %loaded.val474, %loaded.val479
  %tmp482 = mul 1, 5
  %index.out.of.range483 = cmp lt 1, 0
  br %index.out.of.range483, throw
  %index.out.of.range483 = cmp ge 1, 25
  br %index.out.of.range483, throw
  %tmp484 = add %A_5, %tmp482
  %tmp486 = 0
  %index.out.of.range487 = cmp lt 0, 0
  br %index.out.of.range487, throw
  %index.out.of.range487 = cmp ge 0, 5
  br %index.out.of.range487, throw
  %tmp488 = add %tmp484, %tmp486
  store %tmp480, %tmp488
  %tmp490 = mul 1, 5
  %index.out.of.range491 = cmp lt 1, 0
  br %index.out.of.range491, throw
  %index.out.of.range491 = cmp ge 1, 25
  br %index.out.of.range491, throw
  %tmp492 = add %A_5, %tmp490
  %tmp494 = 1
  %index.out.of.range495 = cmp lt 1, 0
  br %index.out.of.range495, throw
  %index.out.of.range495 = cmp ge 1, 5
  br %index.out.of.range495, throw
  %tmp496 = add %tmp492, %tmp494
  %loaded.val497 = load %tmp496
  %tmp499 = 1
  %index.out.of.range500 = cmp lt 1, 0
  br %index.out.of.range500, throw
  %index.out.of.range500 = cmp ge 1, 5
  br %index.out.of.range500, throw
  %tmp501 = add %D_9, %tmp499
  %loaded.val502 = load %tmp501
  %tmp503 = xor %loaded.val497, %loaded.val502
  %tmp505 = mul 1, 5
  %index.out.of.range506 = cmp lt 1, 0
  br %index.out.of.range506, throw
  %index.out.of.range506 = cmp ge 1, 25
  br %index.out.of.range506, throw
  %tmp507 = add %A_5, %tmp505
  %tmp509 = 1
  %index.out.of.range510 = cmp lt 1, 0
  br %index.out.of.range510, throw
  %index.out.of.range510 = cmp ge 1, 5
  br %index.out.of.range510, throw
  %tmp511 = add %tmp507, %tmp509
  store %tmp503, %tmp511
  %tmp513 = mul 1, 5
  %index.out.of.range514 = cmp lt 1, 0
  br %index.out.of.range514, throw
  %index.out.of.range514 = cmp ge 1, 25
  br %index.out.of.range514, throw
  %tmp515 = add %A_5, %tmp513
  %tmp517 = 2
  %index.out.of.range518 = cmp lt 2, 0
  br %index.out.of.range518, throw
  %index.out.of.range518 = cmp ge 2, 5
  br %index.out.of.range518, throw
  %tmp519 = add %tmp515, %tmp517
  %loaded.val520 = load %tmp519
  %tmp522 = 1
  %index.out.of.range523 = cmp lt 1, 0
  br %index.out.of.range523, throw
  %index.out.of.range523 = cmp ge 1, 5
  br %index.out.of.range523, throw
  %tmp524 = add %D_9, %tmp522
  %loaded.val525 = load %tmp524
  %tmp526 = xor %loaded.val520, %loaded.val525
  %tmp528 = mul 1, 5
  %index.out.of.range529 = cmp lt 1, 0
  br %index.out.of.range529, throw
  %index.out.of.range529 = cmp ge 1, 25
  br %index.out.of.range529, throw
  %tmp530 = add %A_5, %tmp528
  %tmp532 = 2
  %index.out.of.range533 = cmp lt 2, 0
  br %index.out.of.range533, throw
  %index.out.of.range533 = cmp ge 2, 5
  br %index.out.of.range533, throw
  %tmp534 = add %tmp530, %tmp532
  store %tmp526, %tmp534
  %tmp536 = mul 1, 5
  %index.out.of.range537 = cmp lt 1, 0
  br %index.out.of.range537, throw
  %index.out.of.range537 = cmp ge 1, 25
  br %index.out.of.range537, throw
  %tmp538 = add %A_5, %tmp536
  %tmp540 = 3
  %index.out.of.range541 = cmp lt 3, 0
  br %index.out.of.range541, throw
  %index.out.of.range541 = cmp ge 3, 5
  br %index.out.of.range541, throw
  %tmp542 = add %tmp538, %tmp540
  %loaded.val543 = load %tmp542
  %tmp545 = 1
  %index.out.of.range546 = cmp lt 1, 0
  br %index.out.of.range546, throw
  %index.out.of.range546 = cmp ge 1, 5
  br %index.out.of.range546, throw
  %tmp547 = add %D_9, %tmp545
  %loaded.val548 = load %tmp547
  %tmp549 = xor %loaded.val543, %loaded.val548
  %tmp551 = mul 1, 5
  %index.out.of.range552 = cmp lt 1, 0
  br %index.out.of.range552, throw
  %index.out.of.range552 = cmp ge 1, 25
  br %index.out.of.range552, throw
  %tmp553 = add %A_5, %tmp551
  %tmp555 = 3
  %index.out.of.range556 = cmp lt 3, 0
  br %index.out.of.range556, throw
  %index.out.of.range556 = cmp ge 3, 5
  br %index.out.of.range556, throw
  %tmp557 = add %tmp553, %tmp555
  store %tmp549, %tmp557
  %tmp559 = mul 1, 5
  %index.out.of.range560 = cmp lt 1, 0
  br %index.out.of.range560, throw
  %index.out.of.range560 = cmp ge 1, 25
  br %index.out.of.range560, throw
  %tmp561 = add %A_5, %tmp559
  %tmp563 = 4
  %index.out.of.range564 = cmp lt 4, 0
  br %index.out.of.range564, throw
  %index.out.of.range564 = cmp ge 4, 5
  br %index.out.of.range564, throw
  %tmp565 = add %tmp561, %tmp563
  %loaded.val566 = load %tmp565
  %tmp568 = 1
  %index.out.of.range569 = cmp lt 1, 0
  br %index.out.of.range569, throw
  %index.out.of.range569 = cmp ge 1, 5
  br %index.out.of.range569, throw
  %tmp570 = add %D_9, %tmp568
  %loaded.val571 = load %tmp570
  %tmp572 = xor %loaded.val566, %loaded.val571
  %tmp574 = mul 1, 5
  %index.out.of.range575 = cmp lt 1, 0
  br %index.out.of.range575, throw
  %index.out.of.range575 = cmp ge 1, 25
  br %index.out.of.range575, throw
  %tmp576 = add %A_5, %tmp574
  %tmp578 = 4
  %index.out.of.range579 = cmp lt 4, 0
  br %index.out.of.range579, throw
  %index.out.of.range579 = cmp ge 4, 5
  br %index.out.of.range579, throw
  %tmp580 = add %tmp576, %tmp578
  store %tmp572, %tmp580
  %tmp582 = mul 2, 5
  %index.out.of.range583 = cmp lt 2, 0
  br %index.out.of.range583, throw
  %index.out.of.range583 = cmp ge 2, 25
  br %index.out.of.range583, throw
  %tmp584 = add %A_5, %tmp582
  %tmp586 = 0
  %index.out.of.range587 = cmp lt 0, 0
  br %index.out.of.range587, throw
  %index.out.of.range587 = cmp ge 0, 5
  br %index.out.of.range587, throw
  %tmp588 = add %tmp584, %tmp586
  %loaded.val589 = load %tmp588
  %tmp591 = 2
  %index.out.of.range592 = cmp lt 2, 0
  br %index.out.of.range592, throw
  %index.out.of.range592 = cmp ge 2, 5
  br %index.out.of.range592, throw
  %tmp593 = add %D_9, %tmp591
  %loaded.val594 = load %tmp593
  %tmp595 = xor %loaded.val589, %loaded.val594
  %tmp597 = mul 2, 5
  %index.out.of.range598 = cmp lt 2, 0
  br %index.out.of.range598, throw
  %index.out.of.range598 = cmp ge 2, 25
  br %index.out.of.range598, throw
  %tmp599 = add %A_5, %tmp597
  %tmp601 = 0
  %index.out.of.range602 = cmp lt 0, 0
  br %index.out.of.range602, throw
  %index.out.of.range602 = cmp ge 0, 5
  br %index.out.of.range602, throw
  %tmp603 = add %tmp599, %tmp601
  store %tmp595, %tmp603
  %tmp605 = mul 2, 5
  %index.out.of.range606 = cmp lt 2, 0
  br %index.out.of.range606, throw
  %index.out.of.range606 = cmp ge 2, 25
  br %index.out.of.range606, throw
  %tmp607 = add %A_5, %tmp605
  %tmp609 = 1
  %index.out.of.range610 = cmp lt 1, 0
  br %index.out.of.range610, throw
  %index.out.of.range610 = cmp ge 1, 5
  br %index.out.of.range610, throw
  %tmp611 = add %tmp607, %tmp609
  %loaded.val612 = load %tmp611
  %tmp614 = 2
  %index.out.of.range615 = cmp lt 2, 0
  br %index.out.of.range615, throw
  %index.out.of.range615 = cmp ge 2, 5
  br %index.out.of.range615, throw
  %tmp616 = add %D_9, %tmp614
  %loaded.val617 = load %tmp616
  %tmp618 = xor %loaded.val612, %loaded.val617
  %tmp620 = mul 2, 5
  %index.out.of.range621 = cmp lt 2, 0
  br %index.out.of.range621, throw
  %index.out.of.range621 = cmp ge 2, 25
  br %index.out.of.range621, throw
  %tmp622 = add %A_5, %tmp620
  %tmp624 = 1
  %index.out.of.range625 = cmp lt 1, 0
  br %index.out.of.range625, throw
  %index.out.of.range625 = cmp ge 1, 5
  br %index.out.of.range625, throw
  %tmp626 = add %tmp622, %tmp624
  store %tmp618, %tmp626
  %tmp628 = mul 2, 5
  %index.out.of.range629 = cmp lt 2, 0
  br %index.out.of.range629, throw
  %index.out.of.range629 = cmp ge 2, 25
  br %index.out.of.range629, throw
  %tmp630 = add %A_5, %tmp628
  %tmp632 = 2
  %index.out.of.range633 = cmp lt 2, 0
  br %index.out.of.range633, throw
  %index.out.of.range633 = cmp ge 2, 5
  br %index.out.of.range633, throw
  %tmp634 = add %tmp630, %tmp632
  %loaded.val635 = load %tmp634
  %tmp637 = 2
  %index.out.of.range638 = cmp lt 2, 0
  br %index.out.of.range638, throw
  %index.out.of.range638 = cmp ge 2, 5
  br %index.out.of.range638, throw
  %tmp639 = add %D_9, %tmp637
  %loaded.val640 = load %tmp639
  %tmp641 = xor %loaded.val635, %loaded.val640
  %tmp643 = mul 2, 5
  %index.out.of.range644 = cmp lt 2, 0
  br %index.out.of.range644, throw
  %index.out.of.range644 = cmp ge 2, 25
  br %index.out.of.range644, throw
  %tmp645 = add %A_5, %tmp643
  %tmp647 = 2
  %index.out.of.range648 = cmp lt 2, 0
  br %index.out.of.range648, throw
  %index.out.of.range648 = cmp ge 2, 5
  br %index.out.of.range648, throw
  %tmp649 = add %tmp645, %tmp647
  store %tmp641, %tmp649
  %tmp651 = mul 2, 5
  %index.out.of.range652 = cmp lt 2, 0
  br %index.out.of.range652, throw
  %index.out.of.range652 = cmp ge 2, 25
  br %index.out.of.range652, throw
  %tmp653 = add %A_5, %tmp651
  %tmp655 = 3
  %index.out.of.range656 = cmp lt 3, 0
  br %index.out.of.range656, throw
  %index.out.of.range656 = cmp ge 3, 5
  br %index.out.of.range656, throw
  %tmp657 = add %tmp653, %tmp655
  %loaded.val658 = load %tmp657
  %tmp660 = 2
  %index.out.of.range661 = cmp lt 2, 0
  br %index.out.of.range661, throw
  %index.out.of.range661 = cmp ge 2, 5
  br %index.out.of.range661, throw
  %tmp662 = add %D_9, %tmp660
  %loaded.val663 = load %tmp662
  %tmp664 = xor %loaded.val658, %loaded.val663
  %tmp666 = mul 2, 5
  %index.out.of.range667 = cmp lt 2, 0
  br %index.out.of.range667, throw
  %index.out.of.range667 = cmp ge 2, 25
  br %index.out.of.range667, throw
  %tmp668 = add %A_5, %tmp666
  %tmp670 = 3
  %index.out.of.range671 = cmp lt 3, 0
  br %index.out.of.range671, throw
  %index.out.of.range671 = cmp ge 3, 5
  br %index.out.of.range671, throw
  %tmp672 = add %tmp668, %tmp670
  store %tmp664, %tmp672
  %tmp674 = mul 2, 5
  %index.out.of.range675 = cmp lt 2, 0
  br %index.out.of.range675, throw
  %index.out.of.range675 = cmp ge 2, 25
  br %index.out.of.range675, throw
  %tmp676 = add %A_5, %tmp674
  %tmp678 = 4
  %index.out.of.range679 = cmp lt 4, 0
  br %index.out.of.range679, throw
  %index.out.of.range679 = cmp ge 4, 5
  br %index.out.of.range679, throw
  %tmp680 = add %tmp676, %tmp678
  %loaded.val681 = load %tmp680
  %tmp683 = 2
  %index.out.of.range684 = cmp lt 2, 0
  br %index.out.of.range684, throw
  %index.out.of.range684 = cmp ge 2, 5
  br %index.out.of.range684, throw
  %tmp685 = add %D_9, %tmp683
  %loaded.val686 = load %tmp685
  %tmp687 = xor %loaded.val681, %loaded.val686
  %tmp689 = mul 2, 5
  %index.out.of.range690 = cmp lt 2, 0
  br %index.out.of.range690, throw
  %index.out.of.range690 = cmp ge 2, 25
  br %index.out.of.range690, throw
  %tmp691 = add %A_5, %tmp689
  %tmp693 = 4
  %index.out.of.range694 = cmp lt 4, 0
  br %index.out.of.range694, throw
  %index.out.of.range694 = cmp ge 4, 5
  br %index.out.of.range694, throw
  %tmp695 = add %tmp691, %tmp693
  store %tmp687, %tmp695
  %tmp697 = mul 3, 5
  %index.out.of.range698 = cmp lt 3, 0
  br %index.out.of.range698, throw
  %index.out.of.range698 = cmp ge 3, 25
  br %index.out.of.range698, throw
  %tmp699 = add %A_5, %tmp697
  %tmp701 = 0
  %index.out.of.range702 = cmp lt 0, 0
  br %index.out.of.range702, throw
  %index.out.of.range702 = cmp ge 0, 5
  br %index.out.of.range702, throw
  %tmp703 = add %tmp699, %tmp701
  %loaded.val704 = load %tmp703
  %tmp706 = 3
  %index.out.of.range707 = cmp lt 3, 0
  br %index.out.of.range707, throw
  %index.out.of.range707 = cmp ge 3, 5
  br %index.out.of.range707, throw
  %tmp708 = add %D_9, %tmp706
  %loaded.val709 = load %tmp708
  %tmp710 = xor %loaded.val704, %loaded.val709
  %tmp712 = mul 3, 5
  %index.out.of.range713 = cmp lt 3, 0
  br %index.out.of.range713, throw
  %index.out.of.range713 = cmp ge 3, 25
  br %index.out.of.range713, throw
  %tmp714 = add %A_5, %tmp712
  %tmp716 = 0
  %index.out.of.range717 = cmp lt 0, 0
  br %index.out.of.range717, throw
  %index.out.of.range717 = cmp ge 0, 5
  br %index.out.of.range717, throw
  %tmp718 = add %tmp714, %tmp716
  store %tmp710, %tmp718
  %tmp720 = mul 3, 5
  %index.out.of.range721 = cmp lt 3, 0
  br %index.out.of.range721, throw
  %index.out.of.range721 = cmp ge 3, 25
  br %index.out.of.range721, throw
  %tmp722 = add %A_5, %tmp720
  %tmp724 = 1
  %index.out.of.range725 = cmp lt 1, 0
  br %index.out.of.range725, throw
  %index.out.of.range725 = cmp ge 1, 5
  br %index.out.of.range725, throw
  %tmp726 = add %tmp722, %tmp724
  %loaded.val727 = load %tmp726
  %tmp729 = 3
  %index.out.of.range730 = cmp lt 3, 0
  br %index.out.of.range730, throw
  %index.out.of.range730 = cmp ge 3, 5
  br %index.out.of.range730, throw
  %tmp731 = add %D_9, %tmp729
  %loaded.val732 = load %tmp731
  %tmp733 = xor %loaded.val727, %loaded.val732
  %tmp735 = mul 3, 5
  %index.out.of.range736 = cmp lt 3, 0
  br %index.out.of.range736, throw
  %index.out.of.range736 = cmp ge 3, 25
  br %index.out.of.range736, throw
  %tmp737 = add %A_5, %tmp735
  %tmp739 = 1
  %index.out.of.range740 = cmp lt 1, 0
  br %index.out.of.range740, throw
  %index.out.of.range740 = cmp ge 1, 5
  br %index.out.of.range740, throw
  %tmp741 = add %tmp737, %tmp739
  store %tmp733, %tmp741
  %tmp743 = mul 3, 5
  %index.out.of.range744 = cmp lt 3, 0
  br %index.out.of.range744, throw
  %index.out.of.range744 = cmp ge 3, 25
  br %index.out.of.range744, throw
  %tmp745 = add %A_5, %tmp743
  %tmp747 = 2
  %index.out.of.range748 = cmp lt 2, 0
  br %index.out.of.range748, throw
  %index.out.of.range748 = cmp ge 2, 5
  br %index.out.of.range748, throw
  %tmp749 = add %tmp745, %tmp747
  %loaded.val750 = load %tmp749
  %tmp752 = 3
  %index.out.of.range753 = cmp lt 3, 0
  br %index.out.of.range753, throw
  %index.out.of.range753 = cmp ge 3, 5
  br %index.out.of.range753, throw
  %tmp754 = add %D_9, %tmp752
  %loaded.val755 = load %tmp754
  %tmp756 = xor %loaded.val750, %loaded.val755
  %tmp758 = mul 3, 5
  %index.out.of.range759 = cmp lt 3, 0
  br %index.out.of.range759, throw
  %index.out.of.range759 = cmp ge 3, 25
  br %index.out.of.range759, throw
  %tmp760 = add %A_5, %tmp758
  %tmp762 = 2
  %index.out.of.range763 = cmp lt 2, 0
  br %index.out.of.range763, throw
  %index.out.of.range763 = cmp ge 2, 5
  br %index.out.of.range763, throw
  %tmp764 = add %tmp760, %tmp762
  store %tmp756, %tmp764
  %tmp766 = mul 3, 5
  %index.out.of.range767 = cmp lt 3, 0
  br %index.out.of.range767, throw
  %index.out.of.range767 = cmp ge 3, 25
  br %index.out.of.range767, throw
  %tmp768 = add %A_5, %tmp766
  %tmp770 = 3
  %index.out.of.range771 = cmp lt 3, 0
  br %index.out.of.range771, throw
  %index.out.of.range771 = cmp ge 3, 5
  br %index.out.of.range771, throw
  %tmp772 = add %tmp768, %tmp770
  %loaded.val773 = load %tmp772
  %tmp775 = 3
  %index.out.of.range776 = cmp lt 3, 0
  br %index.out.of.range776, throw
  %index.out.of.range776 = cmp ge 3, 5
  br %index.out.of.range776, throw
  %tmp777 = add %D_9, %tmp775
  %loaded.val778 = load %tmp777
  %tmp779 = xor %loaded.val773, %loaded.val778
  %tmp781 = mul 3, 5
  %index.out.of.range782 = cmp lt 3, 0
  br %index.out.of.range782, throw
  %index.out.of.range782 = cmp ge 3, 25
  br %index.out.of.range782, throw
  %tmp783 = add %A_5, %tmp781
  %tmp785 = 3
  %index.out.of.range786 = cmp lt 3, 0
  br %index.out.of.range786, throw
  %index.out.of.range786 = cmp ge 3, 5
  br %index.out.of.range786, throw
  %tmp787 = add %tmp783, %tmp785
  store %tmp779, %tmp787
  %tmp789 = mul 3, 5
  %index.out.of.range790 = cmp lt 3, 0
  br %index.out.of.range790, throw
  %index.out.of.range790 = cmp ge 3, 25
  br %index.out.of.range790, throw
  %tmp791 = add %A_5, %tmp789
  %tmp793 = 4
  %index.out.of.range794 = cmp lt 4, 0
  br %index.out.of.range794, throw
  %index.out.of.range794 = cmp ge 4, 5
  br %index.out.of.range794, throw
  %tmp795 = add %tmp791, %tmp793
  %loaded.val796 = load %tmp795
  %tmp798 = 3
  %index.out.of.range799 = cmp lt 3, 0
  br %index.out.of.range799, throw
  %index.out.of.range799 = cmp ge 3, 5
  br %index.out.of.range799, throw
  %tmp800 = add %D_9, %tmp798
  %loaded.val801 = load %tmp800
  %tmp802 = xor %loaded.val796, %loaded.val801
  %tmp804 = mul 3, 5
  %index.out.of.range805 = cmp lt 3, 0
  br %index.out.of.range805, throw
  %index.out.of.range805 = cmp ge 3, 25
  br %index.out.of.range805, throw
  %tmp806 = add %A_5, %tmp804
  %tmp808 = 4
  %index.out.of.range809 = cmp lt 4, 0
  br %index.out.of.range809, throw
  %index.out.of.range809 = cmp ge 4, 5
  br %index.out.of.range809, throw
  %tmp810 = add %tmp806, %tmp808
  store %tmp802, %tmp810
  %tmp812 = mul 4, 5
  %index.out.of.range813 = cmp lt 4, 0
  br %index.out.of.range813, throw
  %index.out.of.range813 = cmp ge 4, 25
  br %index.out.of.range813, throw
  %tmp814 = add %A_5, %tmp812
  %tmp816 = 0
  %index.out.of.range817 = cmp lt 0, 0
  br %index.out.of.range817, throw
  %index.out.of.range817 = cmp ge 0, 5
  br %index.out.of.range817, throw
  %tmp818 = add %tmp814, %tmp816
  %loaded.val819 = load %tmp818
  %tmp821 = 4
  %index.out.of.range822 = cmp lt 4, 0
  br %index.out.of.range822, throw
  %index.out.of.range822 = cmp ge 4, 5
  br %index.out.of.range822, throw
  %tmp823 = add %D_9, %tmp821
  %loaded.val824 = load %tmp823
  %tmp825 = xor %loaded.val819, %loaded.val824
  %tmp827 = mul 4, 5
  %index.out.of.range828 = cmp lt 4, 0
  br %index.out.of.range828, throw
  %index.out.of.range828 = cmp ge 4, 25
  br %index.out.of.range828, throw
  %tmp829 = add %A_5, %tmp827
  %tmp831 = 0
  %index.out.of.range832 = cmp lt 0, 0
  br %index.out.of.range832, throw
  %index.out.of.range832 = cmp ge 0, 5
  br %index.out.of.range832, throw
  %tmp833 = add %tmp829, %tmp831
  store %tmp825, %tmp833
  %tmp835 = mul 4, 5
  %index.out.of.range836 = cmp lt 4, 0
  br %index.out.of.range836, throw
  %index.out.of.range836 = cmp ge 4, 25
  br %index.out.of.range836, throw
  %tmp837 = add %A_5, %tmp835
  %tmp839 = 1
  %index.out.of.range840 = cmp lt 1, 0
  br %index.out.of.range840, throw
  %index.out.of.range840 = cmp ge 1, 5
  br %index.out.of.range840, throw
  %tmp841 = add %tmp837, %tmp839
  %loaded.val842 = load %tmp841
  %tmp844 = 4
  %index.out.of.range845 = cmp lt 4, 0
  br %index.out.of.range845, throw
  %index.out.of.range845 = cmp ge 4, 5
  br %index.out.of.range845, throw
  %tmp846 = add %D_9, %tmp844
  %loaded.val847 = load %tmp846
  %tmp848 = xor %loaded.val842, %loaded.val847
  %tmp850 = mul 4, 5
  %index.out.of.range851 = cmp lt 4, 0
  br %index.out.of.range851, throw
  %index.out.of.range851 = cmp ge 4, 25
  br %index.out.of.range851, throw
  %tmp852 = add %A_5, %tmp850
  %tmp854 = 1
  %index.out.of.range855 = cmp lt 1, 0
  br %index.out.of.range855, throw
  %index.out.of.range855 = cmp ge 1, 5
  br %index.out.of.range855, throw
  %tmp856 = add %tmp852, %tmp854
  store %tmp848, %tmp856
  %tmp858 = mul 4, 5
  %index.out.of.range859 = cmp lt 4, 0
  br %index.out.of.range859, throw
  %index.out.of.range859 = cmp ge 4, 25
  br %index.out.of.range859, throw
  %tmp860 = add %A_5, %tmp858
  %tmp862 = 2
  %index.out.of.range863 = cmp lt 2, 0
  br %index.out.of.range863, throw
  %index.out.of.range863 = cmp ge 2, 5
  br %index.out.of.range863, throw
  %tmp864 = add %tmp860, %tmp862
  %loaded.val865 = load %tmp864
  %tmp867 = 4
  %index.out.of.range868 = cmp lt 4, 0
  br %index.out.of.range868, throw
  %index.out.of.range868 = cmp ge 4, 5
  br %index.out.of.range868, throw
  %tmp869 = add %D_9, %tmp867
  %loaded.val870 = load %tmp869
  %tmp871 = xor %loaded.val865, %loaded.val870
  %tmp873 = mul 4, 5
  %index.out.of.range874 = cmp lt 4, 0
  br %index.out.of.range874, throw
  %index.out.of.range874 = cmp ge 4, 25
  br %index.out.of.range874, throw
  %tmp875 = add %A_5, %tmp873
  %tmp877 = 2
  %index.out.of.range878 = cmp lt 2, 0
  br %index.out.of.range878, throw
  %index.out.of.range878 = cmp ge 2, 5
  br %index.out.of.range878, throw
  %tmp879 = add %tmp875, %tmp877
  store %tmp871, %tmp879
  %tmp881 = mul 4, 5
  %index.out.of.range882 = cmp lt 4, 0
  br %index.out.of.range882, throw
  %index.out.of.range882 = cmp ge 4, 25
  br %index.out.of.range882, throw
  %tmp883 = add %A_5, %tmp881
  %tmp885 = 3
  %index.out.of.range886 = cmp lt 3, 0
  br %index.out.of.range886, throw
  %index.out.of.range886 = cmp ge 3, 5
  br %index.out.of.range886, throw
  %tmp887 = add %tmp883, %tmp885
  %loaded.val888 = load %tmp887
  %tmp890 = 4
  %index.out.of.range891 = cmp lt 4, 0
  br %index.out.of.range891, throw
  %index.out.of.range891 = cmp ge 4, 5
  br %index.out.of.range891, throw
  %tmp892 = add %D_9, %tmp890
  %loaded.val893 = load %tmp892
  %tmp894 = xor %loaded.val888, %loaded.val893
  %tmp896 = mul 4, 5
  %index.out.of.range897 = cmp lt 4, 0
  br %index.out.of.range897, throw
  %index.out.of.range897 = cmp ge 4, 25
  br %index.out.of.range897, throw
  %tmp898 = add %A_5, %tmp896
  %tmp900 = 3
  %index.out.of.range901 = cmp lt 3, 0
  br %index.out.of.range901, throw
  %index.out.of.range901 = cmp ge 3, 5
  br %index.out.of.range901, throw
  %tmp902 = add %tmp898, %tmp900
  store %tmp894, %tmp902
  %tmp904 = mul 4, 5
  %index.out.of.range905 = cmp lt 4, 0
  br %index.out.of.range905, throw
  %index.out.of.range905 = cmp ge 4, 25
  br %index.out.of.range905, throw
  %tmp906 = add %A_5, %tmp904
  %tmp908 = 4
  %index.out.of.range909 = cmp lt 4, 0
  br %index.out.of.range909, throw
  %index.out.of.range909 = cmp ge 4, 5
  br %index.out.of.range909, throw
  %tmp910 = add %tmp906, %tmp908
  %loaded.val911 = load %tmp910
  %tmp913 = 4
  %index.out.of.range914 = cmp lt 4, 0
  br %index.out.of.range914, throw
  %index.out.of.range914 = cmp ge 4, 5
  br %index.out.of.range914, throw
  %tmp915 = add %D_9, %tmp913
  %loaded.val916 = load %tmp915
  %tmp917 = xor %loaded.val911, %loaded.val916
  %tmp919 = mul 4, 5
  %index.out.of.range920 = cmp lt 4, 0
  br %index.out.of.range920, throw
  %index.out.of.range920 = cmp ge 4, 25
  br %index.out.of.range920, throw
  %tmp921 = add %A_5, %tmp919
  %tmp923 = 4
  %index.out.of.range924 = cmp lt 4, 0
  br %index.out.of.range924, throw
  %index.out.of.range924 = cmp ge 4, 5
  br %index.out.of.range924, throw
  %tmp925 = add %tmp921, %tmp923
  store %tmp917, %tmp925
  %tmp927 = mul 0, 5
  %index.out.of.range928 = cmp lt 0, 0
  br %index.out.of.range928, throw
  %index.out.of.range928 = cmp ge 0, 25
  br %index.out.of.range928, throw
  %tmp929 = add %A_5, %tmp927
  %tmp931 = 0
  %index.out.of.range932 = cmp lt 0, 0
  br %index.out.of.range932, throw
  %index.out.of.range932 = cmp ge 0, 5
  br %index.out.of.range932, throw
  %tmp933 = add %tmp929, %tmp931
  %loaded.val934 = load %tmp933
  %tmp937 = call @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%loaded.val934, 0)
  %tmp939 = mul 0, 5
  %index.out.of.range940 = cmp lt 0, 0
  br %index.out.of.range940, throw
  %index.out.of.range940 = cmp ge 0, 25
  br %index.out.of.range940, throw
  %tmp941 = add %B_10, %tmp939
  %tmp943 = 0
  %index.out.of.range944 = cmp lt 0, 0
  br %index.out.of.range944, throw
  %index.out.of.range944 = cmp ge 0, 5
  br %index.out.of.range944, throw
  %tmp945 = add %tmp941, %tmp943
  store %tmp937, %tmp945
  %tmp947 = mul 0, 5
  %index.out.of.range948 = cmp lt 0, 0
  br %index.out.of.range948, throw
  %index.out.of.range948 = cmp ge 0, 25
  br %index.out.of.range948, throw
  %tmp949 = add %A_5, %tmp947
  %tmp951 = 1
  %index.out.of.range952 = cmp lt 1, 0
  br %index.out.of.range952, throw
  %index.out.of.range952 = cmp ge 1, 5
  br %index.out.of.range952, throw
  %tmp953 = add %tmp949, %tmp951
  %loaded.val954 = load %tmp953
  %tmp957 = call @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%loaded.val954, 36)
  %tmp959 = mul 1, 5
  %index.out.of.range960 = cmp lt 1, 0
  br %index.out.of.range960, throw
  %index.out.of.range960 = cmp ge 1, 25
  br %index.out.of.range960, throw
  %tmp961 = add %B_10, %tmp959
  %tmp963 = 3
  %index.out.of.range964 = cmp lt 3, 0
  br %index.out.of.range964, throw
  %index.out.of.range964 = cmp ge 3, 5
  br %index.out.of.range964, throw
  %tmp965 = add %tmp961, %tmp963
  store %tmp957, %tmp965
  %tmp967 = mul 0, 5
  %index.out.of.range968 = cmp lt 0, 0
  br %index.out.of.range968, throw
  %index.out.of.range968 = cmp ge 0, 25
  br %index.out.of.range968, throw
  %tmp969 = add %A_5, %tmp967
  %tmp971 = 2
  %index.out.of.range972 = cmp lt 2, 0
  br %index.out.of.range972, throw
  %index.out.of.range972 = cmp ge 2, 5
  br %index.out.of.range972, throw
  %tmp973 = add %tmp969, %tmp971
  %loaded.val974 = load %tmp973
  %tmp977 = call @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%loaded.val974, 3)
  %tmp979 = mul 2, 5
  %index.out.of.range980 = cmp lt 2, 0
  br %index.out.of.range980, throw
  %index.out.of.range980 = cmp ge 2, 25
  br %index.out.of.range980, throw
  %tmp981 = add %B_10, %tmp979
  %tmp983 = 1
  %index.out.of.range984 = cmp lt 1, 0
  br %index.out.of.range984, throw
  %index.out.of.range984 = cmp ge 1, 5
  br %index.out.of.range984, throw
  %tmp985 = add %tmp981, %tmp983
  store %tmp977, %tmp985
  %tmp987 = mul 0, 5
  %index.out.of.range988 = cmp lt 0, 0
  br %index.out.of.range988, throw
  %index.out.of.range988 = cmp ge 0, 25
  br %index.out.of.range988, throw
  %tmp989 = add %A_5, %tmp987
  %tmp991 = 3
  %index.out.of.range992 = cmp lt 3, 0
  br %index.out.of.range992, throw
  %index.out.of.range992 = cmp ge 3, 5
  br %index.out.of.range992, throw
  %tmp993 = add %tmp989, %tmp991
  %loaded.val994 = load %tmp993
  %tmp997 = call @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%loaded.val994, 41)
  %tmp999 = mul 3, 5
  %index.out.of.range1000 = cmp lt 3, 0
  br %index.out.of.range1000, throw
  %index.out.of.range1000 = cmp ge 3, 25
  br %index.out.of.range1000, throw
  %tmp1001 = add %B_10, %tmp999
  %tmp1003 = 4
  %index.out.of.range1004 = cmp lt 4, 0
  br %index.out.of.range1004, throw
  %index.out.of.range1004 = cmp ge 4, 5
  br %index.out.of.range1004, throw
  %tmp1005 = add %tmp1001, %tmp1003
  store %tmp997, %tmp1005
  %tmp1007 = mul 0, 5
  %index.out.of.range1008 = cmp lt 0, 0
  br %index.out.of.range1008, throw
  %index.out.of.range1008 = cmp ge 0, 25
  br %index.out.of.range1008, throw
  %tmp1009 = add %A_5, %tmp1007
  %tmp1011 = 4
  %index.out.of.range1012 = cmp lt 4, 0
  br %index.out.of.range1012, throw
  %index.out.of.range1012 = cmp ge 4, 5
  br %index.out.of.range1012, throw
  %tmp1013 = add %tmp1009, %tmp1011
  %loaded.val1014 = load %tmp1013
  %tmp1017 = call @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%loaded.val1014, 18)
  %tmp1019 = mul 4, 5
  %index.out.of.range1020 = cmp lt 4, 0
  br %index.out.of.range1020, throw
  %index.out.of.range1020 = cmp ge 4, 25
  br %index.out.of.range1020, throw
  %tmp1021 = add %B_10, %tmp1019
  %tmp1023 = 2
  %index.out.of.range1024 = cmp lt 2, 0
  br %index.out.of.range1024, throw
  %index.out.of.range1024 = cmp ge 2, 5
  br %index.out.of.range1024, throw
  %tmp1025 = add %tmp1021, %tmp1023
  store %tmp1017, %tmp1025
  %tmp1027 = mul 1, 5
  %index.out.of.range1028 = cmp lt 1, 0
  br %index.out.of.range1028, throw
  %index.out.of.range1028 = cmp ge 1, 25
  br %index.out.of.range1028, throw
  %tmp1029 = add %A_5, %tmp1027
  %tmp1031 = 0
  %index.out.of.range1032 = cmp lt 0, 0
  br %index.out.of.range1032, throw
  %index.out.of.range1032 = cmp ge 0, 5
  br %index.out.of.range1032, throw
  %tmp1033 = add %tmp1029, %tmp1031
  %loaded.val1034 = load %tmp1033
  %tmp1037 = call @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%loaded.val1034, 1)
  %tmp1039 = mul 0, 5
  %index.out.of.range1040 = cmp lt 0, 0
  br %index.out.of.range1040, throw
  %index.out.of.range1040 = cmp ge 0, 25
  br %index.out.of.range1040, throw
  %tmp1041 = add %B_10, %tmp1039
  %tmp1043 = 2
  %index.out.of.range1044 = cmp lt 2, 0
  br %index.out.of.range1044, throw
  %index.out.of.range1044 = cmp ge 2, 5
  br %index.out.of.range1044, throw
  %tmp1045 = add %tmp1041, %tmp1043
  store %tmp1037, %tmp1045
  %tmp1047 = mul 1, 5
  %index.out.of.range1048 = cmp lt 1, 0
  br %index.out.of.range1048, throw
  %index.out.of.range1048 = cmp ge 1, 25
  br %index.out.of.range1048, throw
  %tmp1049 = add %A_5, %tmp1047
  %tmp1051 = 1
  %index.out.of.range1052 = cmp lt 1, 0
  br %index.out.of.range1052, throw
  %index.out.of.range1052 = cmp ge 1, 5
  br %index.out.of.range1052, throw
  %tmp1053 = add %tmp1049, %tmp1051
  %loaded.val1054 = load %tmp1053
  %tmp1057 = call @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%loaded.val1054, 44)
  %tmp1059 = mul 1, 5
  %index.out.of.range1060 = cmp lt 1, 0
  br %index.out.of.range1060, throw
  %index.out.of.range1060 = cmp ge 1, 25
  br %index.out.of.range1060, throw
  %tmp1061 = add %B_10, %tmp1059
  %tmp1063 = 0
  %index.out.of.range1064 = cmp lt 0, 0
  br %index.out.of.range1064, throw
  %index.out.of.range1064 = cmp ge 0, 5
  br %index.out.of.range1064, throw
  %tmp1065 = add %tmp1061, %tmp1063
  store %tmp1057, %tmp1065
  %tmp1067 = mul 1, 5
  %index.out.of.range1068 = cmp lt 1, 0
  br %index.out.of.range1068, throw
  %index.out.of.range1068 = cmp ge 1, 25
  br %index.out.of.range1068, throw
  %tmp1069 = add %A_5, %tmp1067
  %tmp1071 = 2
  %index.out.of.range1072 = cmp lt 2, 0
  br %index.out.of.range1072, throw
  %index.out.of.range1072 = cmp ge 2, 5
  br %index.out.of.range1072, throw
  %tmp1073 = add %tmp1069, %tmp1071
  %loaded.val1074 = load %tmp1073
  %tmp1077 = call @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%loaded.val1074, 10)
  %tmp1079 = mul 2, 5
  %index.out.of.range1080 = cmp lt 2, 0
  br %index.out.of.range1080, throw
  %index.out.of.range1080 = cmp ge 2, 25
  br %index.out.of.range1080, throw
  %tmp1081 = add %B_10, %tmp1079
  %tmp1083 = 3
  %index.out.of.range1084 = cmp lt 3, 0
  br %index.out.of.range1084, throw
  %index.out.of.range1084 = cmp ge 3, 5
  br %index.out.of.range1084, throw
  %tmp1085 = add %tmp1081, %tmp1083
  store %tmp1077, %tmp1085
  %tmp1087 = mul 1, 5
  %index.out.of.range1088 = cmp lt 1, 0
  br %index.out.of.range1088, throw
  %index.out.of.range1088 = cmp ge 1, 25
  br %index.out.of.range1088, throw
  %tmp1089 = add %A_5, %tmp1087
  %tmp1091 = 3
  %index.out.of.range1092 = cmp lt 3, 0
  br %index.out.of.range1092, throw
  %index.out.of.range1092 = cmp ge 3, 5
  br %index.out.of.range1092, throw
  %tmp1093 = add %tmp1089, %tmp1091
  %loaded.val1094 = load %tmp1093
  %tmp1097 = call @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%loaded.val1094, 45)
  %tmp1099 = mul 3, 5
  %index.out.of.range1100 = cmp lt 3, 0
  br %index.out.of.range1100, throw
  %index.out.of.range1100 = cmp ge 3, 25
  br %index.out.of.range1100, throw
  %tmp1101 = add %B_10, %tmp1099
  %tmp1103 = 1
  %index.out.of.range1104 = cmp lt 1, 0
  br %index.out.of.range1104, throw
  %index.out.of.range1104 = cmp ge 1, 5
  br %index.out.of.range1104, throw
  %tmp1105 = add %tmp1101, %tmp1103
  store %tmp1097, %tmp1105
  %tmp1107 = mul 1, 5
  %index.out.of.range1108 = cmp lt 1, 0
  br %index.out.of.range1108, throw
  %index.out.of.range1108 = cmp ge 1, 25
  br %index.out.of.range1108, throw
  %tmp1109 = add %A_5, %tmp1107
  %tmp1111 = 4
  %index.out.of.range1112 = cmp lt 4, 0
  br %index.out.of.range1112, throw
  %index.out.of.range1112 = cmp ge 4, 5
  br %index.out.of.range1112, throw
  %tmp1113 = add %tmp1109, %tmp1111
  %loaded.val1114 = load %tmp1113
  %tmp1117 = call @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%loaded.val1114, 2)
  %tmp1119 = mul 4, 5
  %index.out.of.range1120 = cmp lt 4, 0
  br %index.out.of.range1120, throw
  %index.out.of.range1120 = cmp ge 4, 25
  br %index.out.of.range1120, throw
  %tmp1121 = add %B_10, %tmp1119
  %tmp1123 = 4
  %index.out.of.range1124 = cmp lt 4, 0
  br %index.out.of.range1124, throw
  %index.out.of.range1124 = cmp ge 4, 5
  br %index.out.of.range1124, throw
  %tmp1125 = add %tmp1121, %tmp1123
  store %tmp1117, %tmp1125
  %tmp1127 = mul 2, 5
  %index.out.of.range1128 = cmp lt 2, 0
  br %index.out.of.range1128, throw
  %index.out.of.range1128 = cmp ge 2, 25
  br %index.out.of.range1128, throw
  %tmp1129 = add %A_5, %tmp1127
  %tmp1131 = 0
  %index.out.of.range1132 = cmp lt 0, 0
  br %index.out.of.range1132, throw
  %index.out.of.range1132 = cmp ge 0, 5
  br %index.out.of.range1132, throw
  %tmp1133 = add %tmp1129, %tmp1131
  %loaded.val1134 = load %tmp1133
  %tmp1137 = call @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%loaded.val1134, 62)
  %tmp1139 = mul 0, 5
  %index.out.of.range1140 = cmp lt 0, 0
  br %index.out.of.range1140, throw
  %index.out.of.range1140 = cmp ge 0, 25
  br %index.out.of.range1140, throw
  %tmp1141 = add %B_10, %tmp1139
  %tmp1143 = 4
  %index.out.of.range1144 = cmp lt 4, 0
  br %index.out.of.range1144, throw
  %index.out.of.range1144 = cmp ge 4, 5
  br %index.out.of.range1144, throw
  %tmp1145 = add %tmp1141, %tmp1143
  store %tmp1137, %tmp1145
  %tmp1147 = mul 2, 5
  %index.out.of.range1148 = cmp lt 2, 0
  br %index.out.of.range1148, throw
  %index.out.of.range1148 = cmp ge 2, 25
  br %index.out.of.range1148, throw
  %tmp1149 = add %A_5, %tmp1147
  %tmp1151 = 1
  %index.out.of.range1152 = cmp lt 1, 0
  br %index.out.of.range1152, throw
  %index.out.of.range1152 = cmp ge 1, 5
  br %index.out.of.range1152, throw
  %tmp1153 = add %tmp1149, %tmp1151
  %loaded.val1154 = load %tmp1153
  %tmp1157 = call @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%loaded.val1154, 6)
  %tmp1159 = mul 1, 5
  %index.out.of.range1160 = cmp lt 1, 0
  br %index.out.of.range1160, throw
  %index.out.of.range1160 = cmp ge 1, 25
  br %index.out.of.range1160, throw
  %tmp1161 = add %B_10, %tmp1159
  %tmp1163 = 2
  %index.out.of.range1164 = cmp lt 2, 0
  br %index.out.of.range1164, throw
  %index.out.of.range1164 = cmp ge 2, 5
  br %index.out.of.range1164, throw
  %tmp1165 = add %tmp1161, %tmp1163
  store %tmp1157, %tmp1165
  %tmp1167 = mul 2, 5
  %index.out.of.range1168 = cmp lt 2, 0
  br %index.out.of.range1168, throw
  %index.out.of.range1168 = cmp ge 2, 25
  br %index.out.of.range1168, throw
  %tmp1169 = add %A_5, %tmp1167
  %tmp1171 = 2
  %index.out.of.range1172 = cmp lt 2, 0
  br %index.out.of.range1172, throw
  %index.out.of.range1172 = cmp ge 2, 5
  br %index.out.of.range1172, throw
  %tmp1173 = add %tmp1169, %tmp1171
  %loaded.val1174 = load %tmp1173
  %tmp1177 = call @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%loaded.val1174, 43)
  %tmp1179 = mul 2, 5
  %index.out.of.range1180 = cmp lt 2, 0
  br %index.out.of.range1180, throw
  %index.out.of.range1180 = cmp ge 2, 25
  br %index.out.of.range1180, throw
  %tmp1181 = add %B_10, %tmp1179
  %tmp1183 = 0
  %index.out.of.range1184 = cmp lt 0, 0
  br %index.out.of.range1184, throw
  %index.out.of.range1184 = cmp ge 0, 5
  br %index.out.of.range1184, throw
  %tmp1185 = add %tmp1181, %tmp1183
  store %tmp1177, %tmp1185
  %tmp1187 = mul 2, 5
  %index.out.of.range1188 = cmp lt 2, 0
  br %index.out.of.range1188, throw
  %index.out.of.range1188 = cmp ge 2, 25
  br %index.out.of.range1188, throw
  %tmp1189 = add %A_5, %tmp1187
  %tmp1191 = 3
  %index.out.of.range1192 = cmp lt 3, 0
  br %index.out.of.range1192, throw
  %index.out.of.range1192 = cmp ge 3, 5
  br %index.out.of.range1192, throw
  %tmp1193 = add %tmp1189, %tmp1191
  %loaded.val1194 = load %tmp1193
  %tmp1197 = call @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%loaded.val1194, 15)
  %tmp1199 = mul 3, 5
  %index.out.of.range1200 = cmp lt 3, 0
  br %index.out.of.range1200, throw
  %index.out.of.range1200 = cmp ge 3, 25
  br %index.out.of.range1200, throw
  %tmp1201 = add %B_10, %tmp1199
  %tmp1203 = 3
  %index.out.of.range1204 = cmp lt 3, 0
  br %index.out.of.range1204, throw
  %index.out.of.range1204 = cmp ge 3, 5
  br %index.out.of.range1204, throw
  %tmp1205 = add %tmp1201, %tmp1203
  store %tmp1197, %tmp1205
  %tmp1207 = mul 2, 5
  %index.out.of.range1208 = cmp lt 2, 0
  br %index.out.of.range1208, throw
  %index.out.of.range1208 = cmp ge 2, 25
  br %index.out.of.range1208, throw
  %tmp1209 = add %A_5, %tmp1207
  %tmp1211 = 4
  %index.out.of.range1212 = cmp lt 4, 0
  br %index.out.of.range1212, throw
  %index.out.of.range1212 = cmp ge 4, 5
  br %index.out.of.range1212, throw
  %tmp1213 = add %tmp1209, %tmp1211
  %loaded.val1214 = load %tmp1213
  %tmp1217 = call @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%loaded.val1214, 61)
  %tmp1219 = mul 4, 5
  %index.out.of.range1220 = cmp lt 4, 0
  br %index.out.of.range1220, throw
  %index.out.of.range1220 = cmp ge 4, 25
  br %index.out.of.range1220, throw
  %tmp1221 = add %B_10, %tmp1219
  %tmp1223 = 1
  %index.out.of.range1224 = cmp lt 1, 0
  br %index.out.of.range1224, throw
  %index.out.of.range1224 = cmp ge 1, 5
  br %index.out.of.range1224, throw
  %tmp1225 = add %tmp1221, %tmp1223
  store %tmp1217, %tmp1225
  %tmp1227 = mul 3, 5
  %index.out.of.range1228 = cmp lt 3, 0
  br %index.out.of.range1228, throw
  %index.out.of.range1228 = cmp ge 3, 25
  br %index.out.of.range1228, throw
  %tmp1229 = add %A_5, %tmp1227
  %tmp1231 = 0
  %index.out.of.range1232 = cmp lt 0, 0
  br %index.out.of.range1232, throw
  %index.out.of.range1232 = cmp ge 0, 5
  br %index.out.of.range1232, throw
  %tmp1233 = add %tmp1229, %tmp1231
  %loaded.val1234 = load %tmp1233
  %tmp1237 = call @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%loaded.val1234, 28)
  %tmp1239 = mul 0, 5
  %index.out.of.range1240 = cmp lt 0, 0
  br %index.out.of.range1240, throw
  %index.out.of.range1240 = cmp ge 0, 25
  br %index.out.of.range1240, throw
  %tmp1241 = add %B_10, %tmp1239
  %tmp1243 = 1
  %index.out.of.range1244 = cmp lt 1, 0
  br %index.out.of.range1244, throw
  %index.out.of.range1244 = cmp ge 1, 5
  br %index.out.of.range1244, throw
  %tmp1245 = add %tmp1241, %tmp1243
  store %tmp1237, %tmp1245
  %tmp1247 = mul 3, 5
  %index.out.of.range1248 = cmp lt 3, 0
  br %index.out.of.range1248, throw
  %index.out.of.range1248 = cmp ge 3, 25
  br %index.out.of.range1248, throw
  %tmp1249 = add %A_5, %tmp1247
  %tmp1251 = 1
  %index.out.of.range1252 = cmp lt 1, 0
  br %index.out.of.range1252, throw
  %index.out.of.range1252 = cmp ge 1, 5
  br %index.out.of.range1252, throw
  %tmp1253 = add %tmp1249, %tmp1251
  %loaded.val1254 = load %tmp1253
  %tmp1257 = call @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%loaded.val1254, 55)
  %tmp1259 = mul 1, 5
  %index.out.of.range1260 = cmp lt 1, 0
  br %index.out.of.range1260, throw
  %index.out.of.range1260 = cmp ge 1, 25
  br %index.out.of.range1260, throw
  %tmp1261 = add %B_10, %tmp1259
  %tmp1263 = 4
  %index.out.of.range1264 = cmp lt 4, 0
  br %index.out.of.range1264, throw
  %index.out.of.range1264 = cmp ge 4, 5
  br %index.out.of.range1264, throw
  %tmp1265 = add %tmp1261, %tmp1263
  store %tmp1257, %tmp1265
  %tmp1267 = mul 3, 5
  %index.out.of.range1268 = cmp lt 3, 0
  br %index.out.of.range1268, throw
  %index.out.of.range1268 = cmp ge 3, 25
  br %index.out.of.range1268, throw
  %tmp1269 = add %A_5, %tmp1267
  %tmp1271 = 2
  %index.out.of.range1272 = cmp lt 2, 0
  br %index.out.of.range1272, throw
  %index.out.of.range1272 = cmp ge 2, 5
  br %index.out.of.range1272, throw
  %tmp1273 = add %tmp1269, %tmp1271
  %loaded.val1274 = load %tmp1273
  %tmp1277 = call @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%loaded.val1274, 25)
  %tmp1279 = mul 2, 5
  %index.out.of.range1280 = cmp lt 2, 0
  br %index.out.of.range1280, throw
  %index.out.of.range1280 = cmp ge 2, 25
  br %index.out.of.range1280, throw
  %tmp1281 = add %B_10, %tmp1279
  %tmp1283 = 2
  %index.out.of.range1284 = cmp lt 2, 0
  br %index.out.of.range1284, throw
  %index.out.of.range1284 = cmp ge 2, 5
  br %index.out.of.range1284, throw
  %tmp1285 = add %tmp1281, %tmp1283
  store %tmp1277, %tmp1285
  %tmp1287 = mul 3, 5
  %index.out.of.range1288 = cmp lt 3, 0
  br %index.out.of.range1288, throw
  %index.out.of.range1288 = cmp ge 3, 25
  br %index.out.of.range1288, throw
  %tmp1289 = add %A_5, %tmp1287
  %tmp1291 = 3
  %index.out.of.range1292 = cmp lt 3, 0
  br %index.out.of.range1292, throw
  %index.out.of.range1292 = cmp ge 3, 5
  br %index.out.of.range1292, throw
  %tmp1293 = add %tmp1289, %tmp1291
  %loaded.val1294 = load %tmp1293
  %tmp1297 = call @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%loaded.val1294, 21)
  %tmp1299 = mul 3, 5
  %index.out.of.range1300 = cmp lt 3, 0
  br %index.out.of.range1300, throw
  %index.out.of.range1300 = cmp ge 3, 25
  br %index.out.of.range1300, throw
  %tmp1301 = add %B_10, %tmp1299
  %tmp1303 = 0
  %index.out.of.range1304 = cmp lt 0, 0
  br %index.out.of.range1304, throw
  %index.out.of.range1304 = cmp ge 0, 5
  br %index.out.of.range1304, throw
  %tmp1305 = add %tmp1301, %tmp1303
  store %tmp1297, %tmp1305
  %tmp1307 = mul 3, 5
  %index.out.of.range1308 = cmp lt 3, 0
  br %index.out.of.range1308, throw
  %index.out.of.range1308 = cmp ge 3, 25
  br %index.out.of.range1308, throw
  %tmp1309 = add %A_5, %tmp1307
  %tmp1311 = 4
  %index.out.of.range1312 = cmp lt 4, 0
  br %index.out.of.range1312, throw
  %index.out.of.range1312 = cmp ge 4, 5
  br %index.out.of.range1312, throw
  %tmp1313 = add %tmp1309, %tmp1311
  %loaded.val1314 = load %tmp1313
  %tmp1317 = call @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%loaded.val1314, 56)
  %tmp1319 = mul 4, 5
  %index.out.of.range1320 = cmp lt 4, 0
  br %index.out.of.range1320, throw
  %index.out.of.range1320 = cmp ge 4, 25
  br %index.out.of.range1320, throw
  %tmp1321 = add %B_10, %tmp1319
  %tmp1323 = 3
  %index.out.of.range1324 = cmp lt 3, 0
  br %index.out.of.range1324, throw
  %index.out.of.range1324 = cmp ge 3, 5
  br %index.out.of.range1324, throw
  %tmp1325 = add %tmp1321, %tmp1323
  store %tmp1317, %tmp1325
  %tmp1327 = mul 4, 5
  %index.out.of.range1328 = cmp lt 4, 0
  br %index.out.of.range1328, throw
  %index.out.of.range1328 = cmp ge 4, 25
  br %index.out.of.range1328, throw
  %tmp1329 = add %A_5, %tmp1327
  %tmp1331 = 0
  %index.out.of.range1332 = cmp lt 0, 0
  br %index.out.of.range1332, throw
  %index.out.of.range1332 = cmp ge 0, 5
  br %index.out.of.range1332, throw
  %tmp1333 = add %tmp1329, %tmp1331
  %loaded.val1334 = load %tmp1333
  %tmp1337 = call @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%loaded.val1334, 27)
  %tmp1339 = mul 0, 5
  %index.out.of.range1340 = cmp lt 0, 0
  br %index.out.of.range1340, throw
  %index.out.of.range1340 = cmp ge 0, 25
  br %index.out.of.range1340, throw
  %tmp1341 = add %B_10, %tmp1339
  %tmp1343 = 3
  %index.out.of.range1344 = cmp lt 3, 0
  br %index.out.of.range1344, throw
  %index.out.of.range1344 = cmp ge 3, 5
  br %index.out.of.range1344, throw
  %tmp1345 = add %tmp1341, %tmp1343
  store %tmp1337, %tmp1345
  %tmp1347 = mul 4, 5
  %index.out.of.range1348 = cmp lt 4, 0
  br %index.out.of.range1348, throw
  %index.out.of.range1348 = cmp ge 4, 25
  br %index.out.of.range1348, throw
  %tmp1349 = add %A_5, %tmp1347
  %tmp1351 = 1
  %index.out.of.range1352 = cmp lt 1, 0
  br %index.out.of.range1352, throw
  %index.out.of.range1352 = cmp ge 1, 5
  br %index.out.of.range1352, throw
  %tmp1353 = add %tmp1349, %tmp1351
  %loaded.val1354 = load %tmp1353
  %tmp1357 = call @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%loaded.val1354, 20)
  %tmp1359 = mul 1, 5
  %index.out.of.range1360 = cmp lt 1, 0
  br %index.out.of.range1360, throw
  %index.out.of.range1360 = cmp ge 1, 25
  br %index.out.of.range1360, throw
  %tmp1361 = add %B_10, %tmp1359
  %tmp1363 = 1
  %index.out.of.range1364 = cmp lt 1, 0
  br %index.out.of.range1364, throw
  %index.out.of.range1364 = cmp ge 1, 5
  br %index.out.of.range1364, throw
  %tmp1365 = add %tmp1361, %tmp1363
  store %tmp1357, %tmp1365
  %tmp1367 = mul 4, 5
  %index.out.of.range1368 = cmp lt 4, 0
  br %index.out.of.range1368, throw
  %index.out.of.range1368 = cmp ge 4, 25
  br %index.out.of.range1368, throw
  %tmp1369 = add %A_5, %tmp1367
  %tmp1371 = 2
  %index.out.of.range1372 = cmp lt 2, 0
  br %index.out.of.range1372, throw
  %index.out.of.range1372 = cmp ge 2, 5
  br %index.out.of.range1372, throw
  %tmp1373 = add %tmp1369, %tmp1371
  %loaded.val1374 = load %tmp1373
  %tmp1377 = call @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%loaded.val1374, 39)
  %tmp1379 = mul 2, 5
  %index.out.of.range1380 = cmp lt 2, 0
  br %index.out.of.range1380, throw
  %index.out.of.range1380 = cmp ge 2, 25
  br %index.out.of.range1380, throw
  %tmp1381 = add %B_10, %tmp1379
  %tmp1383 = 4
  %index.out.of.range1384 = cmp lt 4, 0
  br %index.out.of.range1384, throw
  %index.out.of.range1384 = cmp ge 4, 5
  br %index.out.of.range1384, throw
  %tmp1385 = add %tmp1381, %tmp1383
  store %tmp1377, %tmp1385
  %tmp1387 = mul 4, 5
  %index.out.of.range1388 = cmp lt 4, 0
  br %index.out.of.range1388, throw
  %index.out.of.range1388 = cmp ge 4, 25
  br %index.out.of.range1388, throw
  %tmp1389 = add %A_5, %tmp1387
  %tmp1391 = 3
  %index.out.of.range1392 = cmp lt 3, 0
  br %index.out.of.range1392, throw
  %index.out.of.range1392 = cmp ge 3, 5
  br %index.out.of.range1392, throw
  %tmp1393 = add %tmp1389, %tmp1391
  %loaded.val1394 = load %tmp1393
  %tmp1397 = call @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%loaded.val1394, 8)
  %tmp1399 = mul 3, 5
  %index.out.of.range1400 = cmp lt 3, 0
  br %index.out.of.range1400, throw
  %index.out.of.range1400 = cmp ge 3, 25
  br %index.out.of.range1400, throw
  %tmp1401 = add %B_10, %tmp1399
  %tmp1403 = 2
  %index.out.of.range1404 = cmp lt 2, 0
  br %index.out.of.range1404, throw
  %index.out.of.range1404 = cmp ge 2, 5
  br %index.out.of.range1404, throw
  %tmp1405 = add %tmp1401, %tmp1403
  store %tmp1397, %tmp1405
  %tmp1407 = mul 4, 5
  %index.out.of.range1408 = cmp lt 4, 0
  br %index.out.of.range1408, throw
  %index.out.of.range1408 = cmp ge 4, 25
  br %index.out.of.range1408, throw
  %tmp1409 = add %A_5, %tmp1407
  %tmp1411 = 4
  %index.out.of.range1412 = cmp lt 4, 0
  br %index.out.of.range1412, throw
  %index.out.of.range1412 = cmp ge 4, 5
  br %index.out.of.range1412, throw
  %tmp1413 = add %tmp1409, %tmp1411
  %loaded.val1414 = load %tmp1413
  %tmp1417 = call @"rot.t_function_internal_pure$_t_uint64_$_t_int_$returns$_t_uint64_$"(%loaded.val1414, 14)
  %tmp1419 = mul 4, 5
  %index.out.of.range1420 = cmp lt 4, 0
  br %index.out.of.range1420, throw
  %index.out.of.range1420 = cmp ge 4, 25
  br %index.out.of.range1420, throw
  %tmp1421 = add %B_10, %tmp1419
  %tmp1423 = 0
  %index.out.of.range1424 = cmp lt 0, 0
  br %index.out.of.range1424, throw
  %index.out.of.range1424 = cmp ge 0, 5
  br %index.out.of.range1424, throw
  %tmp1425 = add %tmp1421, %tmp1423
  store %tmp1417, %tmp1425
  %tmp1427 = mul 0, 5
  %index.out.of.range1428 = cmp lt 0, 0
  br %index.out.of.range1428, throw
  %index.out.of.range1428 = cmp ge 0, 25
  br %index.out.of.range1428, throw
  %tmp1429 = add %B_10, %tmp1427
  %tmp1431 = 0
  %index.out.of.range1432 = cmp lt 0, 0
  br %index.out.of.range1432, throw
  %index.out.of.range1432 = cmp ge 0, 5
  br %index.out.of.range1432, throw
  %tmp1433 = add %tmp1429, %tmp1431
  %loaded.val1434 = load %tmp1433
  %tmp1436 = mul 1, 5
  %index.out.of.range1437 = cmp lt 1, 0
  br %index.out.of.range1437, throw
  %index.out.of.range1437 = cmp ge 1, 25
  br %index.out.of.range1437, throw
  %tmp1438 = add %B_10, %tmp1436
  %tmp1440 = 0
  %index.out.of.range1441 = cmp lt 0, 0
  br %index.out.of.range1441, throw
  %index.out.of.range1441 = cmp ge 0, 5
  br %index.out.of.range1441, throw
  %tmp1442 = add %tmp1438, %tmp1440
  %loaded.val1443 = load %tmp1442
  %tmp1444 = not %loaded.val1443
  %tmp1444 = twos 8, %tmp1444
  %tmp1446 = mul 2, 5
  %index.out.of.range1447 = cmp lt 2, 0
  br %index.out.of.range1447, throw
  %index.out.of.range1447 = cmp ge 2, 25
  br %index.out.of.range1447, throw
  %tmp1448 = add %B_10, %tmp1446
  %tmp1450 = 0
  %index.out.of.range1451 = cmp lt 0, 0
  br %index.out.of.range1451, throw
  %index.out.of.range1451 = cmp ge 0, 5
  br %index.out.of.range1451, throw
  %tmp1452 = add %tmp1448, %tmp1450
  %loaded.val1453 = load %tmp1452
  %tmp1454 = and %tmp1444, %loaded.val1453
  %tmp1455 = xor %loaded.val1434, %tmp1454
  %tmp1457 = mul 0, 5
  %index.out.of.range1458 = cmp lt 0, 0
  br %index.out.of.range1458, throw
  %index.out.of.range1458 = cmp ge 0, 25
  br %index.out.of.range1458, throw
  %tmp1459 = add %A_5, %tmp1457
  %tmp1461 = 0
  %index.out.of.range1462 = cmp lt 0, 0
  br %index.out.of.range1462, throw
  %index.out.of.range1462 = cmp ge 0, 5
  br %index.out.of.range1462, throw
  %tmp1463 = add %tmp1459, %tmp1461
  store %tmp1455, %tmp1463
  %tmp1465 = mul 0, 5
  %index.out.of.range1466 = cmp lt 0, 0
  br %index.out.of.range1466, throw
  %index.out.of.range1466 = cmp ge 0, 25
  br %index.out.of.range1466, throw
  %tmp1467 = add %B_10, %tmp1465
  %tmp1469 = 1
  %index.out.of.range1470 = cmp lt 1, 0
  br %index.out.of.range1470, throw
  %index.out.of.range1470 = cmp ge 1, 5
  br %index.out.of.range1470, throw
  %tmp1471 = add %tmp1467, %tmp1469
  %loaded.val1472 = load %tmp1471
  %tmp1474 = mul 1, 5
  %index.out.of.range1475 = cmp lt 1, 0
  br %index.out.of.range1475, throw
  %index.out.of.range1475 = cmp ge 1, 25
  br %index.out.of.range1475, throw
  %tmp1476 = add %B_10, %tmp1474
  %tmp1478 = 1
  %index.out.of.range1479 = cmp lt 1, 0
  br %index.out.of.range1479, throw
  %index.out.of.range1479 = cmp ge 1, 5
  br %index.out.of.range1479, throw
  %tmp1480 = add %tmp1476, %tmp1478
  %loaded.val1481 = load %tmp1480
  %tmp1482 = not %loaded.val1481
  %tmp1482 = twos 8, %tmp1482
  %tmp1484 = mul 2, 5
  %index.out.of.range1485 = cmp lt 2, 0
  br %index.out.of.range1485, throw
  %index.out.of.range1485 = cmp ge 2, 25
  br %index.out.of.range1485, throw
  %tmp1486 = add %B_10, %tmp1484
  %tmp1488 = 1
  %index.out.of.range1489 = cmp lt 1, 0
  br %index.out.of.range1489, throw
  %index.out.of.range1489 = cmp ge 1, 5
  br %index.out.of.range1489, throw
  %tmp1490 = add %tmp1486, %tmp1488
  %loaded.val1491 = load %tmp1490
  %tmp1492 = and %tmp1482, %loaded.val1491
  %tmp1493 = xor %loaded.val1472, %tmp1492
  %tmp1495 = mul 0, 5
  %index.out.of.range1496 = cmp lt 0, 0
  br %index.out.of.range1496, throw
  %index.out.of.range1496 = cmp ge 0, 25
  br %index.out.of.range1496, throw
  %tmp1497 = add %A_5, %tmp1495
  %tmp1499 = 1
  %index.out.of.range1500 = cmp lt 1, 0
  br %index.out.of.range1500, throw
  %index.out.of.range1500 = cmp ge 1, 5
  br %index.out.of.range1500, throw
  %tmp1501 = add %tmp1497, %tmp1499
  store %tmp1493, %tmp1501
  %tmp1503 = mul 0, 5
  %index.out.of.range1504 = cmp lt 0, 0
  br %index.out.of.range1504, throw
  %index.out.of.range1504 = cmp ge 0, 25
  br %index.out.of.range1504, throw
  %tmp1505 = add %B_10, %tmp1503
  %tmp1507 = 2
  %index.out.of.range1508 = cmp lt 2, 0
  br %index.out.of.range1508, throw
  %index.out.of.range1508 = cmp ge 2, 5
  br %index.out.of.range1508, throw
  %tmp1509 = add %tmp1505, %tmp1507
  %loaded.val1510 = load %tmp1509
  %tmp1512 = mul 1, 5
  %index.out.of.range1513 = cmp lt 1, 0
  br %index.out.of.range1513, throw
  %index.out.of.range1513 = cmp ge 1, 25
  br %index.out.of.range1513, throw
  %tmp1514 = add %B_10, %tmp1512
  %tmp1516 = 2
  %index.out.of.range1517 = cmp lt 2, 0
  br %index.out.of.range1517, throw
  %index.out.of.range1517 = cmp ge 2, 5
  br %index.out.of.range1517, throw
  %tmp1518 = add %tmp1514, %tmp1516
  %loaded.val1519 = load %tmp1518
  %tmp1520 = not %loaded.val1519
  %tmp1520 = twos 8, %tmp1520
  %tmp1522 = mul 2, 5
  %index.out.of.range1523 = cmp lt 2, 0
  br %index.out.of.range1523, throw
  %index.out.of.range1523 = cmp ge 2, 25
  br %index.out.of.range1523, throw
  %tmp1524 = add %B_10, %tmp1522
  %tmp1526 = 2
  %index.out.of.range1527 = cmp lt 2, 0
  br %index.out.of.range1527, throw
  %index.out.of.range1527 = cmp ge 2, 5
  br %index.out.of.range1527, throw
  %tmp1528 = add %tmp1524, %tmp1526
  %loaded.val1529 = load %tmp1528
  %tmp1530 = and %tmp1520, %loaded.val1529
  %tmp1531 = xor %loaded.val1510, %tmp1530
  %tmp1533 = mul 0, 5
  %index.out.of.range1534 = cmp lt 0, 0
  br %index.out.of.range1534, throw
  %index.out.of.range1534 = cmp ge 0, 25
  br %index.out.of.range1534, throw
  %tmp1535 = add %A_5, %tmp1533
  %tmp1537 = 2
  %index.out.of.range1538 = cmp lt 2, 0
  br %index.out.of.range1538, throw
  %index.out.of.range1538 = cmp ge 2, 5
  br %index.out.of.range1538, throw
  %tmp1539 = add %tmp1535, %tmp1537
  store %tmp1531, %tmp1539
  %tmp1541 = mul 0, 5
  %index.out.of.range1542 = cmp lt 0, 0
  br %index.out.of.range1542, throw
  %index.out.of.range1542 = cmp ge 0, 25
  br %index.out.of.range1542, throw
  %tmp1543 = add %B_10, %tmp1541
  %tmp1545 = 3
  %index.out.of.range1546 = cmp lt 3, 0
  br %index.out.of.range1546, throw
  %index.out.of.range1546 = cmp ge 3, 5
  br %index.out.of.range1546, throw
  %tmp1547 = add %tmp1543, %tmp1545
  %loaded.val1548 = load %tmp1547
  %tmp1550 = mul 1, 5
  %index.out.of.range1551 = cmp lt 1, 0
  br %index.out.of.range1551, throw
  %index.out.of.range1551 = cmp ge 1, 25
  br %index.out.of.range1551, throw
  %tmp1552 = add %B_10, %tmp1550
  %tmp1554 = 3
  %index.out.of.range1555 = cmp lt 3, 0
  br %index.out.of.range1555, throw
  %index.out.of.range1555 = cmp ge 3, 5
  br %index.out.of.range1555, throw
  %tmp1556 = add %tmp1552, %tmp1554
  %loaded.val1557 = load %tmp1556
  %tmp1558 = not %loaded.val1557
  %tmp1558 = twos 8, %tmp1558
  %tmp1560 = mul 2, 5
  %index.out.of.range1561 = cmp lt 2, 0
  br %index.out.of.range1561, throw
  %index.out.of.range1561 = cmp ge 2, 25
  br %index.out.of.range1561, throw
  %tmp1562 = add %B_10, %tmp1560
  %tmp1564 = 3
  %index.out.of.range1565 = cmp lt 3, 0
  br %index.out.of.range1565, throw
  %index.out.of.range1565 = cmp ge 3, 5
  br %index.out.of.range1565, throw
  %tmp1566 = add %tmp1562, %tmp1564
  %loaded.val1567 = load %tmp1566
  %tmp1568 = and %tmp1558, %loaded.val1567
  %tmp1569 = xor %loaded.val1548, %tmp1568
  %tmp1571 = mul 0, 5
  %index.out.of.range1572 = cmp lt 0, 0
  br %index.out.of.range1572, throw
  %index.out.of.range1572 = cmp ge 0, 25
  br %index.out.of.range1572, throw
  %tmp1573 = add %A_5, %tmp1571
  %tmp1575 = 3
  %index.out.of.range1576 = cmp lt 3, 0
  br %index.out.of.range1576, throw
  %index.out.of.range1576 = cmp ge 3, 5
  br %index.out.of.range1576, throw
  %tmp1577 = add %tmp1573, %tmp1575
  store %tmp1569, %tmp1577
  %tmp1579 = mul 0, 5
  %index.out.of.range1580 = cmp lt 0, 0
  br %index.out.of.range1580, throw
  %index.out.of.range1580 = cmp ge 0, 25
  br %index.out.of.range1580, throw
  %tmp1581 = add %B_10, %tmp1579
  %tmp1583 = 4
  %index.out.of.range1584 = cmp lt 4, 0
  br %index.out.of.range1584, throw
  %index.out.of.range1584 = cmp ge 4, 5
  br %index.out.of.range1584, throw
  %tmp1585 = add %tmp1581, %tmp1583
  %loaded.val1586 = load %tmp1585
  %tmp1588 = mul 1, 5
  %index.out.of.range1589 = cmp lt 1, 0
  br %index.out.of.range1589, throw
  %index.out.of.range1589 = cmp ge 1, 25
  br %index.out.of.range1589, throw
  %tmp1590 = add %B_10, %tmp1588
  %tmp1592 = 4
  %index.out.of.range1593 = cmp lt 4, 0
  br %index.out.of.range1593, throw
  %index.out.of.range1593 = cmp ge 4, 5
  br %index.out.of.range1593, throw
  %tmp1594 = add %tmp1590, %tmp1592
  %loaded.val1595 = load %tmp1594
  %tmp1596 = not %loaded.val1595
  %tmp1596 = twos 8, %tmp1596
  %tmp1598 = mul 2, 5
  %index.out.of.range1599 = cmp lt 2, 0
  br %index.out.of.range1599, throw
  %index.out.of.range1599 = cmp ge 2, 25
  br %index.out.of.range1599, throw
  %tmp1600 = add %B_10, %tmp1598
  %tmp1602 = 4
  %index.out.of.range1603 = cmp lt 4, 0
  br %index.out.of.range1603, throw
  %index.out.of.range1603 = cmp ge 4, 5
  br %index.out.of.range1603, throw
  %tmp1604 = add %tmp1600, %tmp1602
  %loaded.val1605 = load %tmp1604
  %tmp1606 = and %tmp1596, %loaded.val1605
  %tmp1607 = xor %loaded.val1586, %tmp1606
  %tmp1609 = mul 0, 5
  %index.out.of.range1610 = cmp lt 0, 0
  br %index.out.of.range1610, throw
  %index.out.of.range1610 = cmp ge 0, 25
  br %index.out.of.range1610, throw
  %tmp1611 = add %A_5, %tmp1609
  %tmp1613 = 4
  %index.out.of.range1614 = cmp lt 4, 0
  br %index.out.of.range1614, throw
  %index.out.of.range1614 = cmp ge 4, 5
  br %index.out.of.range1614, throw
  %tmp1615 = add %tmp1611, %tmp1613
  store %tmp1607, %tmp1615
  %tmp1617 = mul 1, 5
  %index.out.of.range1618 = cmp lt 1, 0
  br %index.out.of.range1618, throw
  %index.out.of.range1618 = cmp ge 1, 25
  br %index.out.of.range1618, throw
  %tmp1619 = add %B_10, %tmp1617
  %tmp1621 = 0
  %index.out.of.range1622 = cmp lt 0, 0
  br %index.out.of.range1622, throw
  %index.out.of.range1622 = cmp ge 0, 5
  br %index.out.of.range1622, throw
  %tmp1623 = add %tmp1619, %tmp1621
  %loaded.val1624 = load %tmp1623
  %tmp1626 = mul 2, 5
  %index.out.of.range1627 = cmp lt 2, 0
  br %index.out.of.range1627, throw
  %index.out.of.range1627 = cmp ge 2, 25
  br %index.out.of.range1627, throw
  %tmp1628 = add %B_10, %tmp1626
  %tmp1630 = 0
  %index.out.of.range1631 = cmp lt 0, 0
  br %index.out.of.range1631, throw
  %index.out.of.range1631 = cmp ge 0, 5
  br %index.out.of.range1631, throw
  %tmp1632 = add %tmp1628, %tmp1630
  %loaded.val1633 = load %tmp1632
  %tmp1634 = not %loaded.val1633
  %tmp1634 = twos 8, %tmp1634
  %tmp1636 = mul 3, 5
  %index.out.of.range1637 = cmp lt 3, 0
  br %index.out.of.range1637, throw
  %index.out.of.range1637 = cmp ge 3, 25
  br %index.out.of.range1637, throw
  %tmp1638 = add %B_10, %tmp1636
  %tmp1640 = 0
  %index.out.of.range1641 = cmp lt 0, 0
  br %index.out.of.range1641, throw
  %index.out.of.range1641 = cmp ge 0, 5
  br %index.out.of.range1641, throw
  %tmp1642 = add %tmp1638, %tmp1640
  %loaded.val1643 = load %tmp1642
  %tmp1644 = and %tmp1634, %loaded.val1643
  %tmp1645 = xor %loaded.val1624, %tmp1644
  %tmp1647 = mul 1, 5
  %index.out.of.range1648 = cmp lt 1, 0
  br %index.out.of.range1648, throw
  %index.out.of.range1648 = cmp ge 1, 25
  br %index.out.of.range1648, throw
  %tmp1649 = add %A_5, %tmp1647
  %tmp1651 = 0
  %index.out.of.range1652 = cmp lt 0, 0
  br %index.out.of.range1652, throw
  %index.out.of.range1652 = cmp ge 0, 5
  br %index.out.of.range1652, throw
  %tmp1653 = add %tmp1649, %tmp1651
  store %tmp1645, %tmp1653
  %tmp1655 = mul 1, 5
  %index.out.of.range1656 = cmp lt 1, 0
  br %index.out.of.range1656, throw
  %index.out.of.range1656 = cmp ge 1, 25
  br %index.out.of.range1656, throw
  %tmp1657 = add %B_10, %tmp1655
  %tmp1659 = 1
  %index.out.of.range1660 = cmp lt 1, 0
  br %index.out.of.range1660, throw
  %index.out.of.range1660 = cmp ge 1, 5
  br %index.out.of.range1660, throw
  %tmp1661 = add %tmp1657, %tmp1659
  %loaded.val1662 = load %tmp1661
  %tmp1664 = mul 2, 5
  %index.out.of.range1665 = cmp lt 2, 0
  br %index.out.of.range1665, throw
  %index.out.of.range1665 = cmp ge 2, 25
  br %index.out.of.range1665, throw
  %tmp1666 = add %B_10, %tmp1664
  %tmp1668 = 1
  %index.out.of.range1669 = cmp lt 1, 0
  br %index.out.of.range1669, throw
  %index.out.of.range1669 = cmp ge 1, 5
  br %index.out.of.range1669, throw
  %tmp1670 = add %tmp1666, %tmp1668
  %loaded.val1671 = load %tmp1670
  %tmp1672 = not %loaded.val1671
  %tmp1672 = twos 8, %tmp1672
  %tmp1674 = mul 3, 5
  %index.out.of.range1675 = cmp lt 3, 0
  br %index.out.of.range1675, throw
  %index.out.of.range1675 = cmp ge 3, 25
  br %index.out.of.range1675, throw
  %tmp1676 = add %B_10, %tmp1674
  %tmp1678 = 1
  %index.out.of.range1679 = cmp lt 1, 0
  br %index.out.of.range1679, throw
  %index.out.of.range1679 = cmp ge 1, 5
  br %index.out.of.range1679, throw
  %tmp1680 = add %tmp1676, %tmp1678
  %loaded.val1681 = load %tmp1680
  %tmp1682 = and %tmp1672, %loaded.val1681
  %tmp1683 = xor %loaded.val1662, %tmp1682
  %tmp1685 = mul 1, 5
  %index.out.of.range1686 = cmp lt 1, 0
  br %index.out.of.range1686, throw
  %index.out.of.range1686 = cmp ge 1, 25
  br %index.out.of.range1686, throw
  %tmp1687 = add %A_5, %tmp1685
  %tmp1689 = 1
  %index.out.of.range1690 = cmp lt 1, 0
  br %index.out.of.range1690, throw
  %index.out.of.range1690 = cmp ge 1, 5
  br %index.out.of.range1690, throw
  %tmp1691 = add %tmp1687, %tmp1689
  store %tmp1683, %tmp1691
  %tmp1693 = mul 1, 5
  %index.out.of.range1694 = cmp lt 1, 0
  br %index.out.of.range1694, throw
  %index.out.of.range1694 = cmp ge 1, 25
  br %index.out.of.range1694, throw
  %tmp1695 = add %B_10, %tmp1693
  %tmp1697 = 2
  %index.out.of.range1698 = cmp lt 2, 0
  br %index.out.of.range1698, throw
  %index.out.of.range1698 = cmp ge 2, 5
  br %index.out.of.range1698, throw
  %tmp1699 = add %tmp1695, %tmp1697
  %loaded.val1700 = load %tmp1699
  %tmp1702 = mul 2, 5
  %index.out.of.range1703 = cmp lt 2, 0
  br %index.out.of.range1703, throw
  %index.out.of.range1703 = cmp ge 2, 25
  br %index.out.of.range1703, throw
  %tmp1704 = add %B_10, %tmp1702
  %tmp1706 = 2
  %index.out.of.range1707 = cmp lt 2, 0
  br %index.out.of.range1707, throw
  %index.out.of.range1707 = cmp ge 2, 5
  br %index.out.of.range1707, throw
  %tmp1708 = add %tmp1704, %tmp1706
  %loaded.val1709 = load %tmp1708
  %tmp1710 = not %loaded.val1709
  %tmp1710 = twos 8, %tmp1710
  %tmp1712 = mul 3, 5
  %index.out.of.range1713 = cmp lt 3, 0
  br %index.out.of.range1713, throw
  %index.out.of.range1713 = cmp ge 3, 25
  br %index.out.of.range1713, throw
  %tmp1714 = add %B_10, %tmp1712
  %tmp1716 = 2
  %index.out.of.range1717 = cmp lt 2, 0
  br %index.out.of.range1717, throw
  %index.out.of.range1717 = cmp ge 2, 5
  br %index.out.of.range1717, throw
  %tmp1718 = add %tmp1714, %tmp1716
  %loaded.val1719 = load %tmp1718
  %tmp1720 = and %tmp1710, %loaded.val1719
  %tmp1721 = xor %loaded.val1700, %tmp1720
  %tmp1723 = mul 1, 5
  %index.out.of.range1724 = cmp lt 1, 0
  br %index.out.of.range1724, throw
  %index.out.of.range1724 = cmp ge 1, 25
  br %index.out.of.range1724, throw
  %tmp1725 = add %A_5, %tmp1723
  %tmp1727 = 2
  %index.out.of.range1728 = cmp lt 2, 0
  br %index.out.of.range1728, throw
  %index.out.of.range1728 = cmp ge 2, 5
  br %index.out.of.range1728, throw
  %tmp1729 = add %tmp1725, %tmp1727
  store %tmp1721, %tmp1729
  %tmp1731 = mul 1, 5
  %index.out.of.range1732 = cmp lt 1, 0
  br %index.out.of.range1732, throw
  %index.out.of.range1732 = cmp ge 1, 25
  br %index.out.of.range1732, throw
  %tmp1733 = add %B_10, %tmp1731
  %tmp1735 = 3
  %index.out.of.range1736 = cmp lt 3, 0
  br %index.out.of.range1736, throw
  %index.out.of.range1736 = cmp ge 3, 5
  br %index.out.of.range1736, throw
  %tmp1737 = add %tmp1733, %tmp1735
  %loaded.val1738 = load %tmp1737
  %tmp1740 = mul 2, 5
  %index.out.of.range1741 = cmp lt 2, 0
  br %index.out.of.range1741, throw
  %index.out.of.range1741 = cmp ge 2, 25
  br %index.out.of.range1741, throw
  %tmp1742 = add %B_10, %tmp1740
  %tmp1744 = 3
  %index.out.of.range1745 = cmp lt 3, 0
  br %index.out.of.range1745, throw
  %index.out.of.range1745 = cmp ge 3, 5
  br %index.out.of.range1745, throw
  %tmp1746 = add %tmp1742, %tmp1744
  %loaded.val1747 = load %tmp1746
  %tmp1748 = not %loaded.val1747
  %tmp1748 = twos 8, %tmp1748
  %tmp1750 = mul 3, 5
  %index.out.of.range1751 = cmp lt 3, 0
  br %index.out.of.range1751, throw
  %index.out.of.range1751 = cmp ge 3, 25
  br %index.out.of.range1751, throw
  %tmp1752 = add %B_10, %tmp1750
  %tmp1754 = 3
  %index.out.of.range1755 = cmp lt 3, 0
  br %index.out.of.range1755, throw
  %index.out.of.range1755 = cmp ge 3, 5
  br %index.out.of.range1755, throw
  %tmp1756 = add %tmp1752, %tmp1754
  %loaded.val1757 = load %tmp1756
  %tmp1758 = and %tmp1748, %loaded.val1757
  %tmp1759 = xor %loaded.val1738, %tmp1758
  %tmp1761 = mul 1, 5
  %index.out.of.range1762 = cmp lt 1, 0
  br %index.out.of.range1762, throw
  %index.out.of.range1762 = cmp ge 1, 25
  br %index.out.of.range1762, throw
  %tmp1763 = add %A_5, %tmp1761
  %tmp1765 = 3
  %index.out.of.range1766 = cmp lt 3, 0
  br %index.out.of.range1766, throw
  %index.out.of.range1766 = cmp ge 3, 5
  br %index.out.of.range1766, throw
  %tmp1767 = add %tmp1763, %tmp1765
  store %tmp1759, %tmp1767
  %tmp1769 = mul 1, 5
  %index.out.of.range1770 = cmp lt 1, 0
  br %index.out.of.range1770, throw
  %index.out.of.range1770 = cmp ge 1, 25
  br %index.out.of.range1770, throw
  %tmp1771 = add %B_10, %tmp1769
  %tmp1773 = 4
  %index.out.of.range1774 = cmp lt 4, 0
  br %index.out.of.range1774, throw
  %index.out.of.range1774 = cmp ge 4, 5
  br %index.out.of.range1774, throw
  %tmp1775 = add %tmp1771, %tmp1773
  %loaded.val1776 = load %tmp1775
  %tmp1778 = mul 2, 5
  %index.out.of.range1779 = cmp lt 2, 0
  br %index.out.of.range1779, throw
  %index.out.of.range1779 = cmp ge 2, 25
  br %index.out.of.range1779, throw
  %tmp1780 = add %B_10, %tmp1778
  %tmp1782 = 4
  %index.out.of.range1783 = cmp lt 4, 0
  br %index.out.of.range1783, throw
  %index.out.of.range1783 = cmp ge 4, 5
  br %index.out.of.range1783, throw
  %tmp1784 = add %tmp1780, %tmp1782
  %loaded.val1785 = load %tmp1784
  %tmp1786 = not %loaded.val1785
  %tmp1786 = twos 8, %tmp1786
  %tmp1788 = mul 3, 5
  %index.out.of.range1789 = cmp lt 3, 0
  br %index.out.of.range1789, throw
  %index.out.of.range1789 = cmp ge 3, 25
  br %index.out.of.range1789, throw
  %tmp1790 = add %B_10, %tmp1788
  %tmp1792 = 4
  %index.out.of.range1793 = cmp lt 4, 0
  br %index.out.of.range1793, throw
  %index.out.of.range1793 = cmp ge 4, 5
  br %index.out.of.range1793, throw
  %tmp1794 = add %tmp1790, %tmp1792
  %loaded.val1795 = load %tmp1794
  %tmp1796 = and %tmp1786, %loaded.val1795
  %tmp1797 = xor %loaded.val1776, %tmp1796
  %tmp1799 = mul 1, 5
  %index.out.of.range1800 = cmp lt 1, 0
  br %index.out.of.range1800, throw
  %index.out.of.range1800 = cmp ge 1, 25
  br %index.out.of.range1800, throw
  %tmp1801 = add %A_5, %tmp1799
  %tmp1803 = 4
  %index.out.of.range1804 = cmp lt 4, 0
  br %index.out.of.range1804, throw
  %index.out.of.range1804 = cmp ge 4, 5
  br %index.out.of.range1804, throw
  %tmp1805 = add %tmp1801, %tmp1803
  store %tmp1797, %tmp1805
  %tmp1807 = mul 2, 5
  %index.out.of.range1808 = cmp lt 2, 0
  br %index.out.of.range1808, throw
  %index.out.of.range1808 = cmp ge 2, 25
  br %index.out.of.range1808, throw
  %tmp1809 = add %B_10, %tmp1807
  %tmp1811 = 0
  %index.out.of.range1812 = cmp lt 0, 0
  br %index.out.of.range1812, throw
  %index.out.of.range1812 = cmp ge 0, 5
  br %index.out.of.range1812, throw
  %tmp1813 = add %tmp1809, %tmp1811
  %loaded.val1814 = load %tmp1813
  %tmp1816 = mul 3, 5
  %index.out.of.range1817 = cmp lt 3, 0
  br %index.out.of.range1817, throw
  %index.out.of.range1817 = cmp ge 3, 25
  br %index.out.of.range1817, throw
  %tmp1818 = add %B_10, %tmp1816
  %tmp1820 = 0
  %index.out.of.range1821 = cmp lt 0, 0
  br %index.out.of.range1821, throw
  %index.out.of.range1821 = cmp ge 0, 5
  br %index.out.of.range1821, throw
  %tmp1822 = add %tmp1818, %tmp1820
  %loaded.val1823 = load %tmp1822
  %tmp1824 = not %loaded.val1823
  %tmp1824 = twos 8, %tmp1824
  %tmp1826 = mul 4, 5
  %index.out.of.range1827 = cmp lt 4, 0
  br %index.out.of.range1827, throw
  %index.out.of.range1827 = cmp ge 4, 25
  br %index.out.of.range1827, throw
  %tmp1828 = add %B_10, %tmp1826
  %tmp1830 = 0
  %index.out.of.range1831 = cmp lt 0, 0
  br %index.out.of.range1831, throw
  %index.out.of.range1831 = cmp ge 0, 5
  br %index.out.of.range1831, throw
  %tmp1832 = add %tmp1828, %tmp1830
  %loaded.val1833 = load %tmp1832
  %tmp1834 = and %tmp1824, %loaded.val1833
  %tmp1835 = xor %loaded.val1814, %tmp1834
  %tmp1837 = mul 2, 5
  %index.out.of.range1838 = cmp lt 2, 0
  br %index.out.of.range1838, throw
  %index.out.of.range1838 = cmp ge 2, 25
  br %index.out.of.range1838, throw
  %tmp1839 = add %A_5, %tmp1837
  %tmp1841 = 0
  %index.out.of.range1842 = cmp lt 0, 0
  br %index.out.of.range1842, throw
  %index.out.of.range1842 = cmp ge 0, 5
  br %index.out.of.range1842, throw
  %tmp1843 = add %tmp1839, %tmp1841
  store %tmp1835, %tmp1843
  %tmp1845 = mul 2, 5
  %index.out.of.range1846 = cmp lt 2, 0
  br %index.out.of.range1846, throw
  %index.out.of.range1846 = cmp ge 2, 25
  br %index.out.of.range1846, throw
  %tmp1847 = add %B_10, %tmp1845
  %tmp1849 = 1
  %index.out.of.range1850 = cmp lt 1, 0
  br %index.out.of.range1850, throw
  %index.out.of.range1850 = cmp ge 1, 5
  br %index.out.of.range1850, throw
  %tmp1851 = add %tmp1847, %tmp1849
  %loaded.val1852 = load %tmp1851
  %tmp1854 = mul 3, 5
  %index.out.of.range1855 = cmp lt 3, 0
  br %index.out.of.range1855, throw
  %index.out.of.range1855 = cmp ge 3, 25
  br %index.out.of.range1855, throw
  %tmp1856 = add %B_10, %tmp1854
  %tmp1858 = 1
  %index.out.of.range1859 = cmp lt 1, 0
  br %index.out.of.range1859, throw
  %index.out.of.range1859 = cmp ge 1, 5
  br %index.out.of.range1859, throw
  %tmp1860 = add %tmp1856, %tmp1858
  %loaded.val1861 = load %tmp1860
  %tmp1862 = not %loaded.val1861
  %tmp1862 = twos 8, %tmp1862
  %tmp1864 = mul 4, 5
  %index.out.of.range1865 = cmp lt 4, 0
  br %index.out.of.range1865, throw
  %index.out.of.range1865 = cmp ge 4, 25
  br %index.out.of.range1865, throw
  %tmp1866 = add %B_10, %tmp1864
  %tmp1868 = 1
  %index.out.of.range1869 = cmp lt 1, 0
  br %index.out.of.range1869, throw
  %index.out.of.range1869 = cmp ge 1, 5
  br %index.out.of.range1869, throw
  %tmp1870 = add %tmp1866, %tmp1868
  %loaded.val1871 = load %tmp1870
  %tmp1872 = and %tmp1862, %loaded.val1871
  %tmp1873 = xor %loaded.val1852, %tmp1872
  %tmp1875 = mul 2, 5
  %index.out.of.range1876 = cmp lt 2, 0
  br %index.out.of.range1876, throw
  %index.out.of.range1876 = cmp ge 2, 25
  br %index.out.of.range1876, throw
  %tmp1877 = add %A_5, %tmp1875
  %tmp1879 = 1
  %index.out.of.range1880 = cmp lt 1, 0
  br %index.out.of.range1880, throw
  %index.out.of.range1880 = cmp ge 1, 5
  br %index.out.of.range1880, throw
  %tmp1881 = add %tmp1877, %tmp1879
  store %tmp1873, %tmp1881
  %tmp1883 = mul 2, 5
  %index.out.of.range1884 = cmp lt 2, 0
  br %index.out.of.range1884, throw
  %index.out.of.range1884 = cmp ge 2, 25
  br %index.out.of.range1884, throw
  %tmp1885 = add %B_10, %tmp1883
  %tmp1887 = 2
  %index.out.of.range1888 = cmp lt 2, 0
  br %index.out.of.range1888, throw
  %index.out.of.range1888 = cmp ge 2, 5
  br %index.out.of.range1888, throw
  %tmp1889 = add %tmp1885, %tmp1887
  %loaded.val1890 = load %tmp1889
  %tmp1892 = mul 3, 5
  %index.out.of.range1893 = cmp lt 3, 0
  br %index.out.of.range1893, throw
  %index.out.of.range1893 = cmp ge 3, 25
  br %index.out.of.range1893, throw
  %tmp1894 = add %B_10, %tmp1892
  %tmp1896 = 2
  %index.out.of.range1897 = cmp lt 2, 0
  br %index.out.of.range1897, throw
  %index.out.of.range1897 = cmp ge 2, 5
  br %index.out.of.range1897, throw
  %tmp1898 = add %tmp1894, %tmp1896
  %loaded.val1899 = load %tmp1898
  %tmp1900 = not %loaded.val1899
  %tmp1900 = twos 8, %tmp1900
  %tmp1902 = mul 4, 5
  %index.out.of.range1903 = cmp lt 4, 0
  br %index.out.of.range1903, throw
  %index.out.of.range1903 = cmp ge 4, 25
  br %index.out.of.range1903, throw
  %tmp1904 = add %B_10, %tmp1902
  %tmp1906 = 2
  %index.out.of.range1907 = cmp lt 2, 0
  br %index.out.of.range1907, throw
  %index.out.of.range1907 = cmp ge 2, 5
  br %index.out.of.range1907, throw
  %tmp1908 = add %tmp1904, %tmp1906
  %loaded.val1909 = load %tmp1908
  %tmp1910 = and %tmp1900, %loaded.val1909
  %tmp1911 = xor %loaded.val1890, %tmp1910
  %tmp1913 = mul 2, 5
  %index.out.of.range1914 = cmp lt 2, 0
  br %index.out.of.range1914, throw
  %index.out.of.range1914 = cmp ge 2, 25
  br %index.out.of.range1914, throw
  %tmp1915 = add %A_5, %tmp1913
  %tmp1917 = 2
  %index.out.of.range1918 = cmp lt 2, 0
  br %index.out.of.range1918, throw
  %index.out.of.range1918 = cmp ge 2, 5
  br %index.out.of.range1918, throw
  %tmp1919 = add %tmp1915, %tmp1917
  store %tmp1911, %tmp1919
  %tmp1921 = mul 2, 5
  %index.out.of.range1922 = cmp lt 2, 0
  br %index.out.of.range1922, throw
  %index.out.of.range1922 = cmp ge 2, 25
  br %index.out.of.range1922, throw
  %tmp1923 = add %B_10, %tmp1921
  %tmp1925 = 3
  %index.out.of.range1926 = cmp lt 3, 0
  br %index.out.of.range1926, throw
  %index.out.of.range1926 = cmp ge 3, 5
  br %index.out.of.range1926, throw
  %tmp1927 = add %tmp1923, %tmp1925
  %loaded.val1928 = load %tmp1927
  %tmp1930 = mul 3, 5
  %index.out.of.range1931 = cmp lt 3, 0
  br %index.out.of.range1931, throw
  %index.out.of.range1931 = cmp ge 3, 25
  br %index.out.of.range1931, throw
  %tmp1932 = add %B_10, %tmp1930
  %tmp1934 = 3
  %index.out.of.range1935 = cmp lt 3, 0
  br %index.out.of.range1935, throw
  %index.out.of.range1935 = cmp ge 3, 5
  br %index.out.of.range1935, throw
  %tmp1936 = add %tmp1932, %tmp1934
  %loaded.val1937 = load %tmp1936
  %tmp1938 = not %loaded.val1937
  %tmp1938 = twos 8, %tmp1938
  %tmp1940 = mul 4, 5
  %index.out.of.range1941 = cmp lt 4, 0
  br %index.out.of.range1941, throw
  %index.out.of.range1941 = cmp ge 4, 25
  br %index.out.of.range1941, throw
  %tmp1942 = add %B_10, %tmp1940
  %tmp1944 = 3
  %index.out.of.range1945 = cmp lt 3, 0
  br %index.out.of.range1945, throw
  %index.out.of.range1945 = cmp ge 3, 5
  br %index.out.of.range1945, throw
  %tmp1946 = add %tmp1942, %tmp1944
  %loaded.val1947 = load %tmp1946
  %tmp1948 = and %tmp1938, %loaded.val1947
  %tmp1949 = xor %loaded.val1928, %tmp1948
  %tmp1951 = mul 2, 5
  %index.out.of.range1952 = cmp lt 2, 0
  br %index.out.of.range1952, throw
  %index.out.of.range1952 = cmp ge 2, 25
  br %index.out.of.range1952, throw
  %tmp1953 = add %A_5, %tmp1951
  %tmp1955 = 3
  %index.out.of.range1956 = cmp lt 3, 0
  br %index.out.of.range1956, throw
  %index.out.of.range1956 = cmp ge 3, 5
  br %index.out.of.range1956, throw
  %tmp1957 = add %tmp1953, %tmp1955
  store %tmp1949, %tmp1957
  %tmp1959 = mul 2, 5
  %index.out.of.range1960 = cmp lt 2, 0
  br %index.out.of.range1960, throw
  %index.out.of.range1960 = cmp ge 2, 25
  br %index.out.of.range1960, throw
  %tmp1961 = add %B_10, %tmp1959
  %tmp1963 = 4
  %index.out.of.range1964 = cmp lt 4, 0
  br %index.out.of.range1964, throw
  %index.out.of.range1964 = cmp ge 4, 5
  br %index.out.of.range1964, throw
  %tmp1965 = add %tmp1961, %tmp1963
  %loaded.val1966 = load %tmp1965
  %tmp1968 = mul 3, 5
  %index.out.of.range1969 = cmp lt 3, 0
  br %index.out.of.range1969, throw
  %index.out.of.range1969 = cmp ge 3, 25
  br %index.out.of.range1969, throw
  %tmp1970 = add %B_10, %tmp1968
  %tmp1972 = 4
  %index.out.of.range1973 = cmp lt 4, 0
  br %index.out.of.range1973, throw
  %index.out.of.range1973 = cmp ge 4, 5
  br %index.out.of.range1973, throw
  %tmp1974 = add %tmp1970, %tmp1972
  %loaded.val1975 = load %tmp1974
  %tmp1976 = not %loaded.val1975
  %tmp1976 = twos 8, %tmp1976
  %tmp1978 = mul 4, 5
  %index.out.of.range1979 = cmp lt 4, 0
  br %index.out.of.range1979, throw
  %index.out.of.range1979 = cmp ge 4, 25
  br %index.out.of.range1979, throw
  %tmp1980 = add %B_10, %tmp1978
  %tmp1982 = 4
  %index.out.of.range1983 = cmp lt 4, 0
  br %index.out.of.range1983, throw
  %index.out.of.range1983 = cmp ge 4, 5
  br %index.out.of.range1983, throw
  %tmp1984 = add %tmp1980, %tmp1982
  %loaded.val1985 = load %tmp1984
  %tmp1986 = and %tmp1976, %loaded.val1985
  %tmp1987 = xor %loaded.val1966, %tmp1986
  %tmp1989 = mul 2, 5
  %index.out.of.range1990 = cmp lt 2, 0
  br %index.out.of.range1990, throw
  %index.out.of.range1990 = cmp ge 2, 25
  br %index.out.of.range1990, throw
  %tmp1991 = add %A_5, %tmp1989
  %tmp1993 = 4
  %index.out.of.range1994 = cmp lt 4, 0
  br %index.out.of.range1994, throw
  %index.out.of.range1994 = cmp ge 4, 5
  br %index.out.of.range1994, throw
  %tmp1995 = add %tmp1991, %tmp1993
  store %tmp1987, %tmp1995
  %tmp1997 = mul 3, 5
  %index.out.of.range1998 = cmp lt 3, 0
  br %index.out.of.range1998, throw
  %index.out.of.range1998 = cmp ge 3, 25
  br %index.out.of.range1998, throw
  %tmp1999 = add %B_10, %tmp1997
  %tmp2001 = 0
  %index.out.of.range2002 = cmp lt 0, 0
  br %index.out.of.range2002, throw
  %index.out.of.range2002 = cmp ge 0, 5
  br %index.out.of.range2002, throw
  %tmp2003 = add %tmp1999, %tmp2001
  %loaded.val2004 = load %tmp2003
  %tmp2006 = mul 4, 5
  %index.out.of.range2007 = cmp lt 4, 0
  br %index.out.of.range2007, throw
  %index.out.of.range2007 = cmp ge 4, 25
  br %index.out.of.range2007, throw
  %tmp2008 = add %B_10, %tmp2006
  %tmp2010 = 0
  %index.out.of.range2011 = cmp lt 0, 0
  br %index.out.of.range2011, throw
  %index.out.of.range2011 = cmp ge 0, 5
  br %index.out.of.range2011, throw
  %tmp2012 = add %tmp2008, %tmp2010
  %loaded.val2013 = load %tmp2012
  %tmp2014 = not %loaded.val2013
  %tmp2014 = twos 8, %tmp2014
  %tmp2016 = mul 0, 5
  %index.out.of.range2017 = cmp lt 0, 0
  br %index.out.of.range2017, throw
  %index.out.of.range2017 = cmp ge 0, 25
  br %index.out.of.range2017, throw
  %tmp2018 = add %B_10, %tmp2016
  %tmp2020 = 0
  %index.out.of.range2021 = cmp lt 0, 0
  br %index.out.of.range2021, throw
  %index.out.of.range2021 = cmp ge 0, 5
  br %index.out.of.range2021, throw
  %tmp2022 = add %tmp2018, %tmp2020
  %loaded.val2023 = load %tmp2022
  %tmp2024 = and %tmp2014, %loaded.val2023
  %tmp2025 = xor %loaded.val2004, %tmp2024
  %tmp2027 = mul 3, 5
  %index.out.of.range2028 = cmp lt 3, 0
  br %index.out.of.range2028, throw
  %index.out.of.range2028 = cmp ge 3, 25
  br %index.out.of.range2028, throw
  %tmp2029 = add %A_5, %tmp2027
  %tmp2031 = 0
  %index.out.of.range2032 = cmp lt 0, 0
  br %index.out.of.range2032, throw
  %index.out.of.range2032 = cmp ge 0, 5
  br %index.out.of.range2032, throw
  %tmp2033 = add %tmp2029, %tmp2031
  store %tmp2025, %tmp2033
  %tmp2035 = mul 3, 5
  %index.out.of.range2036 = cmp lt 3, 0
  br %index.out.of.range2036, throw
  %index.out.of.range2036 = cmp ge 3, 25
  br %index.out.of.range2036, throw
  %tmp2037 = add %B_10, %tmp2035
  %tmp2039 = 1
  %index.out.of.range2040 = cmp lt 1, 0
  br %index.out.of.range2040, throw
  %index.out.of.range2040 = cmp ge 1, 5
  br %index.out.of.range2040, throw
  %tmp2041 = add %tmp2037, %tmp2039
  %loaded.val2042 = load %tmp2041
  %tmp2044 = mul 4, 5
  %index.out.of.range2045 = cmp lt 4, 0
  br %index.out.of.range2045, throw
  %index.out.of.range2045 = cmp ge 4, 25
  br %index.out.of.range2045, throw
  %tmp2046 = add %B_10, %tmp2044
  %tmp2048 = 1
  %index.out.of.range2049 = cmp lt 1, 0
  br %index.out.of.range2049, throw
  %index.out.of.range2049 = cmp ge 1, 5
  br %index.out.of.range2049, throw
  %tmp2050 = add %tmp2046, %tmp2048
  %loaded.val2051 = load %tmp2050
  %tmp2052 = not %loaded.val2051
  %tmp2052 = twos 8, %tmp2052
  %tmp2054 = mul 0, 5
  %index.out.of.range2055 = cmp lt 0, 0
  br %index.out.of.range2055, throw
  %index.out.of.range2055 = cmp ge 0, 25
  br %index.out.of.range2055, throw
  %tmp2056 = add %B_10, %tmp2054
  %tmp2058 = 1
  %index.out.of.range2059 = cmp lt 1, 0
  br %index.out.of.range2059, throw
  %index.out.of.range2059 = cmp ge 1, 5
  br %index.out.of.range2059, throw
  %tmp2060 = add %tmp2056, %tmp2058
  %loaded.val2061 = load %tmp2060
  %tmp2062 = and %tmp2052, %loaded.val2061
  %tmp2063 = xor %loaded.val2042, %tmp2062
  %tmp2065 = mul 3, 5
  %index.out.of.range2066 = cmp lt 3, 0
  br %index.out.of.range2066, throw
  %index.out.of.range2066 = cmp ge 3, 25
  br %index.out.of.range2066, throw
  %tmp2067 = add %A_5, %tmp2065
  %tmp2069 = 1
  %index.out.of.range2070 = cmp lt 1, 0
  br %index.out.of.range2070, throw
  %index.out.of.range2070 = cmp ge 1, 5
  br %index.out.of.range2070, throw
  %tmp2071 = add %tmp2067, %tmp2069
  store %tmp2063, %tmp2071
  %tmp2073 = mul 3, 5
  %index.out.of.range2074 = cmp lt 3, 0
  br %index.out.of.range2074, throw
  %index.out.of.range2074 = cmp ge 3, 25
  br %index.out.of.range2074, throw
  %tmp2075 = add %B_10, %tmp2073
  %tmp2077 = 2
  %index.out.of.range2078 = cmp lt 2, 0
  br %index.out.of.range2078, throw
  %index.out.of.range2078 = cmp ge 2, 5
  br %index.out.of.range2078, throw
  %tmp2079 = add %tmp2075, %tmp2077
  %loaded.val2080 = load %tmp2079
  %tmp2082 = mul 4, 5
  %index.out.of.range2083 = cmp lt 4, 0
  br %index.out.of.range2083, throw
  %index.out.of.range2083 = cmp ge 4, 25
  br %index.out.of.range2083, throw
  %tmp2084 = add %B_10, %tmp2082
  %tmp2086 = 2
  %index.out.of.range2087 = cmp lt 2, 0
  br %index.out.of.range2087, throw
  %index.out.of.range2087 = cmp ge 2, 5
  br %index.out.of.range2087, throw
  %tmp2088 = add %tmp2084, %tmp2086
  %loaded.val2089 = load %tmp2088
  %tmp2090 = not %loaded.val2089
  %tmp2090 = twos 8, %tmp2090
  %tmp2092 = mul 0, 5
  %index.out.of.range2093 = cmp lt 0, 0
  br %index.out.of.range2093, throw
  %index.out.of.range2093 = cmp ge 0, 25
  br %index.out.of.range2093, throw
  %tmp2094 = add %B_10, %tmp2092
  %tmp2096 = 2
  %index.out.of.range2097 = cmp lt 2, 0
  br %index.out.of.range2097, throw
  %index.out.of.range2097 = cmp ge 2, 5
  br %index.out.of.range2097, throw
  %tmp2098 = add %tmp2094, %tmp2096
  %loaded.val2099 = load %tmp2098
  %tmp2100 = and %tmp2090, %loaded.val2099
  %tmp2101 = xor %loaded.val2080, %tmp2100
  %tmp2103 = mul 3, 5
  %index.out.of.range2104 = cmp lt 3, 0
  br %index.out.of.range2104, throw
  %index.out.of.range2104 = cmp ge 3, 25
  br %index.out.of.range2104, throw
  %tmp2105 = add %A_5, %tmp2103
  %tmp2107 = 2
  %index.out.of.range2108 = cmp lt 2, 0
  br %index.out.of.range2108, throw
  %index.out.of.range2108 = cmp ge 2, 5
  br %index.out.of.range2108, throw
  %tmp2109 = add %tmp2105, %tmp2107
  store %tmp2101, %tmp2109
  %tmp2111 = mul 3, 5
  %index.out.of.range2112 = cmp lt 3, 0
  br %index.out.of.range2112, throw
  %index.out.of.range2112 = cmp ge 3, 25
  br %index.out.of.range2112, throw
  %tmp2113 = add %B_10, %tmp2111
  %tmp2115 = 3
  %index.out.of.range2116 = cmp lt 3, 0
  br %index.out.of.range2116, throw
  %index.out.of.range2116 = cmp ge 3, 5
  br %index.out.of.range2116, throw
  %tmp2117 = add %tmp2113, %tmp2115
  %loaded.val2118 = load %tmp2117
  %tmp2120 = mul 4, 5
  %index.out.of.range2121 = cmp lt 4, 0
  br %index.out.of.range2121, throw
  %index.out.of.range2121 = cmp ge 4, 25
  br %index.out.of.range2121, throw
  %tmp2122 = add %B_10, %tmp2120
  %tmp2124 = 3
  %index.out.of.range2125 = cmp lt 3, 0
  br %index.out.of.range2125, throw
  %index.out.of.range2125 = cmp ge 3, 5
  br %index.out.of.range2125, throw
  %tmp2126 = add %tmp2122, %tmp2124
  %loaded.val2127 = load %tmp2126
  %tmp2128 = not %loaded.val2127
  %tmp2128 = twos 8, %tmp2128
  %tmp2130 = mul 0, 5
  %index.out.of.range2131 = cmp lt 0, 0
  br %index.out.of.range2131, throw
  %index.out.of.range2131 = cmp ge 0, 25
  br %index.out.of.range2131, throw
  %tmp2132 = add %B_10, %tmp2130
  %tmp2134 = 3
  %index.out.of.range2135 = cmp lt 3, 0
  br %index.out.of.range2135, throw
  %index.out.of.range2135 = cmp ge 3, 5
  br %index.out.of.range2135, throw
  %tmp2136 = add %tmp2132, %tmp2134
  %loaded.val2137 = load %tmp2136
  %tmp2138 = and %tmp2128, %loaded.val2137
  %tmp2139 = xor %loaded.val2118, %tmp2138
  %tmp2141 = mul 3, 5
  %index.out.of.range2142 = cmp lt 3, 0
  br %index.out.of.range2142, throw
  %index.out.of.range2142 = cmp ge 3, 25
  br %index.out.of.range2142, throw
  %tmp2143 = add %A_5, %tmp2141
  %tmp2145 = 3
  %index.out.of.range2146 = cmp lt 3, 0
  br %index.out.of.range2146, throw
  %index.out.of.range2146 = cmp ge 3, 5
  br %index.out.of.range2146, throw
  %tmp2147 = add %tmp2143, %tmp2145
  store %tmp2139, %tmp2147
  %tmp2149 = mul 3, 5
  %index.out.of.range2150 = cmp lt 3, 0
  br %index.out.of.range2150, throw
  %index.out.of.range2150 = cmp ge 3, 25
  br %index.out.of.range2150, throw
  %tmp2151 = add %B_10, %tmp2149
  %tmp2153 = 4
  %index.out.of.range2154 = cmp lt 4, 0
  br %index.out.of.range2154, throw
  %index.out.of.range2154 = cmp ge 4, 5
  br %index.out.of.range2154, throw
  %tmp2155 = add %tmp2151, %tmp2153
  %loaded.val2156 = load %tmp2155
  %tmp2158 = mul 4, 5
  %index.out.of.range2159 = cmp lt 4, 0
  br %index.out.of.range2159, throw
  %index.out.of.range2159 = cmp ge 4, 25
  br %index.out.of.range2159, throw
  %tmp2160 = add %B_10, %tmp2158
  %tmp2162 = 4
  %index.out.of.range2163 = cmp lt 4, 0
  br %index.out.of.range2163, throw
  %index.out.of.range2163 = cmp ge 4, 5
  br %index.out.of.range2163, throw
  %tmp2164 = add %tmp2160, %tmp2162
  %loaded.val2165 = load %tmp2164
  %tmp2166 = not %loaded.val2165
  %tmp2166 = twos 8, %tmp2166
  %tmp2168 = mul 0, 5
  %index.out.of.range2169 = cmp lt 0, 0
  br %index.out.of.range2169, throw
  %index.out.of.range2169 = cmp ge 0, 25
  br %index.out.of.range2169, throw
  %tmp2170 = add %B_10, %tmp2168
  %tmp2172 = 4
  %index.out.of.range2173 = cmp lt 4, 0
  br %index.out.of.range2173, throw
  %index.out.of.range2173 = cmp ge 4, 5
  br %index.out.of.range2173, throw
  %tmp2174 = add %tmp2170, %tmp2172
  %loaded.val2175 = load %tmp2174
  %tmp2176 = and %tmp2166, %loaded.val2175
  %tmp2177 = xor %loaded.val2156, %tmp2176
  %tmp2179 = mul 3, 5
  %index.out.of.range2180 = cmp lt 3, 0
  br %index.out.of.range2180, throw
  %index.out.of.range2180 = cmp ge 3, 25
  br %index.out.of.range2180, throw
  %tmp2181 = add %A_5, %tmp2179
  %tmp2183 = 4
  %index.out.of.range2184 = cmp lt 4, 0
  br %index.out.of.range2184, throw
  %index.out.of.range2184 = cmp ge 4, 5
  br %index.out.of.range2184, throw
  %tmp2185 = add %tmp2181, %tmp2183
  store %tmp2177, %tmp2185
  %tmp2187 = mul 4, 5
  %index.out.of.range2188 = cmp lt 4, 0
  br %index.out.of.range2188, throw
  %index.out.of.range2188 = cmp ge 4, 25
  br %index.out.of.range2188, throw
  %tmp2189 = add %B_10, %tmp2187
  %tmp2191 = 0
  %index.out.of.range2192 = cmp lt 0, 0
  br %index.out.of.range2192, throw
  %index.out.of.range2192 = cmp ge 0, 5
  br %index.out.of.range2192, throw
  %tmp2193 = add %tmp2189, %tmp2191
  %loaded.val2194 = load %tmp2193
  %tmp2196 = mul 0, 5
  %index.out.of.range2197 = cmp lt 0, 0
  br %index.out.of.range2197, throw
  %index.out.of.range2197 = cmp ge 0, 25
  br %index.out.of.range2197, throw
  %tmp2198 = add %B_10, %tmp2196
  %tmp2200 = 0
  %index.out.of.range2201 = cmp lt 0, 0
  br %index.out.of.range2201, throw
  %index.out.of.range2201 = cmp ge 0, 5
  br %index.out.of.range2201, throw
  %tmp2202 = add %tmp2198, %tmp2200
  %loaded.val2203 = load %tmp2202
  %tmp2204 = not %loaded.val2203
  %tmp2204 = twos 8, %tmp2204
  %tmp2206 = mul 1, 5
  %index.out.of.range2207 = cmp lt 1, 0
  br %index.out.of.range2207, throw
  %index.out.of.range2207 = cmp ge 1, 25
  br %index.out.of.range2207, throw
  %tmp2208 = add %B_10, %tmp2206
  %tmp2210 = 0
  %index.out.of.range2211 = cmp lt 0, 0
  br %index.out.of.range2211, throw
  %index.out.of.range2211 = cmp ge 0, 5
  br %index.out.of.range2211, throw
  %tmp2212 = add %tmp2208, %tmp2210
  %loaded.val2213 = load %tmp2212
  %tmp2214 = and %tmp2204, %loaded.val2213
  %tmp2215 = xor %loaded.val2194, %tmp2214
  %tmp2217 = mul 4, 5
  %index.out.of.range2218 = cmp lt 4, 0
  br %index.out.of.range2218, throw
  %index.out.of.range2218 = cmp ge 4, 25
  br %index.out.of.range2218, throw
  %tmp2219 = add %A_5, %tmp2217
  %tmp2221 = 0
  %index.out.of.range2222 = cmp lt 0, 0
  br %index.out.of.range2222, throw
  %index.out.of.range2222 = cmp ge 0, 5
  br %index.out.of.range2222, throw
  %tmp2223 = add %tmp2219, %tmp2221
  store %tmp2215, %tmp2223
  %tmp2225 = mul 4, 5
  %index.out.of.range2226 = cmp lt 4, 0
  br %index.out.of.range2226, throw
  %index.out.of.range2226 = cmp ge 4, 25
  br %index.out.of.range2226, throw
  %tmp2227 = add %B_10, %tmp2225
  %tmp2229 = 1
  %index.out.of.range2230 = cmp lt 1, 0
  br %index.out.of.range2230, throw
  %index.out.of.range2230 = cmp ge 1, 5
  br %index.out.of.range2230, throw
  %tmp2231 = add %tmp2227, %tmp2229
  %loaded.val2232 = load %tmp2231
  %tmp2234 = mul 0, 5
  %index.out.of.range2235 = cmp lt 0, 0
  br %index.out.of.range2235, throw
  %index.out.of.range2235 = cmp ge 0, 25
  br %index.out.of.range2235, throw
  %tmp2236 = add %B_10, %tmp2234
  %tmp2238 = 1
  %index.out.of.range2239 = cmp lt 1, 0
  br %index.out.of.range2239, throw
  %index.out.of.range2239 = cmp ge 1, 5
  br %index.out.of.range2239, throw
  %tmp2240 = add %tmp2236, %tmp2238
  %loaded.val2241 = load %tmp2240
  %tmp2242 = not %loaded.val2241
  %tmp2242 = twos 8, %tmp2242
  %tmp2244 = mul 1, 5
  %index.out.of.range2245 = cmp lt 1, 0
  br %index.out.of.range2245, throw
  %index.out.of.range2245 = cmp ge 1, 25
  br %index.out.of.range2245, throw
  %tmp2246 = add %B_10, %tmp2244
  %tmp2248 = 1
  %index.out.of.range2249 = cmp lt 1, 0
  br %index.out.of.range2249, throw
  %index.out.of.range2249 = cmp ge 1, 5
  br %index.out.of.range2249, throw
  %tmp2250 = add %tmp2246, %tmp2248
  %loaded.val2251 = load %tmp2250
  %tmp2252 = and %tmp2242, %loaded.val2251
  %tmp2253 = xor %loaded.val2232, %tmp2252
  %tmp2255 = mul 4, 5
  %index.out.of.range2256 = cmp lt 4, 0
  br %index.out.of.range2256, throw
  %index.out.of.range2256 = cmp ge 4, 25
  br %index.out.of.range2256, throw
  %tmp2257 = add %A_5, %tmp2255
  %tmp2259 = 1
  %index.out.of.range2260 = cmp lt 1, 0
  br %index.out.of.range2260, throw
  %index.out.of.range2260 = cmp ge 1, 5
  br %index.out.of.range2260, throw
  %tmp2261 = add %tmp2257, %tmp2259
  store %tmp2253, %tmp2261
  %tmp2263 = mul 4, 5
  %index.out.of.range2264 = cmp lt 4, 0
  br %index.out.of.range2264, throw
  %index.out.of.range2264 = cmp ge 4, 25
  br %index.out.of.range2264, throw
  %tmp2265 = add %B_10, %tmp2263
  %tmp2267 = 2
  %index.out.of.range2268 = cmp lt 2, 0
  br %index.out.of.range2268, throw
  %index.out.of.range2268 = cmp ge 2, 5
  br %index.out.of.range2268, throw
  %tmp2269 = add %tmp2265, %tmp2267
  %loaded.val2270 = load %tmp2269
  %tmp2272 = mul 0, 5
  %index.out.of.range2273 = cmp lt 0, 0
  br %index.out.of.range2273, throw
  %index.out.of.range2273 = cmp ge 0, 25
  br %index.out.of.range2273, throw
  %tmp2274 = add %B_10, %tmp2272
  %tmp2276 = 2
  %index.out.of.range2277 = cmp lt 2, 0
  br %index.out.of.range2277, throw
  %index.out.of.range2277 = cmp ge 2, 5
  br %index.out.of.range2277, throw
  %tmp2278 = add %tmp2274, %tmp2276
  %loaded.val2279 = load %tmp2278
  %tmp2280 = not %loaded.val2279
  %tmp2280 = twos 8, %tmp2280
  %tmp2282 = mul 1, 5
  %index.out.of.range2283 = cmp lt 1, 0
  br %index.out.of.range2283, throw
  %index.out.of.range2283 = cmp ge 1, 25
  br %index.out.of.range2283, throw
  %tmp2284 = add %B_10, %tmp2282
  %tmp2286 = 2
  %index.out.of.range2287 = cmp lt 2, 0
  br %index.out.of.range2287, throw
  %index.out.of.range2287 = cmp ge 2, 5
  br %index.out.of.range2287, throw
  %tmp2288 = add %tmp2284, %tmp2286
  %loaded.val2289 = load %tmp2288
  %tmp2290 = and %tmp2280, %loaded.val2289
  %tmp2291 = xor %loaded.val2270, %tmp2290
  %tmp2293 = mul 4, 5
  %index.out.of.range2294 = cmp lt 4, 0
  br %index.out.of.range2294, throw
  %index.out.of.range2294 = cmp ge 4, 25
  br %index.out.of.range2294, throw
  %tmp2295 = add %A_5, %tmp2293
  %tmp2297 = 2
  %index.out.of.range2298 = cmp lt 2, 0
  br %index.out.of.range2298, throw
  %index.out.of.range2298 = cmp ge 2, 5
  br %index.out.of.range2298, throw
  %tmp2299 = add %tmp2295, %tmp2297
  store %tmp2291, %tmp2299
  %tmp2301 = mul 4, 5
  %index.out.of.range2302 = cmp lt 4, 0
  br %index.out.of.range2302, throw
  %index.out.of.range2302 = cmp ge 4, 25
  br %index.out.of.range2302, throw
  %tmp2303 = add %B_10, %tmp2301
  %tmp2305 = 3
  %index.out.of.range2306 = cmp lt 3, 0
  br %index.out.of.range2306, throw
  %index.out.of.range2306 = cmp ge 3, 5
  br %index.out.of.range2306, throw
  %tmp2307 = add %tmp2303, %tmp2305
  %loaded.val2308 = load %tmp2307
  %tmp2310 = mul 0, 5
  %index.out.of.range2311 = cmp lt 0, 0
  br %index.out.of.range2311, throw
  %index.out.of.range2311 = cmp ge 0, 25
  br %index.out.of.range2311, throw
  %tmp2312 = add %B_10, %tmp2310
  %tmp2314 = 3
  %index.out.of.range2315 = cmp lt 3, 0
  br %index.out.of.range2315, throw
  %index.out.of.range2315 = cmp ge 3, 5
  br %index.out.of.range2315, throw
  %tmp2316 = add %tmp2312, %tmp2314
  %loaded.val2317 = load %tmp2316
  %tmp2318 = not %loaded.val2317
  %tmp2318 = twos 8, %tmp2318
  %tmp2320 = mul 1, 5
  %index.out.of.range2321 = cmp lt 1, 0
  br %index.out.of.range2321, throw
  %index.out.of.range2321 = cmp ge 1, 25
  br %index.out.of.range2321, throw
  %tmp2322 = add %B_10, %tmp2320
  %tmp2324 = 3
  %index.out.of.range2325 = cmp lt 3, 0
  br %index.out.of.range2325, throw
  %index.out.of.range2325 = cmp ge 3, 5
  br %index.out.of.range2325, throw
  %tmp2326 = add %tmp2322, %tmp2324
  %loaded.val2327 = load %tmp2326
  %tmp2328 = and %tmp2318, %loaded.val2327
  %tmp2329 = xor %loaded.val2308, %tmp2328
  %tmp2331 = mul 4, 5
  %index.out.of.range2332 = cmp lt 4, 0
  br %index.out.of.range2332, throw
  %index.out.of.range2332 = cmp ge 4, 25
  br %index.out.of.range2332, throw
  %tmp2333 = add %A_5, %tmp2331
  %tmp2335 = 3
  %index.out.of.range2336 = cmp lt 3, 0
  br %index.out.of.range2336, throw
  %index.out.of.range2336 = cmp ge 3, 5
  br %index.out.of.range2336, throw
  %tmp2337 = add %tmp2333, %tmp2335
  store %tmp2329, %tmp2337
  %tmp2339 = mul 4, 5
  %index.out.of.range2340 = cmp lt 4, 0
  br %index.out.of.range2340, throw
  %index.out.of.range2340 = cmp ge 4, 25
  br %index.out.of.range2340, throw
  %tmp2341 = add %B_10, %tmp2339
  %tmp2343 = 4
  %index.out.of.range2344 = cmp lt 4, 0
  br %index.out.of.range2344, throw
  %index.out.of.range2344 = cmp ge 4, 5
  br %index.out.of.range2344, throw
  %tmp2345 = add %tmp2341, %tmp2343
  %loaded.val2346 = load %tmp2345
  %tmp2348 = mul 0, 5
  %index.out.of.range2349 = cmp lt 0, 0
  br %index.out.of.range2349, throw
  %index.out.of.range2349 = cmp ge 0, 25
  br %index.out.of.range2349, throw
  %tmp2350 = add %B_10, %tmp2348
  %tmp2352 = 4
  %index.out.of.range2353 = cmp lt 4, 0
  br %index.out.of.range2353, throw
  %index.out.of.range2353 = cmp ge 4, 5
  br %index.out.of.range2353, throw
  %tmp2354 = add %tmp2350, %tmp2352
  %loaded.val2355 = load %tmp2354
  %tmp2356 = not %loaded.val2355
  %tmp2356 = twos 8, %tmp2356
  %tmp2358 = mul 1, 5
  %index.out.of.range2359 = cmp lt 1, 0
  br %index.out.of.range2359, throw
  %index.out.of.range2359 = cmp ge 1, 25
  br %index.out.of.range2359, throw
  %tmp2360 = add %B_10, %tmp2358
  %tmp2362 = 4
  %index.out.of.range2363 = cmp lt 4, 0
  br %index.out.of.range2363, throw
  %index.out.of.range2363 = cmp ge 4, 5
  br %index.out.of.range2363, throw
  %tmp2364 = add %tmp2360, %tmp2362
  %loaded.val2365 = load %tmp2364
  %tmp2366 = and %tmp2356, %loaded.val2365
  %tmp2367 = xor %loaded.val2346, %tmp2366
  %tmp2369 = mul 4, 5
  %index.out.of.range2370 = cmp lt 4, 0
  br %index.out.of.range2370, throw
  %index.out.of.range2370 = cmp ge 4, 25
  br %index.out.of.range2370, throw
  %tmp2371 = add %A_5, %tmp2369
  %tmp2373 = 4
  %index.out.of.range2374 = cmp lt 4, 0
  br %index.out.of.range2374, throw
  %index.out.of.range2374 = cmp ge 4, 5
  br %index.out.of.range2374, throw
  %tmp2375 = add %tmp2371, %tmp2373
  store %tmp2367, %tmp2375
  %tmp2377 = mul 0, 5
  %index.out.of.range2378 = cmp lt 0, 0
  br %index.out.of.range2378, throw
  %index.out.of.range2378 = cmp ge 0, 25
  br %index.out.of.range2378, throw
  %tmp2379 = add %A_5, %tmp2377
  %tmp2381 = 0
  %index.out.of.range2382 = cmp lt 0, 0
  br %index.out.of.range2382, throw
  %index.out.of.range2382 = cmp ge 0, 5
  br %index.out.of.range2382, throw
  %tmp2383 = add %tmp2379, %tmp2381
  %loaded.val2384 = load %tmp2383
  %tmp2385 = xor %loaded.val2384, %RCi_6
  %tmp2387 = mul 0, 5
  %index.out.of.range2388 = cmp lt 0, 0
  br %index.out.of.range2388, throw
  %index.out.of.range2388 = cmp ge 0, 25
  br %index.out.of.range2388, throw
  %tmp2389 = add %A_5, %tmp2387
  %tmp2391 = 0
  %index.out.of.range2392 = cmp lt 0, 0
  br %index.out.of.range2392, throw
  %index.out.of.range2392 = cmp ge 0, 5
  br %index.out.of.range2392, throw
  %tmp2393 = add %tmp2389, %tmp2391
  store %tmp2385, %tmp2393
  %_7 = %A_5
  br return

return:
  ret %_7

throw:
  revert -1
}

define @"bswap.t_function_internal_pure$_t_uint64_$returns$_t_uint64_$"(%input_11) {
entry:
  %v_12 = %input_11
  %tmp = and %v_12, 18374966859414961920
  %tmp1 = sub 0, 8
  %tmp2 = shift %tmp, %tmp1
  %tmp4 = and %v_12, 71777214294589695
  %tmp5 = shift %tmp4, 8
  %tmp5 = twos 8, %tmp5
  %tmp6 = or %tmp2, %tmp5
  %v_12 = %tmp6
  %tmp8 = and %v_12, 18446462603027742720
  %tmp9 = sub 0, 16
  %tmp10 = shift %tmp8, %tmp9
  %tmp12 = and %v_12, 281470681808895
  %tmp13 = shift %tmp12, 16
  %tmp13 = twos 8, %tmp13
  %tmp14 = or %tmp10, %tmp13
  %v_12 = %tmp14
  %tmp15 = sub 0, 32
  %tmp16 = shift %v_12, %tmp15
  %tmp17 = shift %v_12, 32
  %tmp17 = twos 8, %tmp17
  %tmp18 = or %tmp16, %tmp17
  %v_12 = %tmp18

return:
  ret %v_12
}

define public @"sha3(bytes)"(%input_13) {
entry:
  %callvalue = call @iele.callvalue()
  br %callvalue, throw
  %last.used = load 1
  %next.free = add %last.used, 1
  store %next.free, 1
  %next.free = add %next.free, 1
  store %input_13, %next.free
  %crnt.pos = 0
  %tmp = call @"ielert.memory.allocate"(2)
  %arg.value = %tmp
  %arg.type.size = 8
  %arg.len = load %next.free, %crnt.pos, %arg.type.size
  %crnt.pos = add %crnt.pos, %arg.type.size
  %loaded.value = load %next.free, %crnt.pos, %arg.len
  %loaded.value = twos %arg.len, %loaded.value
  %loaded.value = bswap %arg.len, %loaded.value
  %crnt.pos = add %crnt.pos, %arg.len
  store %arg.len, %tmp
  %value.address = add %tmp, 1
  store %loaded.value, %value.address
  %input_13 = %arg.value
  %_14 = call @"sha3(bytes).internal"(%input_13)
  ret %_14

throw:
  revert -1
}

define @"sha3(bytes).internal"(%input_15) {
entry:
  %tmp = call @"ielert.memory.allocate"(2)
  %padded_18 = %tmp
  %tmp1 = call @"ielert.memory.allocate"(25)
  %S_24 = %tmp1
  %array.length.val = load %input_15
  %tmp2 = add %array.length.val, 136
  %tmp4 = div %tmp2, 136
  %tmp6 = mul %tmp4, 136
  %newLen_17 = %tmp6
  %tmp7 = call @"ielert.memory.allocate"(2)
  store %newLen_17, %tmp7
  %padded_18 = %tmp7
  %i_19 = 0

for.loop:
  %array.length.val10 = load %input_15
  %tmp11 = cmp lt %i_19, %array.length.val10
  %tmp12 = iszero %tmp11
  br %tmp12, for.end
  %tmp14 = load %input_15
  %index.out.of.range = cmp lt %i_19, 0
  br %index.out.of.range, throw
  %index.out.of.range = cmp ge %i_19, %tmp14
  br %index.out.of.range, throw
  %tmp15 = add %input_15, 1
  %string.val = load %tmp15, %i_19, 1
  %string.val = byte 0, %string.val
  %tmp17 = load %padded_18
  %index.out.of.range18 = cmp lt %i_19, 0
  br %index.out.of.range18, throw
  %index.out.of.range18 = cmp ge %i_19, %tmp17
  br %index.out.of.range18, throw
  %tmp19 = add %padded_18, 1
  store %string.val, %tmp19, %i_19, 1

for.inc:
  %tmp20 = add %i_19, 1
  %tmp21 = %i_19
  %i_19 = %tmp20
  br for.loop

for.end:
  %array.length.val22 = load %input_15
  %tmp24 = load %padded_18
  %index.out.of.range25 = cmp lt %array.length.val22, 0
  br %index.out.of.range25, throw
  %index.out.of.range25 = cmp ge %array.length.val22, %tmp24
  br %index.out.of.range25, throw
  %tmp26 = add %padded_18, 1
  %string.val27 = load %tmp26, %array.length.val22, 1
  %string.val27 = byte 0, %string.val27
  %tmp29 = or %string.val27, 6
  %array.length.val30 = load %input_15
  %tmp32 = load %padded_18
  %index.out.of.range33 = cmp lt %array.length.val30, 0
  br %index.out.of.range33, throw
  %index.out.of.range33 = cmp ge %array.length.val30, %tmp32
  br %index.out.of.range33, throw
  %tmp34 = add %padded_18, 1
  store %tmp29, %tmp34, %array.length.val30, 1
  %tmp36 = cmp lt %newLen_17, 1
  br %tmp36, throw
  %tmp37 = sub %newLen_17, 1
  %tmp39 = load %padded_18
  %index.out.of.range40 = cmp lt %tmp37, 0
  br %index.out.of.range40, throw
  %index.out.of.range40 = cmp ge %tmp37, %tmp39
  br %index.out.of.range40, throw
  %tmp41 = add %padded_18, 1
  %string.val42 = load %tmp41, %tmp37, 1
  %string.val42 = byte 0, %string.val42
  %tmp44 = or %string.val42, 128
  %tmp46 = cmp lt %newLen_17, 1
  br %tmp46, throw
  %tmp47 = sub %newLen_17, 1
  %tmp49 = load %padded_18
  %index.out.of.range50 = cmp lt %tmp47, 0
  br %index.out.of.range50, throw
  %index.out.of.range50 = cmp ge %tmp47, %tmp49
  br %index.out.of.range50, throw
  %tmp51 = add %padded_18, 1
  store %tmp44, %tmp51, %tmp47, 1
  %array.length.val52 = load %padded_18
  %tmp54 = div %array.length.val52, 136
  %nblocks_20 = %tmp54
  %tmp55 = mul %nblocks_20, 17
  %tmp55 = add %tmp55, 1
  %tmp56 = call @"ielert.memory.allocate"(%tmp55)
  store %nblocks_20, %tmp56
  %P_21 = %tmp56
  %i_19 = 0

for.loop59:
  %tmp60 = cmp lt %i_19, %nblocks_20
  %tmp61 = iszero %tmp60
  br %tmp61, for.end114
  %j_22 = 0

for.loop63:
  %tmp65 = cmp lt %j_22, 17
  %tmp66 = iszero %tmp65
  br %tmp66, for.end110
  %k_23 = 0

for.loop68:
  %tmp70 = cmp lt %k_23, 8
  %tmp71 = iszero %tmp70
  br %tmp71, for.end106
  %tmp72 = mul %i_19, 17
  %tmp72 = add %tmp72, 1
  %tmp73 = load %P_21
  %index.out.of.range74 = cmp lt %i_19, 0
  br %index.out.of.range74, throw
  %index.out.of.range74 = cmp ge %i_19, %tmp73
  br %index.out.of.range74, throw
  %tmp75 = add %P_21, %tmp72
  %tmp76 = %j_22
  %index.out.of.range77 = cmp lt %j_22, 0
  br %index.out.of.range77, throw
  %index.out.of.range77 = cmp ge %j_22, 17
  br %index.out.of.range77, throw
  %tmp78 = add %tmp75, %tmp76
  %loaded.val = load %tmp78
  %tmp80 = mul %i_19, 136
  %tmp82 = mul %j_22, 8
  %tmp83 = add %tmp80, %tmp82
  %tmp84 = add %tmp83, %k_23
  %tmp86 = load %padded_18
  %index.out.of.range87 = cmp lt %tmp84, 0
  br %index.out.of.range87, throw
  %index.out.of.range87 = cmp ge %tmp84, %tmp86
  br %index.out.of.range87, throw
  %tmp88 = add %padded_18, 1
  %string.val89 = load %tmp88, %tmp84, 1
  %string.val89 = byte 0, %string.val89
  %type.converted91 = twos 8, %string.val89
  %tmp93 = mul %k_23, 8
  %out.of.range = cmp lt %tmp93, 0
  br %out.of.range, throw
  %tmp94 = shift %type.converted91, %tmp93
  %tmp94 = twos 8, %tmp94
  %tmp95 = or %loaded.val, %tmp94
  %tmp96 = mul %i_19, 17
  %tmp96 = add %tmp96, 1
  %tmp97 = load %P_21
  %index.out.of.range98 = cmp lt %i_19, 0
  br %index.out.of.range98, throw
  %index.out.of.range98 = cmp ge %i_19, %tmp97
  br %index.out.of.range98, throw
  %tmp99 = add %P_21, %tmp96
  %tmp100 = %j_22
  %index.out.of.range101 = cmp lt %j_22, 0
  br %index.out.of.range101, throw
  %index.out.of.range101 = cmp ge %j_22, 17
  br %index.out.of.range101, throw
  %tmp102 = add %tmp99, %tmp100
  store %tmp95, %tmp102

for.inc103:
  %tmp104 = add %k_23, 1
  %tmp105 = %k_23
  %k_23 = %tmp104
  br for.loop68

for.end106:

for.inc107:
  %tmp108 = add %j_22, 1
  %tmp109 = %j_22
  %j_22 = %tmp108
  br for.loop63

for.end110:

for.inc111:
  %tmp112 = add %i_19, 1
  %tmp113 = %i_19
  %i_19 = %tmp112
  br for.loop59

for.end114:
  %x_25 = 0

for.loop116:
  %tmp117 = cmp lt %x_25, %nblocks_20
  %tmp118 = iszero %tmp117
  br %tmp118, for.end582
  %tmp120 = mul 0, 5
  %index.out.of.range121 = cmp lt 0, 0
  br %index.out.of.range121, throw
  %index.out.of.range121 = cmp ge 0, 25
  br %index.out.of.range121, throw
  %tmp122 = add %S_24, %tmp120
  %tmp124 = 0
  %index.out.of.range125 = cmp lt 0, 0
  br %index.out.of.range125, throw
  %index.out.of.range125 = cmp ge 0, 5
  br %index.out.of.range125, throw
  %tmp126 = add %tmp122, %tmp124
  %loaded.val127 = load %tmp126
  %tmp128 = mul %x_25, 17
  %tmp128 = add %tmp128, 1
  %tmp129 = load %P_21
  %index.out.of.range130 = cmp lt %x_25, 0
  br %index.out.of.range130, throw
  %index.out.of.range130 = cmp ge %x_25, %tmp129
  br %index.out.of.range130, throw
  %tmp131 = add %P_21, %tmp128
  %tmp133 = 0
  %index.out.of.range134 = cmp lt 0, 0
  br %index.out.of.range134, throw
  %index.out.of.range134 = cmp ge 0, 17
  br %index.out.of.range134, throw
  %tmp135 = add %tmp131, %tmp133
  %loaded.val136 = load %tmp135
  %tmp137 = xor %loaded.val127, %loaded.val136
  %tmp139 = mul 0, 5
  %index.out.of.range140 = cmp lt 0, 0
  br %index.out.of.range140, throw
  %index.out.of.range140 = cmp ge 0, 25
  br %index.out.of.range140, throw
  %tmp141 = add %S_24, %tmp139
  %tmp143 = 0
  %index.out.of.range144 = cmp lt 0, 0
  br %index.out.of.range144, throw
  %index.out.of.range144 = cmp ge 0, 5
  br %index.out.of.range144, throw
  %tmp145 = add %tmp141, %tmp143
  store %tmp137, %tmp145
  %tmp147 = mul 1, 5
  %index.out.of.range148 = cmp lt 1, 0
  br %index.out.of.range148, throw
  %index.out.of.range148 = cmp ge 1, 25
  br %index.out.of.range148, throw
  %tmp149 = add %S_24, %tmp147
  %tmp151 = 0
  %index.out.of.range152 = cmp lt 0, 0
  br %index.out.of.range152, throw
  %index.out.of.range152 = cmp ge 0, 5
  br %index.out.of.range152, throw
  %tmp153 = add %tmp149, %tmp151
  %loaded.val154 = load %tmp153
  %tmp155 = mul %x_25, 17
  %tmp155 = add %tmp155, 1
  %tmp156 = load %P_21
  %index.out.of.range157 = cmp lt %x_25, 0
  br %index.out.of.range157, throw
  %index.out.of.range157 = cmp ge %x_25, %tmp156
  br %index.out.of.range157, throw
  %tmp158 = add %P_21, %tmp155
  %tmp160 = 1
  %index.out.of.range161 = cmp lt 1, 0
  br %index.out.of.range161, throw
  %index.out.of.range161 = cmp ge 1, 17
  br %index.out.of.range161, throw
  %tmp162 = add %tmp158, %tmp160
  %loaded.val163 = load %tmp162
  %tmp164 = xor %loaded.val154, %loaded.val163
  %tmp166 = mul 1, 5
  %index.out.of.range167 = cmp lt 1, 0
  br %index.out.of.range167, throw
  %index.out.of.range167 = cmp ge 1, 25
  br %index.out.of.range167, throw
  %tmp168 = add %S_24, %tmp166
  %tmp170 = 0
  %index.out.of.range171 = cmp lt 0, 0
  br %index.out.of.range171, throw
  %index.out.of.range171 = cmp ge 0, 5
  br %index.out.of.range171, throw
  %tmp172 = add %tmp168, %tmp170
  store %tmp164, %tmp172
  %tmp174 = mul 2, 5
  %index.out.of.range175 = cmp lt 2, 0
  br %index.out.of.range175, throw
  %index.out.of.range175 = cmp ge 2, 25
  br %index.out.of.range175, throw
  %tmp176 = add %S_24, %tmp174
  %tmp178 = 0
  %index.out.of.range179 = cmp lt 0, 0
  br %index.out.of.range179, throw
  %index.out.of.range179 = cmp ge 0, 5
  br %index.out.of.range179, throw
  %tmp180 = add %tmp176, %tmp178
  %loaded.val181 = load %tmp180
  %tmp182 = mul %x_25, 17
  %tmp182 = add %tmp182, 1
  %tmp183 = load %P_21
  %index.out.of.range184 = cmp lt %x_25, 0
  br %index.out.of.range184, throw
  %index.out.of.range184 = cmp ge %x_25, %tmp183
  br %index.out.of.range184, throw
  %tmp185 = add %P_21, %tmp182
  %tmp187 = 2
  %index.out.of.range188 = cmp lt 2, 0
  br %index.out.of.range188, throw
  %index.out.of.range188 = cmp ge 2, 17
  br %index.out.of.range188, throw
  %tmp189 = add %tmp185, %tmp187
  %loaded.val190 = load %tmp189
  %tmp191 = xor %loaded.val181, %loaded.val190
  %tmp193 = mul 2, 5
  %index.out.of.range194 = cmp lt 2, 0
  br %index.out.of.range194, throw
  %index.out.of.range194 = cmp ge 2, 25
  br %index.out.of.range194, throw
  %tmp195 = add %S_24, %tmp193
  %tmp197 = 0
  %index.out.of.range198 = cmp lt 0, 0
  br %index.out.of.range198, throw
  %index.out.of.range198 = cmp ge 0, 5
  br %index.out.of.range198, throw
  %tmp199 = add %tmp195, %tmp197
  store %tmp191, %tmp199
  %tmp201 = mul 3, 5
  %index.out.of.range202 = cmp lt 3, 0
  br %index.out.of.range202, throw
  %index.out.of.range202 = cmp ge 3, 25
  br %index.out.of.range202, throw
  %tmp203 = add %S_24, %tmp201
  %tmp205 = 0
  %index.out.of.range206 = cmp lt 0, 0
  br %index.out.of.range206, throw
  %index.out.of.range206 = cmp ge 0, 5
  br %index.out.of.range206, throw
  %tmp207 = add %tmp203, %tmp205
  %loaded.val208 = load %tmp207
  %tmp209 = mul %x_25, 17
  %tmp209 = add %tmp209, 1
  %tmp210 = load %P_21
  %index.out.of.range211 = cmp lt %x_25, 0
  br %index.out.of.range211, throw
  %index.out.of.range211 = cmp ge %x_25, %tmp210
  br %index.out.of.range211, throw
  %tmp212 = add %P_21, %tmp209
  %tmp214 = 3
  %index.out.of.range215 = cmp lt 3, 0
  br %index.out.of.range215, throw
  %index.out.of.range215 = cmp ge 3, 17
  br %index.out.of.range215, throw
  %tmp216 = add %tmp212, %tmp214
  %loaded.val217 = load %tmp216
  %tmp218 = xor %loaded.val208, %loaded.val217
  %tmp220 = mul 3, 5
  %index.out.of.range221 = cmp lt 3, 0
  br %index.out.of.range221, throw
  %index.out.of.range221 = cmp ge 3, 25
  br %index.out.of.range221, throw
  %tmp222 = add %S_24, %tmp220
  %tmp224 = 0
  %index.out.of.range225 = cmp lt 0, 0
  br %index.out.of.range225, throw
  %index.out.of.range225 = cmp ge 0, 5
  br %index.out.of.range225, throw
  %tmp226 = add %tmp222, %tmp224
  store %tmp218, %tmp226
  %tmp228 = mul 4, 5
  %index.out.of.range229 = cmp lt 4, 0
  br %index.out.of.range229, throw
  %index.out.of.range229 = cmp ge 4, 25
  br %index.out.of.range229, throw
  %tmp230 = add %S_24, %tmp228
  %tmp232 = 0
  %index.out.of.range233 = cmp lt 0, 0
  br %index.out.of.range233, throw
  %index.out.of.range233 = cmp ge 0, 5
  br %index.out.of.range233, throw
  %tmp234 = add %tmp230, %tmp232
  %loaded.val235 = load %tmp234
  %tmp236 = mul %x_25, 17
  %tmp236 = add %tmp236, 1
  %tmp237 = load %P_21
  %index.out.of.range238 = cmp lt %x_25, 0
  br %index.out.of.range238, throw
  %index.out.of.range238 = cmp ge %x_25, %tmp237
  br %index.out.of.range238, throw
  %tmp239 = add %P_21, %tmp236
  %tmp241 = 4
  %index.out.of.range242 = cmp lt 4, 0
  br %index.out.of.range242, throw
  %index.out.of.range242 = cmp ge 4, 17
  br %index.out.of.range242, throw
  %tmp243 = add %tmp239, %tmp241
  %loaded.val244 = load %tmp243
  %tmp245 = xor %loaded.val235, %loaded.val244
  %tmp247 = mul 4, 5
  %index.out.of.range248 = cmp lt 4, 0
  br %index.out.of.range248, throw
  %index.out.of.range248 = cmp ge 4, 25
  br %index.out.of.range248, throw
  %tmp249 = add %S_24, %tmp247
  %tmp251 = 0
  %index.out.of.range252 = cmp lt 0, 0
  br %index.out.of.range252, throw
  %index.out.of.range252 = cmp ge 0, 5
  br %index.out.of.range252, throw
  %tmp253 = add %tmp249, %tmp251
  store %tmp245, %tmp253
  %tmp255 = mul 0, 5
  %index.out.of.range256 = cmp lt 0, 0
  br %index.out.of.range256, throw
  %index.out.of.range256 = cmp ge 0, 25
  br %index.out.of.range256, throw
  %tmp257 = add %S_24, %tmp255
  %tmp259 = 1
  %index.out.of.range260 = cmp lt 1, 0
  br %index.out.of.range260, throw
  %index.out.of.range260 = cmp ge 1, 5
  br %index.out.of.range260, throw
  %tmp261 = add %tmp257, %tmp259
  %loaded.val262 = load %tmp261
  %tmp263 = mul %x_25, 17
  %tmp263 = add %tmp263, 1
  %tmp264 = load %P_21
  %index.out.of.range265 = cmp lt %x_25, 0
  br %index.out.of.range265, throw
  %index.out.of.range265 = cmp ge %x_25, %tmp264
  br %index.out.of.range265, throw
  %tmp266 = add %P_21, %tmp263
  %tmp268 = 5
  %index.out.of.range269 = cmp lt 5, 0
  br %index.out.of.range269, throw
  %index.out.of.range269 = cmp ge 5, 17
  br %index.out.of.range269, throw
  %tmp270 = add %tmp266, %tmp268
  %loaded.val271 = load %tmp270
  %tmp272 = xor %loaded.val262, %loaded.val271
  %tmp274 = mul 0, 5
  %index.out.of.range275 = cmp lt 0, 0
  br %index.out.of.range275, throw
  %index.out.of.range275 = cmp ge 0, 25
  br %index.out.of.range275, throw
  %tmp276 = add %S_24, %tmp274
  %tmp278 = 1
  %index.out.of.range279 = cmp lt 1, 0
  br %index.out.of.range279, throw
  %index.out.of.range279 = cmp ge 1, 5
  br %index.out.of.range279, throw
  %tmp280 = add %tmp276, %tmp278
  store %tmp272, %tmp280
  %tmp282 = mul 1, 5
  %index.out.of.range283 = cmp lt 1, 0
  br %index.out.of.range283, throw
  %index.out.of.range283 = cmp ge 1, 25
  br %index.out.of.range283, throw
  %tmp284 = add %S_24, %tmp282
  %tmp286 = 1
  %index.out.of.range287 = cmp lt 1, 0
  br %index.out.of.range287, throw
  %index.out.of.range287 = cmp ge 1, 5
  br %index.out.of.range287, throw
  %tmp288 = add %tmp284, %tmp286
  %loaded.val289 = load %tmp288
  %tmp290 = mul %x_25, 17
  %tmp290 = add %tmp290, 1
  %tmp291 = load %P_21
  %index.out.of.range292 = cmp lt %x_25, 0
  br %index.out.of.range292, throw
  %index.out.of.range292 = cmp ge %x_25, %tmp291
  br %index.out.of.range292, throw
  %tmp293 = add %P_21, %tmp290
  %tmp295 = 6
  %index.out.of.range296 = cmp lt 6, 0
  br %index.out.of.range296, throw
  %index.out.of.range296 = cmp ge 6, 17
  br %index.out.of.range296, throw
  %tmp297 = add %tmp293, %tmp295
  %loaded.val298 = load %tmp297
  %tmp299 = xor %loaded.val289, %loaded.val298
  %tmp301 = mul 1, 5
  %index.out.of.range302 = cmp lt 1, 0
  br %index.out.of.range302, throw
  %index.out.of.range302 = cmp ge 1, 25
  br %index.out.of.range302, throw
  %tmp303 = add %S_24, %tmp301
  %tmp305 = 1
  %index.out.of.range306 = cmp lt 1, 0
  br %index.out.of.range306, throw
  %index.out.of.range306 = cmp ge 1, 5
  br %index.out.of.range306, throw
  %tmp307 = add %tmp303, %tmp305
  store %tmp299, %tmp307
  %tmp309 = mul 2, 5
  %index.out.of.range310 = cmp lt 2, 0
  br %index.out.of.range310, throw
  %index.out.of.range310 = cmp ge 2, 25
  br %index.out.of.range310, throw
  %tmp311 = add %S_24, %tmp309
  %tmp313 = 1
  %index.out.of.range314 = cmp lt 1, 0
  br %index.out.of.range314, throw
  %index.out.of.range314 = cmp ge 1, 5
  br %index.out.of.range314, throw
  %tmp315 = add %tmp311, %tmp313
  %loaded.val316 = load %tmp315
  %tmp317 = mul %x_25, 17
  %tmp317 = add %tmp317, 1
  %tmp318 = load %P_21
  %index.out.of.range319 = cmp lt %x_25, 0
  br %index.out.of.range319, throw
  %index.out.of.range319 = cmp ge %x_25, %tmp318
  br %index.out.of.range319, throw
  %tmp320 = add %P_21, %tmp317
  %tmp322 = 7
  %index.out.of.range323 = cmp lt 7, 0
  br %index.out.of.range323, throw
  %index.out.of.range323 = cmp ge 7, 17
  br %index.out.of.range323, throw
  %tmp324 = add %tmp320, %tmp322
  %loaded.val325 = load %tmp324
  %tmp326 = xor %loaded.val316, %loaded.val325
  %tmp328 = mul 2, 5
  %index.out.of.range329 = cmp lt 2, 0
  br %index.out.of.range329, throw
  %index.out.of.range329 = cmp ge 2, 25
  br %index.out.of.range329, throw
  %tmp330 = add %S_24, %tmp328
  %tmp332 = 1
  %index.out.of.range333 = cmp lt 1, 0
  br %index.out.of.range333, throw
  %index.out.of.range333 = cmp ge 1, 5
  br %index.out.of.range333, throw
  %tmp334 = add %tmp330, %tmp332
  store %tmp326, %tmp334
  %tmp336 = mul 3, 5
  %index.out.of.range337 = cmp lt 3, 0
  br %index.out.of.range337, throw
  %index.out.of.range337 = cmp ge 3, 25
  br %index.out.of.range337, throw
  %tmp338 = add %S_24, %tmp336
  %tmp340 = 1
  %index.out.of.range341 = cmp lt 1, 0
  br %index.out.of.range341, throw
  %index.out.of.range341 = cmp ge 1, 5
  br %index.out.of.range341, throw
  %tmp342 = add %tmp338, %tmp340
  %loaded.val343 = load %tmp342
  %tmp344 = mul %x_25, 17
  %tmp344 = add %tmp344, 1
  %tmp345 = load %P_21
  %index.out.of.range346 = cmp lt %x_25, 0
  br %index.out.of.range346, throw
  %index.out.of.range346 = cmp ge %x_25, %tmp345
  br %index.out.of.range346, throw
  %tmp347 = add %P_21, %tmp344
  %tmp349 = 8
  %index.out.of.range350 = cmp lt 8, 0
  br %index.out.of.range350, throw
  %index.out.of.range350 = cmp ge 8, 17
  br %index.out.of.range350, throw
  %tmp351 = add %tmp347, %tmp349
  %loaded.val352 = load %tmp351
  %tmp353 = xor %loaded.val343, %loaded.val352
  %tmp355 = mul 3, 5
  %index.out.of.range356 = cmp lt 3, 0
  br %index.out.of.range356, throw
  %index.out.of.range356 = cmp ge 3, 25
  br %index.out.of.range356, throw
  %tmp357 = add %S_24, %tmp355
  %tmp359 = 1
  %index.out.of.range360 = cmp lt 1, 0
  br %index.out.of.range360, throw
  %index.out.of.range360 = cmp ge 1, 5
  br %index.out.of.range360, throw
  %tmp361 = add %tmp357, %tmp359
  store %tmp353, %tmp361
  %tmp363 = mul 4, 5
  %index.out.of.range364 = cmp lt 4, 0
  br %index.out.of.range364, throw
  %index.out.of.range364 = cmp ge 4, 25
  br %index.out.of.range364, throw
  %tmp365 = add %S_24, %tmp363
  %tmp367 = 1
  %index.out.of.range368 = cmp lt 1, 0
  br %index.out.of.range368, throw
  %index.out.of.range368 = cmp ge 1, 5
  br %index.out.of.range368, throw
  %tmp369 = add %tmp365, %tmp367
  %loaded.val370 = load %tmp369
  %tmp371 = mul %x_25, 17
  %tmp371 = add %tmp371, 1
  %tmp372 = load %P_21
  %index.out.of.range373 = cmp lt %x_25, 0
  br %index.out.of.range373, throw
  %index.out.of.range373 = cmp ge %x_25, %tmp372
  br %index.out.of.range373, throw
  %tmp374 = add %P_21, %tmp371
  %tmp376 = 9
  %index.out.of.range377 = cmp lt 9, 0
  br %index.out.of.range377, throw
  %index.out.of.range377 = cmp ge 9, 17
  br %index.out.of.range377, throw
  %tmp378 = add %tmp374, %tmp376
  %loaded.val379 = load %tmp378
  %tmp380 = xor %loaded.val370, %loaded.val379
  %tmp382 = mul 4, 5
  %index.out.of.range383 = cmp lt 4, 0
  br %index.out.of.range383, throw
  %index.out.of.range383 = cmp ge 4, 25
  br %index.out.of.range383, throw
  %tmp384 = add %S_24, %tmp382
  %tmp386 = 1
  %index.out.of.range387 = cmp lt 1, 0
  br %index.out.of.range387, throw
  %index.out.of.range387 = cmp ge 1, 5
  br %index.out.of.range387, throw
  %tmp388 = add %tmp384, %tmp386
  store %tmp380, %tmp388
  %tmp390 = mul 0, 5
  %index.out.of.range391 = cmp lt 0, 0
  br %index.out.of.range391, throw
  %index.out.of.range391 = cmp ge 0, 25
  br %index.out.of.range391, throw
  %tmp392 = add %S_24, %tmp390
  %tmp394 = 2
  %index.out.of.range395 = cmp lt 2, 0
  br %index.out.of.range395, throw
  %index.out.of.range395 = cmp ge 2, 5
  br %index.out.of.range395, throw
  %tmp396 = add %tmp392, %tmp394
  %loaded.val397 = load %tmp396
  %tmp398 = mul %x_25, 17
  %tmp398 = add %tmp398, 1
  %tmp399 = load %P_21
  %index.out.of.range400 = cmp lt %x_25, 0
  br %index.out.of.range400, throw
  %index.out.of.range400 = cmp ge %x_25, %tmp399
  br %index.out.of.range400, throw
  %tmp401 = add %P_21, %tmp398
  %tmp403 = 10
  %index.out.of.range404 = cmp lt 10, 0
  br %index.out.of.range404, throw
  %index.out.of.range404 = cmp ge 10, 17
  br %index.out.of.range404, throw
  %tmp405 = add %tmp401, %tmp403
  %loaded.val406 = load %tmp405
  %tmp407 = xor %loaded.val397, %loaded.val406
  %tmp409 = mul 0, 5
  %index.out.of.range410 = cmp lt 0, 0
  br %index.out.of.range410, throw
  %index.out.of.range410 = cmp ge 0, 25
  br %index.out.of.range410, throw
  %tmp411 = add %S_24, %tmp409
  %tmp413 = 2
  %index.out.of.range414 = cmp lt 2, 0
  br %index.out.of.range414, throw
  %index.out.of.range414 = cmp ge 2, 5
  br %index.out.of.range414, throw
  %tmp415 = add %tmp411, %tmp413
  store %tmp407, %tmp415
  %tmp417 = mul 1, 5
  %index.out.of.range418 = cmp lt 1, 0
  br %index.out.of.range418, throw
  %index.out.of.range418 = cmp ge 1, 25
  br %index.out.of.range418, throw
  %tmp419 = add %S_24, %tmp417
  %tmp421 = 2
  %index.out.of.range422 = cmp lt 2, 0
  br %index.out.of.range422, throw
  %index.out.of.range422 = cmp ge 2, 5
  br %index.out.of.range422, throw
  %tmp423 = add %tmp419, %tmp421
  %loaded.val424 = load %tmp423
  %tmp425 = mul %x_25, 17
  %tmp425 = add %tmp425, 1
  %tmp426 = load %P_21
  %index.out.of.range427 = cmp lt %x_25, 0
  br %index.out.of.range427, throw
  %index.out.of.range427 = cmp ge %x_25, %tmp426
  br %index.out.of.range427, throw
  %tmp428 = add %P_21, %tmp425
  %tmp430 = 11
  %index.out.of.range431 = cmp lt 11, 0
  br %index.out.of.range431, throw
  %index.out.of.range431 = cmp ge 11, 17
  br %index.out.of.range431, throw
  %tmp432 = add %tmp428, %tmp430
  %loaded.val433 = load %tmp432
  %tmp434 = xor %loaded.val424, %loaded.val433
  %tmp436 = mul 1, 5
  %index.out.of.range437 = cmp lt 1, 0
  br %index.out.of.range437, throw
  %index.out.of.range437 = cmp ge 1, 25
  br %index.out.of.range437, throw
  %tmp438 = add %S_24, %tmp436
  %tmp440 = 2
  %index.out.of.range441 = cmp lt 2, 0
  br %index.out.of.range441, throw
  %index.out.of.range441 = cmp ge 2, 5
  br %index.out.of.range441, throw
  %tmp442 = add %tmp438, %tmp440
  store %tmp434, %tmp442
  %tmp444 = mul 2, 5
  %index.out.of.range445 = cmp lt 2, 0
  br %index.out.of.range445, throw
  %index.out.of.range445 = cmp ge 2, 25
  br %index.out.of.range445, throw
  %tmp446 = add %S_24, %tmp444
  %tmp448 = 2
  %index.out.of.range449 = cmp lt 2, 0
  br %index.out.of.range449, throw
  %index.out.of.range449 = cmp ge 2, 5
  br %index.out.of.range449, throw
  %tmp450 = add %tmp446, %tmp448
  %loaded.val451 = load %tmp450
  %tmp452 = mul %x_25, 17
  %tmp452 = add %tmp452, 1
  %tmp453 = load %P_21
  %index.out.of.range454 = cmp lt %x_25, 0
  br %index.out.of.range454, throw
  %index.out.of.range454 = cmp ge %x_25, %tmp453
  br %index.out.of.range454, throw
  %tmp455 = add %P_21, %tmp452
  %tmp457 = 12
  %index.out.of.range458 = cmp lt 12, 0
  br %index.out.of.range458, throw
  %index.out.of.range458 = cmp ge 12, 17
  br %index.out.of.range458, throw
  %tmp459 = add %tmp455, %tmp457
  %loaded.val460 = load %tmp459
  %tmp461 = xor %loaded.val451, %loaded.val460
  %tmp463 = mul 2, 5
  %index.out.of.range464 = cmp lt 2, 0
  br %index.out.of.range464, throw
  %index.out.of.range464 = cmp ge 2, 25
  br %index.out.of.range464, throw
  %tmp465 = add %S_24, %tmp463
  %tmp467 = 2
  %index.out.of.range468 = cmp lt 2, 0
  br %index.out.of.range468, throw
  %index.out.of.range468 = cmp ge 2, 5
  br %index.out.of.range468, throw
  %tmp469 = add %tmp465, %tmp467
  store %tmp461, %tmp469
  %tmp471 = mul 3, 5
  %index.out.of.range472 = cmp lt 3, 0
  br %index.out.of.range472, throw
  %index.out.of.range472 = cmp ge 3, 25
  br %index.out.of.range472, throw
  %tmp473 = add %S_24, %tmp471
  %tmp475 = 2
  %index.out.of.range476 = cmp lt 2, 0
  br %index.out.of.range476, throw
  %index.out.of.range476 = cmp ge 2, 5
  br %index.out.of.range476, throw
  %tmp477 = add %tmp473, %tmp475
  %loaded.val478 = load %tmp477
  %tmp479 = mul %x_25, 17
  %tmp479 = add %tmp479, 1
  %tmp480 = load %P_21
  %index.out.of.range481 = cmp lt %x_25, 0
  br %index.out.of.range481, throw
  %index.out.of.range481 = cmp ge %x_25, %tmp480
  br %index.out.of.range481, throw
  %tmp482 = add %P_21, %tmp479
  %tmp484 = 13
  %index.out.of.range485 = cmp lt 13, 0
  br %index.out.of.range485, throw
  %index.out.of.range485 = cmp ge 13, 17
  br %index.out.of.range485, throw
  %tmp486 = add %tmp482, %tmp484
  %loaded.val487 = load %tmp486
  %tmp488 = xor %loaded.val478, %loaded.val487
  %tmp490 = mul 3, 5
  %index.out.of.range491 = cmp lt 3, 0
  br %index.out.of.range491, throw
  %index.out.of.range491 = cmp ge 3, 25
  br %index.out.of.range491, throw
  %tmp492 = add %S_24, %tmp490
  %tmp494 = 2
  %index.out.of.range495 = cmp lt 2, 0
  br %index.out.of.range495, throw
  %index.out.of.range495 = cmp ge 2, 5
  br %index.out.of.range495, throw
  %tmp496 = add %tmp492, %tmp494
  store %tmp488, %tmp496
  %tmp498 = mul 4, 5
  %index.out.of.range499 = cmp lt 4, 0
  br %index.out.of.range499, throw
  %index.out.of.range499 = cmp ge 4, 25
  br %index.out.of.range499, throw
  %tmp500 = add %S_24, %tmp498
  %tmp502 = 2
  %index.out.of.range503 = cmp lt 2, 0
  br %index.out.of.range503, throw
  %index.out.of.range503 = cmp ge 2, 5
  br %index.out.of.range503, throw
  %tmp504 = add %tmp500, %tmp502
  %loaded.val505 = load %tmp504
  %tmp506 = mul %x_25, 17
  %tmp506 = add %tmp506, 1
  %tmp507 = load %P_21
  %index.out.of.range508 = cmp lt %x_25, 0
  br %index.out.of.range508, throw
  %index.out.of.range508 = cmp ge %x_25, %tmp507
  br %index.out.of.range508, throw
  %tmp509 = add %P_21, %tmp506
  %tmp511 = 14
  %index.out.of.range512 = cmp lt 14, 0
  br %index.out.of.range512, throw
  %index.out.of.range512 = cmp ge 14, 17
  br %index.out.of.range512, throw
  %tmp513 = add %tmp509, %tmp511
  %loaded.val514 = load %tmp513
  %tmp515 = xor %loaded.val505, %loaded.val514
  %tmp517 = mul 4, 5
  %index.out.of.range518 = cmp lt 4, 0
  br %index.out.of.range518, throw
  %index.out.of.range518 = cmp ge 4, 25
  br %index.out.of.range518, throw
  %tmp519 = add %S_24, %tmp517
  %tmp521 = 2
  %index.out.of.range522 = cmp lt 2, 0
  br %index.out.of.range522, throw
  %index.out.of.range522 = cmp ge 2, 5
  br %index.out.of.range522, throw
  %tmp523 = add %tmp519, %tmp521
  store %tmp515, %tmp523
  %tmp525 = mul 0, 5
  %index.out.of.range526 = cmp lt 0, 0
  br %index.out.of.range526, throw
  %index.out.of.range526 = cmp ge 0, 25
  br %index.out.of.range526, throw
  %tmp527 = add %S_24, %tmp525
  %tmp529 = 3
  %index.out.of.range530 = cmp lt 3, 0
  br %index.out.of.range530, throw
  %index.out.of.range530 = cmp ge 3, 5
  br %index.out.of.range530, throw
  %tmp531 = add %tmp527, %tmp529
  %loaded.val532 = load %tmp531
  %tmp533 = mul %x_25, 17
  %tmp533 = add %tmp533, 1
  %tmp534 = load %P_21
  %index.out.of.range535 = cmp lt %x_25, 0
  br %index.out.of.range535, throw
  %index.out.of.range535 = cmp ge %x_25, %tmp534
  br %index.out.of.range535, throw
  %tmp536 = add %P_21, %tmp533
  %tmp538 = 15
  %index.out.of.range539 = cmp lt 15, 0
  br %index.out.of.range539, throw
  %index.out.of.range539 = cmp ge 15, 17
  br %index.out.of.range539, throw
  %tmp540 = add %tmp536, %tmp538
  %loaded.val541 = load %tmp540
  %tmp542 = xor %loaded.val532, %loaded.val541
  %tmp544 = mul 0, 5
  %index.out.of.range545 = cmp lt 0, 0
  br %index.out.of.range545, throw
  %index.out.of.range545 = cmp ge 0, 25
  br %index.out.of.range545, throw
  %tmp546 = add %S_24, %tmp544
  %tmp548 = 3
  %index.out.of.range549 = cmp lt 3, 0
  br %index.out.of.range549, throw
  %index.out.of.range549 = cmp ge 3, 5
  br %index.out.of.range549, throw
  %tmp550 = add %tmp546, %tmp548
  store %tmp542, %tmp550
  %tmp552 = mul 1, 5
  %index.out.of.range553 = cmp lt 1, 0
  br %index.out.of.range553, throw
  %index.out.of.range553 = cmp ge 1, 25
  br %index.out.of.range553, throw
  %tmp554 = add %S_24, %tmp552
  %tmp556 = 3
  %index.out.of.range557 = cmp lt 3, 0
  br %index.out.of.range557, throw
  %index.out.of.range557 = cmp ge 3, 5
  br %index.out.of.range557, throw
  %tmp558 = add %tmp554, %tmp556
  %loaded.val559 = load %tmp558
  %tmp560 = mul %x_25, 17
  %tmp560 = add %tmp560, 1
  %tmp561 = load %P_21
  %index.out.of.range562 = cmp lt %x_25, 0
  br %index.out.of.range562, throw
  %index.out.of.range562 = cmp ge %x_25, %tmp561
  br %index.out.of.range562, throw
  %tmp563 = add %P_21, %tmp560
  %tmp565 = 16
  %index.out.of.range566 = cmp lt 16, 0
  br %index.out.of.range566, throw
  %index.out.of.range566 = cmp ge 16, 17
  br %index.out.of.range566, throw
  %tmp567 = add %tmp563, %tmp565
  %loaded.val568 = load %tmp567
  %tmp569 = xor %loaded.val559, %loaded.val568
  %tmp571 = mul 1, 5
  %index.out.of.range572 = cmp lt 1, 0
  br %index.out.of.range572, throw
  %index.out.of.range572 = cmp ge 1, 25
  br %index.out.of.range572, throw
  %tmp573 = add %S_24, %tmp571
  %tmp575 = 3
  %index.out.of.range576 = cmp lt 3, 0
  br %index.out.of.range576, throw
  %index.out.of.range576 = cmp ge 3, 5
  br %index.out.of.range576, throw
  %tmp577 = add %tmp573, %tmp575
  store %tmp569, %tmp577
  %tmp578 = call @"keccak_f.t_function_internal_pure$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$returns$_t_array$_t_array$_t_uint64_$5_memory_$5_memory_ptr_$"(%S_24)
  %S_24 = %tmp578

for.inc579:
  %tmp580 = add %x_25, 1
  %tmp581 = %x_25
  %x_25 = %tmp580
  br for.loop116

for.end582:
  %tmp583 = shift %Z_26, 64
  %tmp583 = twos 32, %tmp583
  %tmp585 = mul 0, 5
  %index.out.of.range586 = cmp lt 0, 0
  br %index.out.of.range586, throw
  %index.out.of.range586 = cmp ge 0, 25
  br %index.out.of.range586, throw
  %tmp587 = add %S_24, %tmp585
  %tmp589 = 0
  %index.out.of.range590 = cmp lt 0, 0
  br %index.out.of.range590, throw
  %index.out.of.range590 = cmp ge 0, 5
  br %index.out.of.range590, throw
  %tmp591 = add %tmp587, %tmp589
  %loaded.val592 = load %tmp591
  %tmp593 = call @"bswap.t_function_internal_pure$_t_uint64_$returns$_t_uint64_$"(%loaded.val592)
  %type.converted594 = twos 32, %tmp593
  %tmp595 = or %tmp583, %type.converted594
  %Z_26 = %tmp595
  %tmp596 = shift %Z_26, 64
  %tmp596 = twos 32, %tmp596
  %tmp598 = mul 1, 5
  %index.out.of.range599 = cmp lt 1, 0
  br %index.out.of.range599, throw
  %index.out.of.range599 = cmp ge 1, 25
  br %index.out.of.range599, throw
  %tmp600 = add %S_24, %tmp598
  %tmp602 = 0
  %index.out.of.range603 = cmp lt 0, 0
  br %index.out.of.range603, throw
  %index.out.of.range603 = cmp ge 0, 5
  br %index.out.of.range603, throw
  %tmp604 = add %tmp600, %tmp602
  %loaded.val605 = load %tmp604
  %tmp606 = call @"bswap.t_function_internal_pure$_t_uint64_$returns$_t_uint64_$"(%loaded.val605)
  %type.converted607 = twos 32, %tmp606
  %tmp608 = or %tmp596, %type.converted607
  %Z_26 = %tmp608
  %tmp609 = shift %Z_26, 64
  %tmp609 = twos 32, %tmp609
  %tmp611 = mul 2, 5
  %index.out.of.range612 = cmp lt 2, 0
  br %index.out.of.range612, throw
  %index.out.of.range612 = cmp ge 2, 25
  br %index.out.of.range612, throw
  %tmp613 = add %S_24, %tmp611
  %tmp615 = 0
  %index.out.of.range616 = cmp lt 0, 0
  br %index.out.of.range616, throw
  %index.out.of.range616 = cmp ge 0, 5
  br %index.out.of.range616, throw
  %tmp617 = add %tmp613, %tmp615
  %loaded.val618 = load %tmp617
  %tmp619 = call @"bswap.t_function_internal_pure$_t_uint64_$returns$_t_uint64_$"(%loaded.val618)
  %type.converted620 = twos 32, %tmp619
  %tmp621 = or %tmp609, %type.converted620
  %Z_26 = %tmp621
  %tmp622 = shift %Z_26, 64
  %tmp622 = twos 32, %tmp622
  %tmp624 = mul 3, 5
  %index.out.of.range625 = cmp lt 3, 0
  br %index.out.of.range625, throw
  %index.out.of.range625 = cmp ge 3, 25
  br %index.out.of.range625, throw
  %tmp626 = add %S_24, %tmp624
  %tmp628 = 0
  %index.out.of.range629 = cmp lt 0, 0
  br %index.out.of.range629, throw
  %index.out.of.range629 = cmp ge 0, 5
  br %index.out.of.range629, throw
  %tmp630 = add %tmp626, %tmp628
  %loaded.val631 = load %tmp630
  %tmp632 = call @"bswap.t_function_internal_pure$_t_uint64_$returns$_t_uint64_$"(%loaded.val631)
  %type.converted633 = twos 32, %tmp632
  %tmp634 = or %tmp622, %type.converted633
  %Z_26 = %tmp634
  %_16 = %Z_26
  br return

return:
  ret %_16

throw:
  revert -1
}

define @init() {
entry:
  ret void
}

define @ielert.memory.allocate(%size) {
entry:
  // get next free address
  // note that the address 1 of memory is reserved for a pointer to
  // one less than last allocated memory location
  %last.allocd = load 1
  %next.free.ptr = add %last.allocd, 2

  // compute new last allocd address
  %last.allocd = add %last.allocd, %size

  // allocate
  store %last.allocd, 1

  // return the address of the first slot of newly allocated memory
  ret %next.free.ptr
}

define @ielert.memory.fill(%to, %size, %data) {
fill.loop:
  %done = iszero %size
  br %done, exit
  store %data, %to
  %to = add %to, 1
  %size = sub %size, 1
  br fill.loop

exit:
  ret void
}

define @ielert.storage.fill(%to, %size, %data) {
fill.loop:
  %done = iszero %size
  br %done, exit
  sstore %data, %to
  %to = add %to, 1
  %size = sub %size, 1
  br fill.loop

exit:
  ret void
}

define @ielert.memory.copy.to.memory(%from, %to, %size) {
copy.loop:
  %done = iszero %size
  br %done, exit
  %data = load %from
  store %data, %to
  %from = add %from, 1
  %to = add %to, 1
  %size = sub %size, 1
  br copy.loop

exit:
  ret void
}

define @ielert.memory.copy.to.storage(%from, %to, %size) {
copy.loop:
  %done = iszero %size
  br %done, exit
  %data = load %from
  sstore %data, %to
  %from = add %from, 1
  %to = add %to, 1
  %size = sub %size, 1
  br copy.loop

exit:
  ret void
}

define @ielert.storage.copy.to.memory(%from, %to, %size) {
copy.loop:
  %done = iszero %size
  br %done, exit
  %data = sload %from
  store %data, %to
  %from = add %from, 1
  %to = add %to, 1
  %size = sub %size, 1
  br copy.loop

exit:
  ret void
}

define @ielert.storage.copy.to.storage(%from, %to, %size) {
copy.loop:
  %done = iszero %size
  br %done, exit
  %data = sload %from
  sstore %data, %to
  %from = add %from, 1
  %to = add %to, 1
  %size = sub %size, 1
  br copy.loop

exit:
  ret void
}


}
