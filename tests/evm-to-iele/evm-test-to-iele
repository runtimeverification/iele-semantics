#!/usr/bin/env python

import subprocess
import sys
import json

import os 
dir_path = os.path.dirname(__file__)

def decodeShort(i):
  return [i // 256, i % 256]

def convertCodeToIele(evm_code):
  if len(evm_code) == 0:
    return ""
  assert evm_code[0:2] == "0x"
  p = subprocess.Popen([dir_path + "/evm-to-iele"], stdin=subprocess.PIPE, stdout=subprocess.PIPE)
  stdout, stderr = p.communicate(evm_code[2:])
  assert p.poll() == 0
  return "0x" + stdout[:-1]

def convertCallData(calldata, isCreateTx):
  if isCreateTx:
    return []
  if len(calldata) == 0:
    return [u"", u""]
  assert calldata[0:2] == "0x"
  calldatasize = (len(calldata) - 2)/2
  return [unicode(hex(calldatasize)), calldata]
          

def convertToIele(json):
    if isinstance(json, dict):
        res = {}
        isCreateTx = False
        if "to" in json.keys():
          if json["to"] == "":
            isCreateTx = True
            json["function"] = u""
          else:
            json["function"] = u"deposit"
          json["arguments"] = convertCallData(json["data"], isCreateTx)
        if "network" in json.keys() or "callcreates" in json.keys():
          json["checkGas"] = False
        for key, value in json.iteritems():
            if key == "code" or (key == "data" and isCreateTx):
                res[key] = convertCodeToIele(value)
            elif key == "network" and json[key] == "Byzantium":
                res[key] = "Albe"
            else:
                res[key] = convertToIele(value)
        return res
    elif isinstance(json, list):
        res = []
        for value in json:
            res.append(convertToIele(value))
        return res
    elif isinstance(json, unicode):
        return json
    elif isinstance(json, long) or isinstance(json, int):
        return json

source_file = sys.argv[1]
target_file = sys.argv[2]

with open(source_file, "r") as source:
    original_test = json.load(source)
    new_test = convertToIele(original_test)
    with open(target_file, "w+") as target:
        json.dump(new_test, target, indent=4)
