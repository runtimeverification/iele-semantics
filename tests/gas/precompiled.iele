contract Test {
  define @init() {}

  define public @test() {
    %i = 10000
    %addr = 1
    %gas = call @iele.gas()
    %value = 0
    %hash = 0x18c547e4f7b0f325ad1e56f57e26c745b09a3e503d86e00e5255ff7f715d3d1c
    %v = 28
    %r = 0x73b1693892219d736caba55bdb67216e485557ea6b6af75f37096c9aa6a5a75f
    %s = 0xeeb940b1d03b21e36b0e47e79769f095fe2ab855bd91e3a38756b7d75a9c4549
    %eight = 8
    %fourthousand = 4000
    %eightthousand = 8000
    %zero = 0
    %val3 = $val3
    %one = 1
    %two = 2
    %three = 3
    %accum1 = %one
    %accum2 = %two

    %sone = bswap 32, 1
    %stwo = bswap 32, 2
    store %sone, 0, 0, 32
    store %stwo, 0, 32, 32
    store %sone, 0, 64, 32
    %p = 21888242871839275222246405745257275088696311157297823662689037894645226208583
    %y2 = sub %p, 2
    %y2 = bswap 32, %y2
    store %y2, 0, 96, 32
    %g1 = load 0, 0, 128
    %x1 = bswap 32, 11559732032986387107991004021392285783925812861821192530917403151452391805634
    %x2 = bswap 32, 10857046999023057135944570762232829481370756359578518086990519993285655852781
    %y1 = bswap 32, 4082367875863433681332203403145435568316851327593401208105741076214120093531
    %y2 = bswap 32, 8495653923123431417604973247489272438418190587263600148770280649306958101930
    store %x1, 1, 0, 32
    store %x2, 1, 32, 32
    store %y1, 1, 64, 32
    store %y2, 1, 96, 32
    store %x1, 1, 128, 32
    store %x2, 1, 160, 32
    store %y1, 1, 192, 32
    store %y2, 1, 224, 32
    %g2 = load 1, 0, 256
    %first = bswap 32, 0x105456a333e6d636854f987ea7bb713dfd0ae8371a72aea313ae0c32c0bf1016
    %second = bswap 32, 0x0cf031d41b41557f3e7e3ba0c51bebe5da8e6ecd855ec50fc87efcdeac168bcc
    store %first, 0, 0, 32
    store %second, 0, 32, 32
    store %sone, 0, 64, 32
    store %stwo, 0, 96, 32
    store %sone, 0, 128, 32
    store %stwo, 0, 160, 32
    %g1_2 = load 0, 0, 192
    %first = bswap 32, 0x0476be093a6d2b4bbf907172049874af11e1b6267606e00804d3ff0037ec57fd
    %second = bswap 32, 0x3010c68cb50161b7d1d96bb71edfec9880171954e56871abf3d93cc94d745fa1
    %third = bswap 32, 0x14c059d74e5b6c4ec14ae5864ebe23a71781d86c29fb8fb6cce94f70d3de7a21
    %fourth = bswap 32, 0x01b33461f39d9e887dbb100f170a2345dde3c07e256d1dfa2b657ba5cd030427
    store %first, 1, 0, 32
    store %second, 1, 32, 32
    store %third, 1, 64, 32
    store %fourth, 1, 96, 32
    %first = bswap 32, 0x1a2c3013d2ea92e13c800cde68ef56a294b883f6ac35d25f587c09b1b3c635f7
    %second = bswap 32, 0x290158a80cd3d66530f74dc94c94adb88f5cdb481acca997b6e60071f08a115f
    %third = bswap 32, 0x2f997f3dbd66a7afe07fe7862ce239edba9e05c5afff7f8a1259c9733b2dfbb9
    %fourth = bswap 32, 0x29d1691530ca701b4a106054688728c9972c8512e9789e9567aae23e302ccd75
    store %first, 1, 128, 32
    store %second, 1, 160, 32
    store %third, 1, 192, 32
    store %fourth, 1, 224, 32
    %g2_2 = load 1, 0, 384
  loop:
    %not = iszero %i
    br %not, end
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %status, $val = call $op at %addr ($val2) send %value, gaslimit %gas
    %i = sub %i, 1
    br loop
  end:
    ret void
  }

}
